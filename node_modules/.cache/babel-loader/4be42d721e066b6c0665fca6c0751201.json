{"ast":null,"code":"import { useEffect } from 'react';\nimport { isClient } from './util';\nvar defaultTarget = isClient ? window : null;\n\nvar useEvent = function (name, handler, target, options) {\n  if (target === void 0) {\n    target = defaultTarget;\n  }\n\n  useEffect(function () {\n    if (!handler) {\n      return;\n    }\n\n    if (!target) {\n      return;\n    }\n\n    var fn = target.addEventListener || target.on;\n    fn.call(target, name, handler, options);\n    return function () {\n      var cleanFn = target.removeEventListener || target.off;\n      cleanFn.call(target, name, handler, options);\n    };\n  }, [name, handler, target, JSON.stringify(options)]);\n};\n\nexport default useEvent;","map":{"version":3,"sources":["/workspace/uniswap-info/node_modules/react-use/esm/useEvent.js"],"names":["useEffect","isClient","defaultTarget","window","useEvent","name","handler","target","options","fn","addEventListener","on","call","cleanFn","removeEventListener","off","JSON","stringify"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,IAAIC,aAAa,GAAGD,QAAQ,GAAGE,MAAH,GAAY,IAAxC;;AACA,IAAIC,QAAQ,GAAG,UAAUC,IAAV,EAAgBC,OAAhB,EAAyBC,MAAzB,EAAiCC,OAAjC,EAA0C;AACrD,MAAID,MAAM,KAAK,KAAK,CAApB,EAAuB;AAAEA,IAAAA,MAAM,GAAGL,aAAT;AAAyB;;AAClDF,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAI,CAACM,OAAL,EAAc;AACV;AACH;;AACD,QAAI,CAACC,MAAL,EAAa;AACT;AACH;;AACD,QAAIE,EAAE,GAAGF,MAAM,CAACG,gBAAP,IAA2BH,MAAM,CAACI,EAA3C;AACAF,IAAAA,EAAE,CAACG,IAAH,CAAQL,MAAR,EAAgBF,IAAhB,EAAsBC,OAAtB,EAA+BE,OAA/B;AACA,WAAO,YAAY;AACf,UAAIK,OAAO,GAAGN,MAAM,CAACO,mBAAP,IAA8BP,MAAM,CAACQ,GAAnD;AACAF,MAAAA,OAAO,CAACD,IAAR,CAAaL,MAAb,EAAqBF,IAArB,EAA2BC,OAA3B,EAAoCE,OAApC;AACH,KAHD;AAIH,GAbQ,EAaN,CAACH,IAAD,EAAOC,OAAP,EAAgBC,MAAhB,EAAwBS,IAAI,CAACC,SAAL,CAAeT,OAAf,CAAxB,CAbM,CAAT;AAcH,CAhBD;;AAiBA,eAAeJ,QAAf","sourcesContent":["import { useEffect } from 'react';\nimport { isClient } from './util';\nvar defaultTarget = isClient ? window : null;\nvar useEvent = function (name, handler, target, options) {\n    if (target === void 0) { target = defaultTarget; }\n    useEffect(function () {\n        if (!handler) {\n            return;\n        }\n        if (!target) {\n            return;\n        }\n        var fn = target.addEventListener || target.on;\n        fn.call(target, name, handler, options);\n        return function () {\n            var cleanFn = target.removeEventListener || target.off;\n            cleanFn.call(target, name, handler, options);\n        };\n    }, [name, handler, target, JSON.stringify(options)]);\n};\nexport default useEvent;\n"]},"metadata":{},"sourceType":"module"}