{"ast":null,"code":"import _regeneratorRuntime from\"/workspace/uniswap-info/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/workspace/uniswap-info/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/workspace/uniswap-info/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';import dayjs from'dayjs';import utc from'dayjs/plugin/utc';import{client}from'../apollo/client';import{UNISWAP_CHART_QUERY}from'../apollo/queries';export function useUniswapHistory(daysToQuery){dayjs.extend(utc);var _useState=useState([]),_useState2=_slicedToArray(_useState,2),uniswapData=_useState2[0],setUniswapData=_useState2[1];useEffect(function(){var fetchChartData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(daysToQuery){var utcEndTime,utcStartTime,startTime,data,dataEnd,result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;// current time\nutcEndTime=dayjs.utc();_context.t0=daysToQuery;_context.next=_context.t0==='all'?5:_context.t0==='3months'?7:_context.t0==='1month'?9:_context.t0==='1week'?11:11;break;case 5:utcStartTime=utcEndTime.subtract(1,'year').startOf('year');return _context.abrupt(\"break\",13);case 7:utcStartTime=utcEndTime.subtract(3,'month');return _context.abrupt(\"break\",13);case 9:utcStartTime=utcEndTime.subtract(1,'month');return _context.abrupt(\"break\",13);case 11:utcStartTime=utcEndTime.subtract(7,'day').startOf('day');return _context.abrupt(\"break\",13);case 13:startTime=utcStartTime.unix()-1;//because we filter on greater than in the query\ndata=[];dataEnd=false;case 16:if(dataEnd){_context.next=23;break;}_context.next=19;return client.query({query:UNISWAP_CHART_QUERY,variables:{date:startTime},fetchPolicy:'cache-first'});case 19:result=_context.sent;if(result){data=data.concat(result.data.uniswapDayDatas);if(result.data.uniswapDayDatas.length!==100){dataEnd=true;}else{startTime=result.data.uniswapDayDatas[result.data.uniswapDayDatas.length-1].date;}}_context.next=16;break;case 23:/**\n         *  Format data for chart\n         */data.forEach(function(dayData,i){data[i].dayString=data[i].date;data[i].ethVolume=parseFloat(data[i].totalVolumeInEth);data[i].usdVolume=parseFloat(data[i].totalVolumeUSD);data[i].dailyEthVolume=parseFloat(data[i].dailyVolumeInETH);data[i].dailyUSDVolume=parseFloat(data[i].dailyVolumeInUSD);data[i].ethLiquidity=parseFloat(data[i].totalLiquidityInEth);data[i].usdLiquidity=parseFloat(data[i].totalLiquidityUSD);data[i].txCount=parseFloat(data[i].txCount);});setUniswapData(data);// remove first value\n_context.next=30;break;case 27:_context.prev=27;_context.t1=_context[\"catch\"](0);console.log('error: ',_context.t1);case 30:case\"end\":return _context.stop();}}},_callee,null,[[0,27]]);}));return function fetchChartData(_x){return _ref.apply(this,arguments);};}();fetchChartData(daysToQuery);},[daysToQuery]);return uniswapData;}","map":{"version":3,"sources":["/workspace/uniswap-info/src/Data/UniswapHistory.js"],"names":["useEffect","useState","dayjs","utc","client","UNISWAP_CHART_QUERY","useUniswapHistory","daysToQuery","extend","uniswapData","setUniswapData","fetchChartData","utcEndTime","utcStartTime","subtract","startOf","startTime","unix","data","dataEnd","query","variables","date","fetchPolicy","result","concat","uniswapDayDatas","length","forEach","dayData","i","dayString","ethVolume","parseFloat","totalVolumeInEth","usdVolume","totalVolumeUSD","dailyEthVolume","dailyVolumeInETH","dailyUSDVolume","dailyVolumeInUSD","ethLiquidity","totalLiquidityInEth","usdLiquidity","totalLiquidityUSD","txCount","console","log"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\n\nimport { client } from '../apollo/client'\nimport { UNISWAP_CHART_QUERY } from '../apollo/queries'\n\nexport function useUniswapHistory(daysToQuery) {\n  dayjs.extend(utc)\n  const [uniswapData, setUniswapData] = useState([])\n  useEffect(() => {\n    const fetchChartData = async function(daysToQuery) {\n      try {\n        // current time\n        const utcEndTime = dayjs.utc()\n\n        let utcStartTime\n        // go back, go way way back\n        switch (daysToQuery) {\n          case 'all':\n            utcStartTime = utcEndTime.subtract(1, 'year').startOf('year')\n            break\n          case '3months':\n            utcStartTime = utcEndTime.subtract(3, 'month')\n            break\n          case '1month':\n            utcStartTime = utcEndTime.subtract(1, 'month')\n            break\n          case '1week':\n          default:\n            utcStartTime = utcEndTime.subtract(7, 'day').startOf('day')\n            break\n        }\n        let startTime = utcStartTime.unix() - 1 //because we filter on greater than in the query\n\n        let data = []\n        let dataEnd = false\n        while (!dataEnd) {\n          let result = await client.query({\n            query: UNISWAP_CHART_QUERY,\n            variables: {\n              date: startTime\n            },\n            fetchPolicy: 'cache-first'\n          })\n          if (result) {\n            data = data.concat(result.data.uniswapDayDatas)\n            if (result.data.uniswapDayDatas.length !== 100) {\n              dataEnd = true\n            } else {\n              startTime = result.data.uniswapDayDatas[result.data.uniswapDayDatas.length - 1].date\n            }\n          }\n        }\n\n        /**\n         *  Format data for chart\n         */\n        data.forEach((dayData, i) => {\n          data[i].dayString = data[i].date\n          data[i].ethVolume = parseFloat(data[i].totalVolumeInEth)\n          data[i].usdVolume = parseFloat(data[i].totalVolumeUSD)\n          data[i].dailyEthVolume = parseFloat(data[i].dailyVolumeInETH)\n          data[i].dailyUSDVolume = parseFloat(data[i].dailyVolumeInUSD)\n          data[i].ethLiquidity = parseFloat(data[i].totalLiquidityInEth)\n          data[i].usdLiquidity = parseFloat(data[i].totalLiquidityUSD)\n          data[i].txCount = parseFloat(data[i].txCount)\n        })\n        setUniswapData(data) // remove first value\n      } catch (err) {\n        console.log('error: ', err)\n      }\n    }\n    fetchChartData(daysToQuery)\n  }, [daysToQuery])\n\n  return uniswapData\n}\n"]},"metadata":{},"sourceType":"module"}