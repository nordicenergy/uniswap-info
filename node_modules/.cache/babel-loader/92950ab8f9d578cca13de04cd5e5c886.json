{"ast":null,"code":"var _jsxFileName = \"/workspace/uniswap-info/src/components/Select/popout.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'rebass';\nimport styled from 'styled-components';\nimport Select from 'react-select';\nconst selectStyles = {\n  control: styles => ({ ...styles,\n    padding: '1rem',\n    border: 'none',\n    backgroundColor: 'transparent',\n    borderBottom: '1px solid #e1e1e1',\n    boxShadow: 'none',\n    borderRadius: 0,\n    ':hover': {\n      borderColor: '#e1e1e1'\n    }\n  }),\n  valueContainer: styles => ({ ...styles,\n    padding: 0\n  }),\n  menu: () => null\n};\nexport default class Popout extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isOpen: false,\n      value: undefined\n    };\n\n    this.toggleOpen = () => {\n      this.setState(state => ({\n        isOpen: !state.isOpen\n      }));\n    };\n\n    this.onSelectChange = value => {\n      this.toggleOpen();\n      this.setState({\n        value\n      });\n    };\n  }\n\n  render() {\n    const {\n      isOpen,\n      value\n    } = this.state;\n    return React.createElement(Dropdown, {\n      isOpen: isOpen,\n      onClose: this.toggleOpen,\n      target: React.createElement(Button, {\n        border: \"text\",\n        color: \"text\",\n        variant: \"outline\",\n        onClick: this.toggleOpen,\n        style: {\n          whiteSpace: 'nowrap',\n          overflow: 'hidden',\n          textOverflow: 'ellipsis'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, value ? value.label : 'Select...'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Select, {\n      autoFocus: true,\n      backspaceRemovesValue: false,\n      components: {\n        DropdownIndicator,\n        IndicatorSeparator: null\n      },\n      controlShouldRenderValue: false,\n      hideSelectedOptions: false,\n      isClearable: false,\n      menuIsOpen: true,\n      onChange: this.onSelectChange,\n      options: this.props.data,\n      placeholder: \"Search...\",\n      styles: selectStyles,\n      tabSelectsValue: false,\n      value: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }));\n  }\n\n} // styled components\n\nconst Wrapper = styled.div`\n  @media only screen and (min-width: 768px) {\n    max-width: 560px;\n    max-height: 768px;\n    position: absolute;\n    margin-left: auto;\n    margin-right: auto;\n    border-radius: 1rem;\n    padding-bottom: 1rem;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    top: 0;\n    margin-top: 4rem;\n  }\n\n  background-color: #fff;\n  position: relative;\n  bottom: 21rem;\n  width: 100%;\n  height: 21rem;\n  z-index: 2000;\n  border-top-left-radius: 1rem;\n  border-top-right-radius: 1rem;\n  transition: 0.25s ease-in-out;\n`;\n\nconst Menu = props => React.createElement(Wrapper, Object.assign({}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 109\n  },\n  __self: this\n}));\n\nconst Blanket = props => React.createElement(\"div\", Object.assign({\n  style: {\n    bottom: 0,\n    left: 0,\n    top: 0,\n    right: 0,\n    backgroundColor: 'rgba(0,0,0,0.6)',\n    position: 'fixed',\n    zIndex: 1\n  }\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 112\n  },\n  __self: this\n}));\n\nconst Dropdown = ({\n  children,\n  isOpen,\n  target,\n  onClose\n}) => React.createElement(React.Fragment, null, target, isOpen ? React.createElement(Menu, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 129\n  },\n  __self: this\n}, children) : null, isOpen ? React.createElement(Blanket, {\n  onClick: onClose,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 130\n  },\n  __self: this\n}) : null);\n\nconst DropdownIndicator = () => React.createElement(\"span\", {\n  role: \"img\",\n  \"aria-label\": \"Search\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 135\n  },\n  __self: this\n}, \"\\uD83D\\uDD0E\");","map":{"version":3,"sources":["/workspace/uniswap-info/src/components/Select/popout.js"],"names":["React","Component","Button","styled","Select","selectStyles","control","styles","padding","border","backgroundColor","borderBottom","boxShadow","borderRadius","borderColor","valueContainer","menu","Popout","state","isOpen","value","undefined","toggleOpen","setState","onSelectChange","render","whiteSpace","overflow","textOverflow","label","DropdownIndicator","IndicatorSeparator","props","data","Wrapper","div","Menu","Blanket","bottom","left","top","right","position","zIndex","Dropdown","children","target","onClose"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Button } from 'rebass'\nimport styled from 'styled-components'\n\nimport Select from 'react-select'\n\nconst selectStyles = {\n  control: styles => ({\n    ...styles,\n    padding: '1rem',\n    border: 'none',\n    backgroundColor: 'transparent',\n    borderBottom: '1px solid #e1e1e1',\n    boxShadow: 'none',\n    borderRadius: 0,\n    ':hover': {\n      borderColor: '#e1e1e1'\n    }\n  }),\n  valueContainer: styles => ({\n    ...styles,\n    padding: 0\n  }),\n  menu: () => null\n}\n\nexport default class Popout extends Component {\n  state = { isOpen: false, value: undefined }\n  toggleOpen = () => {\n    this.setState(state => ({ isOpen: !state.isOpen }))\n  }\n\n  onSelectChange = value => {\n    this.toggleOpen()\n    this.setState({ value })\n  }\n\n  render() {\n    const { isOpen, value } = this.state\n    return (\n      <Dropdown\n        isOpen={isOpen}\n        onClose={this.toggleOpen}\n        target={\n          <Button\n            border=\"text\"\n            color=\"text\"\n            variant=\"outline\"\n            onClick={this.toggleOpen}\n            style={{\n              whiteSpace: 'nowrap',\n              overflow: 'hidden',\n              textOverflow: 'ellipsis'\n            }}\n          >\n            {value ? value.label : 'Select...'}\n          </Button>\n        }\n      >\n        <Select\n          autoFocus\n          backspaceRemovesValue={false}\n          components={{ DropdownIndicator, IndicatorSeparator: null }}\n          controlShouldRenderValue={false}\n          hideSelectedOptions={false}\n          isClearable={false}\n          menuIsOpen\n          onChange={this.onSelectChange}\n          options={this.props.data}\n          placeholder=\"Search...\"\n          styles={selectStyles}\n          tabSelectsValue={false}\n          value={value}\n        />\n      </Dropdown>\n    )\n  }\n}\n\n// styled components\n\nconst Wrapper = styled.div`\n  @media only screen and (min-width: 768px) {\n    max-width: 560px;\n    max-height: 768px;\n    position: absolute;\n    margin-left: auto;\n    margin-right: auto;\n    border-radius: 1rem;\n    padding-bottom: 1rem;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    top: 0;\n    margin-top: 4rem;\n  }\n\n  background-color: #fff;\n  position: relative;\n  bottom: 21rem;\n  width: 100%;\n  height: 21rem;\n  z-index: 2000;\n  border-top-left-radius: 1rem;\n  border-top-right-radius: 1rem;\n  transition: 0.25s ease-in-out;\n`\n\nconst Menu = props => <Wrapper {...props} />\n\nconst Blanket = props => (\n  <div\n    style={{\n      bottom: 0,\n      left: 0,\n      top: 0,\n      right: 0,\n      backgroundColor: 'rgba(0,0,0,0.6)',\n      position: 'fixed',\n      zIndex: 1\n    }}\n    {...props}\n  />\n)\n\nconst Dropdown = ({ children, isOpen, target, onClose }) => (\n  <>\n    {target}\n    {isOpen ? <Menu>{children}</Menu> : null}\n    {isOpen ? <Blanket onClick={onClose} /> : null}\n  </>\n)\n\nconst DropdownIndicator = () => (\n  <span role=\"img\" aria-label=\"Search\">\n    🔎\n  </span>\n)\n"]},"metadata":{},"sourceType":"module"}