{"ast":null,"code":"var _jsxFileName = \"/workspace/uniswap-info/src/pages/OverviewPage.js\";\nimport React, { useState } from 'react';\nimport { Box, Flex, Text } from 'rebass';\nimport styled from 'styled-components';\nimport FourByFour from '../components/FourByFour';\nimport Panel from '../components/Panel';\nimport Select from '../components/Select';\nimport Footer from '../components/Footer';\nimport OverviewList from '../components/OverviewList';\nimport OverviewChart from '../components/OverviewChart';\nimport Loader from '../components/Loader';\nimport { formattedNum } from '../helpers';\nimport { Divider, Hint } from '../components';\nimport { getTimeFrame } from '../constants';\nconst timeframeOptions = [{\n  value: '1week',\n  label: '1 week'\n}, {\n  value: '1month',\n  label: '1 month'\n}, {\n  value: '3months',\n  label: '3 months'\n}, {\n  value: 'all',\n  label: 'All time'\n}];\nconst SmallText = styled.span`\n  font-size: 0.6em;\n`;\nconst ThemedBackground = styled(Box)`\n  position: absolute;\n  height: 365px;\n  z-index: -1;\n  top: 0;\n  width: 100vw;\n\n  @media screen and (max-width: 64em) {\n    height: 559px;\n  }\n\n  ${props => !props.last}\n`;\nconst TopPanel = styled(Panel)`\n  background-color: rgba(255, 255, 255, 0.15);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  @media screen and (max-width: 64em) {\n    width: 100%;\n    border-radius: 0\n\n    &:nth-of-type(3) {\n      margin-bottom: 20px;\n      border-radius: 0 0 1em 1em;\n    }\n\n    &:first-of-type {\n      border-radius: 1em 1em 0 0;\n    }\n  }\n`;\nconst TextOption = styled(Text)`\n  &:hover {\n    cursor: pointer;\n  }\n`;\nconst TokenHeader = styled(Box)`\n  color: white;\n  font-weight: 600;\n  font-size: 32px;\n  width: 100%;\n  padding: 20px;\n  padding-top: 24px;\n  padding-bottom: 20px;\n  display: flex;\n  margin: auto;\n  max-width: 1240px;\n  flex-direction: column;\n  align-items: flex-start;\n\n  @media screen and (min-width: 64em) {\n    display: flex;\n    flex-direction: row;\n    font-size: 32px;\n    align-items: flex-end;\n    justify-content: flex-start;\n    padding-left: 2.5rem;\n    padding-right: 24px;\n    max-width: 1320px;\n  }\n`;\nconst ChartWrapper = styled(Panel)`\n  boxshadow: 0px 4px 20px rgba(239, 162, 250, 0.15);\n\n  @media screen and (max-width: 64em) {\n    margin-bottom: 20px;\n    border-radius: 12px;\n  }\n`;\nconst OverviewDashboard = styled(Box)`\n  width: 100%;\n  display: grid;\n  padding-right: 10px;\n  padding-left: 10px;\n  grid-template-columns: 100%;\n  grid-template-areas:\n    'volume'\n    'liquidity'\n    'shares'\n    'statistics'\n    'exchange'\n    'transactions';\n\n  @media screen and (min-width: 64em) {\n    max-width: 1280px;\n    grid-gap: 24px;\n    padding-right: 20px;\n    padding-left: 20px;\n    width: 100%;\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-template-areas:\n      'volume  liquidity  shares '\n      'statistics  statistics statistics'\n      'statistics  statistics statistics'\n      'listOptions listOptions listOptions'\n      'transactions  transactions transactions';\n  }\n`;\nconst DashboardWrapper = styled.div`\n  width: calc(100% - 40px);\n  padding-left: 20px;\n  padding-right: 20px;\n\n  @media screen and (max-width: 40em) {\n    width: 100%;\n    padding: 0;\n  }\n`;\n\nfunction getPercentSign(value) {\n  const parsedValue = parseFloat(value);\n  return React.createElement(Text, {\n    fontSize: 14,\n    lineHeight: 1.2,\n    color: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, parsedValue < 0 ? value + '% ↓' : parsedValue === 0 ? value + '%' : value + '% ↑');\n}\n\nconst FloatRight = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-end;\n  margin-top: 1rem;\n  font-size: 10px;\n  color: #333333;\n  font-weight: 500;\n`;\nexport const OverviewPage = function ({\n  exchangeAddress,\n  uniswapHistory,\n  currencyUnit,\n  globalData,\n  updateTimeframe,\n  historyDaysToQuery\n}) {\n  const [chartOption, setChartOption] = useState('liquidity');\n  return React.createElement(\"div\", {\n    style: {\n      marginTop: '0px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(ThemedBackground, {\n    bg: \"black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }), globalData ? React.createElement(DashboardWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(TokenHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"Uniswap Overview\")), React.createElement(OverviewDashboard, {\n    mx: \"auto\",\n    px: [0, 3],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(TopPanel, {\n    rounded: true,\n    color: \"white\",\n    p: 24,\n    style: {\n      gridArea: 'volume'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(FourByFour, {\n    topLeft: React.createElement(Hint, {\n      color: \"textLight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Volume (24hrs)\"),\n    bottomLeft: React.createElement(Text, {\n      fontSize: 24,\n      lineHeight: 1,\n      fontWeight: 500,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, currencyUnit === 'USD' ? '$' + formattedNum(parseFloat(globalData.dailyVolumeUSD), true) : 'Ξ ' + formattedNum(parseFloat(globalData.dailyVolumeETH)), currencyUnit !== 'USD' ? React.createElement(SmallText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \" ETH\") : ''),\n    bottomRight: globalData.volumePercentChange && isFinite(globalData.volumePercentChange) ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, currencyUnit === 'USD' ? getPercentSign(globalData.volumePercentChangeUSD) : getPercentSign(globalData.volumePercentChange)) : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  })), React.createElement(TopPanel, {\n    rounded: true,\n    color: \"white\",\n    p: 24,\n    style: {\n      gridArea: 'liquidity'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(FourByFour, {\n    topLeft: React.createElement(Hint, {\n      color: \"textLight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Total Liquidity\"),\n    bottomLeft: React.createElement(Text, {\n      fontSize: 24,\n      lineHeight: 1,\n      fontWeight: 500,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, globalData.liquidityEth ? currencyUnit !== 'USD' ? 'Ξ ' + formattedNum(parseFloat(globalData.liquidityEth)) : '$' + formattedNum(parseFloat(globalData.liquidityUsd), true) : '-', currencyUnit === 'USD' ? '' : React.createElement(SmallText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \" ETH\")),\n    bottomRight: globalData.liquidityPercentChange ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, currencyUnit === 'USD' ? getPercentSign(globalData.liquidityPercentChangeUSD) : getPercentSign(globalData.liquidityPercentChange)) : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  })), React.createElement(TopPanel, {\n    rounded: true,\n    bg: \"white\",\n    color: \"white\",\n    style: {\n      gridArea: 'shares'\n    },\n    p: 24,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, React.createElement(FourByFour, {\n    topLeft: React.createElement(Hint, {\n      color: \"textLight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"Transactions (24hrs)\"),\n    bottomLeft: React.createElement(Text, {\n      fontSize: 24,\n      lineHeight: 1,\n      fontWeight: 500,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, formattedNum(globalData.txCount)),\n    bottomRight: globalData.txCountPercentChange ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, getPercentSign(globalData.txCountPercentChange)) : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  })), React.createElement(ChartWrapper, {\n    rounded: true,\n    bg: \"white\",\n    area: \"statistics\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, React.createElement(Box, {\n    p: 24,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    height: 18,\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, React.createElement(TextOption, {\n    color: chartOption === 'liquidity' ? 'inherit' : 'grey',\n    onClick: e => {\n      setChartOption('liquidity');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, \"Liquidity\"), React.createElement(TextOption, {\n    style: {\n      marginLeft: '2em'\n    },\n    color: chartOption === 'volume' ? 'inherit' : 'grey',\n    onClick: e => {\n      setChartOption('volume');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, \"Volume\")), React.createElement(Box, {\n    width: 144,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, React.createElement(Select, {\n    placeholder: \"Timeframe\",\n    options: timeframeOptions,\n    defaultValue: getTimeFrame(historyDaysToQuery),\n    onChange: select => {\n      updateTimeframe(select.value);\n    },\n    customStyles: {\n      backgroundColor: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  })))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }), React.createElement(Box, {\n    p: 24,\n    style: {\n      boxShadow: '0px 4px 20px rgba(239, 162, 250, 0.15)',\n      borderRadius: '10px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281\n    },\n    __self: this\n  }, uniswapHistory && uniswapHistory.length > 0 ? React.createElement(OverviewChart, {\n    data: uniswapHistory,\n    currencyUnit: currencyUnit,\n    chartOption: chartOption,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }) : React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285\n    },\n    __self: this\n  }), React.createElement(FloatRight, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287\n    },\n    __self: this\n  }, \"UTC\\xB100:00\"))), React.createElement(Panel, {\n    rounded: true,\n    bg: \"white\",\n    area: \"transactions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }, React.createElement(OverviewList, {\n    currencyUnit: currencyUnit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  })))) : '', React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/workspace/uniswap-info/src/pages/OverviewPage.js"],"names":["React","useState","Box","Flex","Text","styled","FourByFour","Panel","Select","Footer","OverviewList","OverviewChart","Loader","formattedNum","Divider","Hint","getTimeFrame","timeframeOptions","value","label","SmallText","span","ThemedBackground","props","last","TopPanel","TextOption","TokenHeader","ChartWrapper","OverviewDashboard","DashboardWrapper","div","getPercentSign","parsedValue","parseFloat","FloatRight","OverviewPage","exchangeAddress","uniswapHistory","currencyUnit","globalData","updateTimeframe","historyDaysToQuery","chartOption","setChartOption","marginTop","gridArea","dailyVolumeUSD","dailyVolumeETH","volumePercentChange","isFinite","volumePercentChangeUSD","liquidityEth","liquidityUsd","liquidityPercentChange","liquidityPercentChangeUSD","txCount","txCountPercentChange","e","marginLeft","select","backgroundColor","boxShadow","borderRadius","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Box, Flex, Text } from 'rebass'\nimport styled from 'styled-components'\nimport FourByFour from '../components/FourByFour'\nimport Panel from '../components/Panel'\nimport Select from '../components/Select'\nimport Footer from '../components/Footer'\nimport OverviewList from '../components/OverviewList'\nimport OverviewChart from '../components/OverviewChart'\nimport Loader from '../components/Loader'\nimport { formattedNum } from '../helpers'\nimport { Divider, Hint } from '../components'\nimport { getTimeFrame } from '../constants'\n\nconst timeframeOptions = [\n  { value: '1week', label: '1 week' },\n  { value: '1month', label: '1 month' },\n  { value: '3months', label: '3 months' },\n  { value: 'all', label: 'All time' }\n]\n\nconst SmallText = styled.span`\n  font-size: 0.6em;\n`\n\nconst ThemedBackground = styled(Box)`\n  position: absolute;\n  height: 365px;\n  z-index: -1;\n  top: 0;\n  width: 100vw;\n\n  @media screen and (max-width: 64em) {\n    height: 559px;\n  }\n\n  ${props => !props.last}\n`\n\nconst TopPanel = styled(Panel)`\n  background-color: rgba(255, 255, 255, 0.15);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  @media screen and (max-width: 64em) {\n    width: 100%;\n    border-radius: 0\n\n    &:nth-of-type(3) {\n      margin-bottom: 20px;\n      border-radius: 0 0 1em 1em;\n    }\n\n    &:first-of-type {\n      border-radius: 1em 1em 0 0;\n    }\n  }\n`\n\nconst TextOption = styled(Text)`\n  &:hover {\n    cursor: pointer;\n  }\n`\n\nconst TokenHeader = styled(Box)`\n  color: white;\n  font-weight: 600;\n  font-size: 32px;\n  width: 100%;\n  padding: 20px;\n  padding-top: 24px;\n  padding-bottom: 20px;\n  display: flex;\n  margin: auto;\n  max-width: 1240px;\n  flex-direction: column;\n  align-items: flex-start;\n\n  @media screen and (min-width: 64em) {\n    display: flex;\n    flex-direction: row;\n    font-size: 32px;\n    align-items: flex-end;\n    justify-content: flex-start;\n    padding-left: 2.5rem;\n    padding-right: 24px;\n    max-width: 1320px;\n  }\n`\n\nconst ChartWrapper = styled(Panel)`\n  boxshadow: 0px 4px 20px rgba(239, 162, 250, 0.15);\n\n  @media screen and (max-width: 64em) {\n    margin-bottom: 20px;\n    border-radius: 12px;\n  }\n`\n\nconst OverviewDashboard = styled(Box)`\n  width: 100%;\n  display: grid;\n  padding-right: 10px;\n  padding-left: 10px;\n  grid-template-columns: 100%;\n  grid-template-areas:\n    'volume'\n    'liquidity'\n    'shares'\n    'statistics'\n    'exchange'\n    'transactions';\n\n  @media screen and (min-width: 64em) {\n    max-width: 1280px;\n    grid-gap: 24px;\n    padding-right: 20px;\n    padding-left: 20px;\n    width: 100%;\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-template-areas:\n      'volume  liquidity  shares '\n      'statistics  statistics statistics'\n      'statistics  statistics statistics'\n      'listOptions listOptions listOptions'\n      'transactions  transactions transactions';\n  }\n`\n\nconst DashboardWrapper = styled.div`\n  width: calc(100% - 40px);\n  padding-left: 20px;\n  padding-right: 20px;\n\n  @media screen and (max-width: 40em) {\n    width: 100%;\n    padding: 0;\n  }\n`\n\nfunction getPercentSign(value) {\n  const parsedValue = parseFloat(value)\n  return (\n    <Text fontSize={14} lineHeight={1.2} color=\"white\">\n      {parsedValue < 0 ? value + '% ↓' : parsedValue === 0 ? value + '%' : value + '% ↑'}\n    </Text>\n  )\n}\n\nconst FloatRight = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-end;\n  margin-top: 1rem;\n  font-size: 10px;\n  color: #333333;\n  font-weight: 500;\n`\n\nexport const OverviewPage = function({\n  exchangeAddress,\n  uniswapHistory,\n  currencyUnit,\n  globalData,\n  updateTimeframe,\n  historyDaysToQuery\n}) {\n  const [chartOption, setChartOption] = useState('liquidity')\n\n  return (\n    <div style={{ marginTop: '0px' }}>\n      <ThemedBackground bg=\"black\" />\n      {globalData ? (\n        <DashboardWrapper>\n          <TokenHeader>\n            <div>Uniswap Overview</div>\n          </TokenHeader>\n          <OverviewDashboard mx=\"auto\" px={[0, 3]}>\n            <TopPanel rounded color=\"white\" p={24} style={{ gridArea: 'volume' }}>\n              <FourByFour\n                topLeft={<Hint color=\"textLight\">Volume (24hrs)</Hint>}\n                bottomLeft={\n                  <Text fontSize={24} lineHeight={1} fontWeight={500}>\n                    {currencyUnit === 'USD'\n                      ? '$' + formattedNum(parseFloat(globalData.dailyVolumeUSD), true)\n                      : 'Ξ ' + formattedNum(parseFloat(globalData.dailyVolumeETH))}\n                    {currencyUnit !== 'USD' ? <SmallText> ETH</SmallText> : ''}\n                  </Text>\n                }\n                bottomRight={\n                  globalData.volumePercentChange && isFinite(globalData.volumePercentChange) ? (\n                    <div>\n                      {currencyUnit === 'USD'\n                        ? getPercentSign(globalData.volumePercentChangeUSD)\n                        : getPercentSign(globalData.volumePercentChange)}\n                    </div>\n                  ) : (\n                    ''\n                  )\n                }\n              />\n            </TopPanel>\n            <TopPanel rounded color=\"white\" p={24} style={{ gridArea: 'liquidity' }}>\n              <FourByFour\n                topLeft={<Hint color=\"textLight\">Total Liquidity</Hint>}\n                bottomLeft={\n                  <Text fontSize={24} lineHeight={1} fontWeight={500}>\n                    {globalData.liquidityEth\n                      ? currencyUnit !== 'USD'\n                        ? 'Ξ ' + formattedNum(parseFloat(globalData.liquidityEth))\n                        : '$' + formattedNum(parseFloat(globalData.liquidityUsd), true)\n                      : '-'}\n                    {currencyUnit === 'USD' ? '' : <SmallText> ETH</SmallText>}\n                  </Text>\n                }\n                bottomRight={\n                  globalData.liquidityPercentChange ? (\n                    <div>\n                      {currencyUnit === 'USD'\n                        ? getPercentSign(globalData.liquidityPercentChangeUSD)\n                        : getPercentSign(globalData.liquidityPercentChange)}\n                    </div>\n                  ) : (\n                    ''\n                  )\n                }\n              />\n            </TopPanel>\n            <TopPanel rounded bg=\"white\" color=\"white\" style={{ gridArea: 'shares' }} p={24}>\n              <FourByFour\n                topLeft={<Hint color=\"textLight\">Transactions (24hrs)</Hint>}\n                bottomLeft={\n                  <Text fontSize={24} lineHeight={1} fontWeight={500}>\n                    {formattedNum(globalData.txCount)}\n                  </Text>\n                }\n                bottomRight={\n                  globalData.txCountPercentChange ? <div>{getPercentSign(globalData.txCountPercentChange)}</div> : ''\n                }\n              />\n            </TopPanel>\n            <ChartWrapper rounded bg=\"white\" area=\"statistics\">\n              <Box p={24}>\n                <Flex height={18} alignItems=\"center\" justifyContent=\"space-between\">\n                  <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                    <TextOption\n                      color={chartOption === 'liquidity' ? 'inherit' : 'grey'}\n                      onClick={e => {\n                        setChartOption('liquidity')\n                      }}\n                    >\n                      Liquidity\n                    </TextOption>\n                    <TextOption\n                      style={{ marginLeft: '2em' }}\n                      color={chartOption === 'volume' ? 'inherit' : 'grey'}\n                      onClick={e => {\n                        setChartOption('volume')\n                      }}\n                    >\n                      Volume\n                    </TextOption>\n                  </Flex>\n                  <Box width={144}>\n                    <Select\n                      placeholder=\"Timeframe\"\n                      options={timeframeOptions}\n                      defaultValue={getTimeFrame(historyDaysToQuery)}\n                      onChange={select => {\n                        updateTimeframe(select.value)\n                      }}\n                      customStyles={{ backgroundColor: 'white' }}\n                    />\n                  </Box>\n                </Flex>\n              </Box>\n              <Divider />\n              <Box p={24} style={{ boxShadow: '0px 4px 20px rgba(239, 162, 250, 0.15)', borderRadius: '10px' }}>\n                {uniswapHistory && uniswapHistory.length > 0 ? (\n                  <OverviewChart data={uniswapHistory} currencyUnit={currencyUnit} chartOption={chartOption} />\n                ) : (\n                  <Loader />\n                )}\n                <FloatRight>UTC±00:00</FloatRight>\n              </Box>\n            </ChartWrapper>\n            <Panel rounded bg=\"white\" area=\"transactions\">\n              <OverviewList currencyUnit={currencyUnit} />\n            </Panel>\n          </OverviewDashboard>\n        </DashboardWrapper>\n      ) : (\n        ''\n      )}\n      <Footer />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}