{"ast":null,"code":"import _slicedToArray from\"/workspace/uniswap-info/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{ExchangePage}from'../components/ExchangePage';import LocalLoader from'../components/LocalLoader';import{useExchangeSpecificData}from'../Data/ExchangeSpecificData';import{useChart}from'../Data/ChartData';import{setThemeColor,isAddress}from'../helpers';import{darken}from'polished';import Vibrant from'node-vibrant';import{hex}from'wcag-contrast';export var ExchangeWrapper=function ExchangeWrapper(_ref){var address=_ref.address,exchanges=_ref.exchanges,currencyUnit=_ref.currencyUnit,historyDaysToQuery=_ref.historyDaysToQuery,setHistoryDaysToQuery=_ref.setHistoryDaysToQuery;var exchangeData=useExchangeSpecificData(address);var chartData=useChart(address,historyDaysToQuery);var _useState=useState(''),_useState2=_slicedToArray(_useState,2),tokenName=_useState2[0],setTokenName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),tokenSymbol=_useState4[0],setTokenSymbol=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),logo=_useState6[0],setLogo=_useState6[1];var _useState7=useState({}),_useState8=_slicedToArray(_useState7,2),currentData=_useState8[0],setCurrentData=_useState8[1];useEffect(function(){var updateData={};updateData.price=exchangeData.price;updateData.invPrice=exchangeData.invPrice;updateData.priceUSD=exchangeData.priceUSD;updateData.tokenAddress=exchangeData.tokenAddres;updateData.pricePercentChange=exchangeData.pricePercentChange;updateData.pricePercentChangeETH=exchangeData.pricePercentChangeETH;updateData.volumePercentChange=exchangeData.volumePercentChangeETH;updateData.volumePercentChangeUSD=exchangeData.volumePercentChangeUSD;updateData.liquidityPercentChange=exchangeData.liquidityPercentChangeETH;updateData.liquidityPercentChangeUSD=exchangeData.liquidityPercentChangeUSD;updateData.txsPercentChange=exchangeData.txsPercentChange;updateData.ethLiquidity=exchangeData.ethLiquidity;updateData.tradeVolume=exchangeData.tradeVolume;updateData.tradeVolumeUSD=exchangeData.tradeVolumeUSD;updateData.oneDayTxs=exchangeData.oneDayTxs;setCurrentData(updateData);},[exchangeData]);useEffect(function(){setCurrentData({});// reset data for UI\nif(exchanges.hasOwnProperty(address)){var tokenAddress=exchanges[address].tokenAddress;var path=\"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/\".concat(isAddress(tokenAddress),\"/logo.png\");Vibrant.from(path).getPalette(function(err,palette){if(palette&&palette.Vibrant){var detectedHex=palette.Vibrant.hex;var AAscore=hex(detectedHex,'#FFF');while(AAscore<3){detectedHex=darken(0.01,detectedHex);AAscore=hex(detectedHex,'#FFF');}setThemeColor(detectedHex);}});}else{setThemeColor('#333333');}},[address,exchanges]);useEffect(function(){if(exchanges.hasOwnProperty(address)){setTokenName(exchanges[address].tokenName);setTokenSymbol(exchanges[address].tokenSymbol);setLogo(exchanges[address].logoStyled);}},[exchanges,address]);return exchangeData?React.createElement(ExchangePage,{currencyUnit:currencyUnit,exchangeAddress:address,chartData:chartData,logo:logo,historyDaysToQuery:historyDaysToQuery,setHistoryDaysToQuery:setHistoryDaysToQuery,tokenName:tokenName,symbol:tokenSymbol,tokenAddress:exchangeData.tokenAddress,tradeVolume:currentData.tradeVolume,tradeVolumeUSD:currentData.tradeVolumeUSD,oneDayTxs:currentData.oneDayTxs,ethLiquidity:currentData.ethLiquidity,price:currentData.price,invPrice:currentData.invPrice,priceUSD:currentData.priceUSD,pricePercentChange:currentData.pricePercentChange,pricePercentChangeETH:currentData.pricePercentChangeETH,volumePercentChange:currentData.volumePercentChange,volumePercentChangeUSD:currentData.volumePercentChangeUSD,liquidityPercentChange:currentData.liquidityPercentChange,liquidityPercentChangeUSD:currentData.liquidityPercentChangeUSD,txsPercentChange:currentData.txsPercentChange}):React.createElement(LocalLoader,null);};","map":{"version":3,"sources":["/workspace/uniswap-info/src/pages/ExchangeWrapper.js"],"names":["React","useEffect","useState","ExchangePage","LocalLoader","useExchangeSpecificData","useChart","setThemeColor","isAddress","darken","Vibrant","hex","ExchangeWrapper","address","exchanges","currencyUnit","historyDaysToQuery","setHistoryDaysToQuery","exchangeData","chartData","tokenName","setTokenName","tokenSymbol","setTokenSymbol","logo","setLogo","currentData","setCurrentData","updateData","price","invPrice","priceUSD","tokenAddress","tokenAddres","pricePercentChange","pricePercentChangeETH","volumePercentChange","volumePercentChangeETH","volumePercentChangeUSD","liquidityPercentChange","liquidityPercentChangeETH","liquidityPercentChangeUSD","txsPercentChange","ethLiquidity","tradeVolume","tradeVolumeUSD","oneDayTxs","hasOwnProperty","path","from","getPalette","err","palette","detectedHex","AAscore","logoStyled"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { ExchangePage } from '../components/ExchangePage'\nimport LocalLoader from '../components/LocalLoader'\nimport { useExchangeSpecificData } from '../Data/ExchangeSpecificData'\nimport { useChart } from '../Data/ChartData'\nimport { setThemeColor, isAddress } from '../helpers'\nimport { darken } from 'polished'\nimport Vibrant from 'node-vibrant'\nimport { hex } from 'wcag-contrast'\n\nexport const ExchangeWrapper = function({\n  address,\n  exchanges,\n  currencyUnit,\n  historyDaysToQuery,\n  setHistoryDaysToQuery\n}) {\n  const exchangeData = useExchangeSpecificData(address)\n\n  const chartData = useChart(address, historyDaysToQuery)\n\n  const [tokenName, setTokenName] = useState('')\n\n  const [tokenSymbol, setTokenSymbol] = useState('')\n\n  const [logo, setLogo] = useState('')\n\n  const [currentData, setCurrentData] = useState({})\n\n  useEffect(() => {\n    let updateData = {}\n    updateData.price = exchangeData.price\n    updateData.invPrice = exchangeData.invPrice\n    updateData.priceUSD = exchangeData.priceUSD\n    updateData.tokenAddress = exchangeData.tokenAddres\n    updateData.pricePercentChange = exchangeData.pricePercentChange\n    updateData.pricePercentChangeETH = exchangeData.pricePercentChangeETH\n    updateData.volumePercentChange = exchangeData.volumePercentChangeETH\n    updateData.volumePercentChangeUSD = exchangeData.volumePercentChangeUSD\n    updateData.liquidityPercentChange = exchangeData.liquidityPercentChangeETH\n    updateData.liquidityPercentChangeUSD = exchangeData.liquidityPercentChangeUSD\n    updateData.txsPercentChange = exchangeData.txsPercentChange\n    updateData.ethLiquidity = exchangeData.ethLiquidity\n    updateData.tradeVolume = exchangeData.tradeVolume\n    updateData.tradeVolumeUSD = exchangeData.tradeVolumeUSD\n    updateData.oneDayTxs = exchangeData.oneDayTxs\n    setCurrentData(updateData)\n  }, [exchangeData])\n\n  useEffect(() => {\n    setCurrentData({}) // reset data for UI\n    if (exchanges.hasOwnProperty(address)) {\n      let tokenAddress = exchanges[address].tokenAddress\n      const path = `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/${isAddress(\n        tokenAddress\n      )}/logo.png`\n      Vibrant.from(path).getPalette((err, palette) => {\n        if (palette && palette.Vibrant) {\n          let detectedHex = palette.Vibrant.hex\n          let AAscore = hex(detectedHex, '#FFF')\n          while (AAscore < 3) {\n            detectedHex = darken(0.01, detectedHex)\n            AAscore = hex(detectedHex, '#FFF')\n          }\n          setThemeColor(detectedHex)\n        }\n      })\n    } else {\n      setThemeColor('#333333')\n    }\n  }, [address, exchanges])\n\n  useEffect(() => {\n    if (exchanges.hasOwnProperty(address)) {\n      setTokenName(exchanges[address].tokenName)\n      setTokenSymbol(exchanges[address].tokenSymbol)\n      setLogo(exchanges[address].logoStyled)\n    }\n  }, [exchanges, address])\n\n  return exchangeData ? (\n    <ExchangePage\n      currencyUnit={currencyUnit}\n      exchangeAddress={address}\n      chartData={chartData}\n      logo={logo}\n      historyDaysToQuery={historyDaysToQuery}\n      setHistoryDaysToQuery={setHistoryDaysToQuery}\n      tokenName={tokenName}\n      symbol={tokenSymbol}\n      tokenAddress={exchangeData.tokenAddress}\n      tradeVolume={currentData.tradeVolume}\n      tradeVolumeUSD={currentData.tradeVolumeUSD}\n      oneDayTxs={currentData.oneDayTxs}\n      ethLiquidity={currentData.ethLiquidity}\n      price={currentData.price}\n      invPrice={currentData.invPrice}\n      priceUSD={currentData.priceUSD}\n      pricePercentChange={currentData.pricePercentChange}\n      pricePercentChangeETH={currentData.pricePercentChangeETH}\n      volumePercentChange={currentData.volumePercentChange}\n      volumePercentChangeUSD={currentData.volumePercentChangeUSD}\n      liquidityPercentChange={currentData.liquidityPercentChange}\n      liquidityPercentChangeUSD={currentData.liquidityPercentChangeUSD}\n      txsPercentChange={currentData.txsPercentChange}\n    />\n  ) : (\n    <LocalLoader />\n  )\n}\n"]},"metadata":{},"sourceType":"module"}