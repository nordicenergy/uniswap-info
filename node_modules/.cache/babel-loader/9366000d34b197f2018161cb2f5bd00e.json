{"ast":null,"code":"import n, { useState as t, useContext as r } from \"react\";\n\nvar i = function i(n) {\n  return n.length > 0;\n},\n    e = function e(n, t) {\n  return n.includes(t);\n},\n    u = function u(n, t) {\n  return e(n, t) ? n : n.concat([t]);\n},\n    c = function c(n, t) {\n  return n.filter(function (n) {\n    return n !== t;\n  });\n},\n    a = n.createContext();\n\nfunction o(n) {\n  return r(a).waiters.includes(n.on) ? n.fallback : n.children;\n}\n\nfunction f(r) {\n  var f = t([]),\n      s = f[0],\n      g = f[1];\n  return n.createElement(a.Provider, {\n    value: {\n      waiters: s,\n      createWaitingContext: function createWaitingContext(t) {\n        return {\n          isWaiting: function isWaiting() {\n            return e(s, t);\n          },\n          startWaiting: function startWaiting() {\n            return g(u(s, t));\n          },\n          endWaiting: function endWaiting() {\n            return g(c(s, t));\n          },\n          Wait: function Wait(r) {\n            return n.createElement(o, Object.assign({}, {\n              on: t\n            }, r));\n          }\n        };\n      },\n      anyWaiting: function anyWaiting() {\n        return i(s);\n      },\n      isWaiting: function isWaiting(n) {\n        return e(s, n);\n      },\n      startWaiting: function startWaiting(n) {\n        g(u(s, n));\n      },\n      endWaiting: function endWaiting(n) {\n        g(c(s, n));\n      }\n    }\n  }, r.children);\n}\n\nfunction s() {\n  var n = r(a);\n  return Object.assign({}, n, {\n    Wait: o\n  });\n}\n\nexport { f as Waiter, s as useWait };","map":null,"metadata":{},"sourceType":"module"}