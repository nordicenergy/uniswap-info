{"ast":null,"code":"import { useCallback, useState } from 'react';\nimport useMountedState from './useMountedState';\nexport default function useAsyncFn(fn, deps, initialState) {\n  if (deps === void 0) {\n    deps = [];\n  }\n\n  if (initialState === void 0) {\n    initialState = {\n      loading: false\n    };\n  }\n\n  var _a = useState(initialState),\n      state = _a[0],\n      set = _a[1];\n\n  var isMounted = useMountedState();\n  var callback = useCallback(function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    set({\n      loading: true\n    });\n    return fn.apply(void 0, args).then(function (value) {\n      isMounted() && set({\n        value: value,\n        loading: false\n      });\n      return value;\n    }, function (error) {\n      isMounted() && set({\n        error: error,\n        loading: false\n      });\n      return error;\n    });\n  }, deps);\n  return [state, callback];\n}","map":null,"metadata":{},"sourceType":"module"}