{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { isClient } from './util';\n\nvar useLocalStorage = function useLocalStorage(key, initialValue, raw) {\n  if (!isClient) {\n    return [initialValue, function () {}];\n  }\n\n  var _a = useState(function () {\n    try {\n      var localStorageValue = localStorage.getItem(key);\n\n      if (typeof localStorageValue !== 'string') {\n        localStorage.setItem(key, raw ? String(initialValue) : JSON.stringify(initialValue));\n        return initialValue;\n      } else {\n        return raw ? localStorageValue : JSON.parse(localStorageValue || 'null');\n      }\n    } catch (_a) {\n      // If user is in private mode or has storage restriction\n      // localStorage can throw. JSON.parse and JSON.stringify\n      // can throw, too.\n      return initialValue;\n    }\n  }),\n      state = _a[0],\n      setState = _a[1];\n\n  useEffect(function () {\n    try {\n      var serializedState = raw ? String(state) : JSON.stringify(state);\n      localStorage.setItem(key, serializedState);\n    } catch (_a) {// If user is in private mode or has storage restriction\n      // localStorage can throw. Also JSON.stringify can throw.\n    }\n  }, [state]);\n  return [state, setState];\n};\n\nexport default useLocalStorage;","map":{"version":3,"sources":["/workspace/uniswap-info/node_modules/react-use/esm/useLocalStorage.js"],"names":["useEffect","useState","isClient","useLocalStorage","key","initialValue","raw","_a","localStorageValue","localStorage","getItem","setItem","String","JSON","stringify","parse","state","setState","serializedState"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,QAAzB;;AACA,IAAIC,eAAe,GAAG,SAAlBA,eAAkB,CAAUC,GAAV,EAAeC,YAAf,EAA6BC,GAA7B,EAAkC;AACpD,MAAI,CAACJ,QAAL,EAAe;AACX,WAAO,CAACG,YAAD,EAAe,YAAY,CAAG,CAA9B,CAAP;AACH;;AACD,MAAIE,EAAE,GAAGN,QAAQ,CAAC,YAAY;AAC1B,QAAI;AACA,UAAIO,iBAAiB,GAAGC,YAAY,CAACC,OAAb,CAAqBN,GAArB,CAAxB;;AACA,UAAI,OAAOI,iBAAP,KAA6B,QAAjC,EAA2C;AACvCC,QAAAA,YAAY,CAACE,OAAb,CAAqBP,GAArB,EAA0BE,GAAG,GAAGM,MAAM,CAACP,YAAD,CAAT,GAA0BQ,IAAI,CAACC,SAAL,CAAeT,YAAf,CAAvD;AACA,eAAOA,YAAP;AACH,OAHD,MAIK;AACD,eAAOC,GAAG,GAAGE,iBAAH,GAAuBK,IAAI,CAACE,KAAL,CAAWP,iBAAiB,IAAI,MAAhC,CAAjC;AACH;AACJ,KATD,CAUA,OAAOD,EAAP,EAAW;AACP;AACA;AACA;AACA,aAAOF,YAAP;AACH;AACJ,GAjBgB,CAAjB;AAAA,MAiBIW,KAAK,GAAGT,EAAE,CAAC,CAAD,CAjBd;AAAA,MAiBmBU,QAAQ,GAAGV,EAAE,CAAC,CAAD,CAjBhC;;AAkBAP,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAI;AACA,UAAIkB,eAAe,GAAGZ,GAAG,GAAGM,MAAM,CAACI,KAAD,CAAT,GAAmBH,IAAI,CAACC,SAAL,CAAeE,KAAf,CAA5C;AACAP,MAAAA,YAAY,CAACE,OAAb,CAAqBP,GAArB,EAA0Bc,eAA1B;AACH,KAHD,CAIA,OAAOX,EAAP,EAAW,CACP;AACA;AACH;AACJ,GATQ,EASN,CAACS,KAAD,CATM,CAAT;AAUA,SAAO,CAACA,KAAD,EAAQC,QAAR,CAAP;AACH,CAjCD;;AAkCA,eAAed,eAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { isClient } from './util';\nvar useLocalStorage = function (key, initialValue, raw) {\n    if (!isClient) {\n        return [initialValue, function () { }];\n    }\n    var _a = useState(function () {\n        try {\n            var localStorageValue = localStorage.getItem(key);\n            if (typeof localStorageValue !== 'string') {\n                localStorage.setItem(key, raw ? String(initialValue) : JSON.stringify(initialValue));\n                return initialValue;\n            }\n            else {\n                return raw ? localStorageValue : JSON.parse(localStorageValue || 'null');\n            }\n        }\n        catch (_a) {\n            // If user is in private mode or has storage restriction\n            // localStorage can throw. JSON.parse and JSON.stringify\n            // can throw, too.\n            return initialValue;\n        }\n    }), state = _a[0], setState = _a[1];\n    useEffect(function () {\n        try {\n            var serializedState = raw ? String(state) : JSON.stringify(state);\n            localStorage.setItem(key, serializedState);\n        }\n        catch (_a) {\n            // If user is in private mode or has storage restriction\n            // localStorage can throw. Also JSON.stringify can throw.\n        }\n    }, [state]);\n    return [state, setState];\n};\nexport default useLocalStorage;\n"]},"metadata":{},"sourceType":"module"}