{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport { useCallback, useState } from 'react';\nimport useAsync from './useAsync';\n\nvar useAsyncRetry = function useAsyncRetry(fn, deps) {\n  if (deps === void 0) {\n    deps = [];\n  }\n\n  var _a = useState(0),\n      attempt = _a[0],\n      setAttempt = _a[1];\n\n  var state = useAsync(fn, deps.concat([attempt]));\n  var stateLoading = state.loading;\n  var retry = useCallback(function () {\n    if (stateLoading) {\n      if (process.env.NODE_ENV === 'development') {\n        console.log('You are calling useAsyncRetry hook retry() method while loading in progress, this is a no-op.');\n      }\n\n      return;\n    }\n\n    setAttempt(function (currentAttempt) {\n      return currentAttempt + 1;\n    });\n  }, deps.concat([stateLoading]));\n  return tslib_1.__assign({}, state, {\n    retry: retry\n  });\n};\n\nexport default useAsyncRetry;","map":{"version":3,"sources":["/workspace/uniswap-info/node_modules/react-use/esm/useAsyncRetry.js"],"names":["tslib_1","useCallback","useState","useAsync","useAsyncRetry","fn","deps","_a","attempt","setAttempt","state","concat","stateLoading","loading","retry","process","env","NODE_ENV","console","log","currentAttempt","__assign"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,OAAzB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,OAAOC,QAAP,MAAqB,YAArB;;AACA,IAAIC,aAAa,GAAG,SAAhBA,aAAgB,CAAUC,EAAV,EAAcC,IAAd,EAAoB;AACpC,MAAIA,IAAI,KAAK,KAAK,CAAlB,EAAqB;AAAEA,IAAAA,IAAI,GAAG,EAAP;AAAY;;AACnC,MAAIC,EAAE,GAAGL,QAAQ,CAAC,CAAD,CAAjB;AAAA,MAAsBM,OAAO,GAAGD,EAAE,CAAC,CAAD,CAAlC;AAAA,MAAuCE,UAAU,GAAGF,EAAE,CAAC,CAAD,CAAtD;;AACA,MAAIG,KAAK,GAAGP,QAAQ,CAACE,EAAD,EAAKC,IAAI,CAACK,MAAL,CAAY,CAACH,OAAD,CAAZ,CAAL,CAApB;AACA,MAAII,YAAY,GAAGF,KAAK,CAACG,OAAzB;AACA,MAAIC,KAAK,GAAGb,WAAW,CAAC,YAAY;AAChC,QAAIW,YAAJ,EAAkB;AACd,UAAIG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxCC,QAAAA,OAAO,CAACC,GAAR,CAAY,+FAAZ;AACH;;AACD;AACH;;AACDV,IAAAA,UAAU,CAAC,UAAUW,cAAV,EAA0B;AAAE,aAAOA,cAAc,GAAG,CAAxB;AAA4B,KAAzD,CAAV;AACH,GARsB,EAQpBd,IAAI,CAACK,MAAL,CAAY,CAACC,YAAD,CAAZ,CARoB,CAAvB;AASA,SAAOZ,OAAO,CAACqB,QAAR,CAAiB,EAAjB,EAAqBX,KAArB,EAA4B;AAAEI,IAAAA,KAAK,EAAEA;AAAT,GAA5B,CAAP;AACH,CAfD;;AAgBA,eAAeV,aAAf","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { useCallback, useState } from 'react';\nimport useAsync from './useAsync';\nvar useAsyncRetry = function (fn, deps) {\n    if (deps === void 0) { deps = []; }\n    var _a = useState(0), attempt = _a[0], setAttempt = _a[1];\n    var state = useAsync(fn, deps.concat([attempt]));\n    var stateLoading = state.loading;\n    var retry = useCallback(function () {\n        if (stateLoading) {\n            if (process.env.NODE_ENV === 'development') {\n                console.log('You are calling useAsyncRetry hook retry() method while loading in progress, this is a no-op.');\n            }\n            return;\n        }\n        setAttempt(function (currentAttempt) { return currentAttempt + 1; });\n    }, deps.concat([stateLoading]));\n    return tslib_1.__assign({}, state, { retry: retry });\n};\nexport default useAsyncRetry;\n"]},"metadata":{},"sourceType":"module"}