{"ast":null,"code":"import { useRef, useEffect, useState } from 'react';\nimport { isClient } from './util';\n\nvar useWindowSize = function useWindowSize(initialWidth, initialHeight) {\n  if (initialWidth === void 0) {\n    initialWidth = Infinity;\n  }\n\n  if (initialHeight === void 0) {\n    initialHeight = Infinity;\n  }\n\n  var frame = useRef(0);\n\n  var _a = useState({\n    width: isClient ? window.innerWidth : initialWidth,\n    height: isClient ? window.innerHeight : initialHeight\n  }),\n      state = _a[0],\n      setState = _a[1];\n\n  useEffect(function () {\n    if (isClient) {\n      var handler_1 = function handler_1() {\n        cancelAnimationFrame(frame.current);\n        frame.current = requestAnimationFrame(function () {\n          setState({\n            width: window.innerWidth,\n            height: window.innerHeight\n          });\n        });\n      };\n\n      window.addEventListener('resize', handler_1);\n      return function () {\n        cancelAnimationFrame(frame.current);\n        window.removeEventListener('resize', handler_1);\n      };\n    } else {\n      return undefined;\n    }\n  }, []);\n  return state;\n};\n\nexport default useWindowSize;","map":null,"metadata":{},"sourceType":"module"}