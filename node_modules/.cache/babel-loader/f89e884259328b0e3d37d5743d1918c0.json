{"ast":null,"code":"import { useState, useEffect, useCallback } from 'react';\nimport copy from 'copy-to-clipboard';\nexport function useCopyClipboard(timeout = 500) {\n  const [isCopied, setIsCopied] = useState(false);\n  const staticCopy = useCallback(text => {\n    const didCopy = copy(text);\n    setIsCopied(didCopy);\n  }, []);\n  useEffect(() => {\n    if (isCopied) {\n      const hide = setTimeout(() => {\n        setIsCopied(false);\n      }, timeout);\n      return () => {\n        clearTimeout(hide);\n      };\n    }\n  }, [isCopied, setIsCopied, timeout]);\n  return [isCopied, staticCopy];\n}","map":{"version":3,"sources":["/workspace/uniswap-info/src/Data/Copy.js"],"names":["useState","useEffect","useCallback","copy","useCopyClipboard","timeout","isCopied","setIsCopied","staticCopy","text","didCopy","hide","setTimeout","clearTimeout"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,OAAO,SAASC,gBAAT,CAA0BC,OAAO,GAAG,GAApC,EAAyC;AAC9C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAMQ,UAAU,GAAGN,WAAW,CAACO,IAAI,IAAI;AACrC,UAAMC,OAAO,GAAGP,IAAI,CAACM,IAAD,CAApB;AACAF,IAAAA,WAAW,CAACG,OAAD,CAAX;AACD,GAH6B,EAG3B,EAH2B,CAA9B;AAKAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,QAAJ,EAAc;AACZ,YAAMK,IAAI,GAAGC,UAAU,CAAC,MAAM;AAC5BL,QAAAA,WAAW,CAAC,KAAD,CAAX;AACD,OAFsB,EAEpBF,OAFoB,CAAvB;AAIA,aAAO,MAAM;AACXQ,QAAAA,YAAY,CAACF,IAAD,CAAZ;AACD,OAFD;AAGD;AACF,GAVQ,EAUN,CAACL,QAAD,EAAWC,WAAX,EAAwBF,OAAxB,CAVM,CAAT;AAYA,SAAO,CAACC,QAAD,EAAWE,UAAX,CAAP;AACD","sourcesContent":["import { useState, useEffect, useCallback } from 'react'\nimport copy from 'copy-to-clipboard'\n\nexport function useCopyClipboard(timeout = 500) {\n  const [isCopied, setIsCopied] = useState(false)\n\n  const staticCopy = useCallback(text => {\n    const didCopy = copy(text)\n    setIsCopied(didCopy)\n  }, [])\n\n  useEffect(() => {\n    if (isCopied) {\n      const hide = setTimeout(() => {\n        setIsCopied(false)\n      }, timeout)\n\n      return () => {\n        clearTimeout(hide)\n      }\n    }\n  }, [isCopied, setIsCopied, timeout])\n\n  return [isCopied, staticCopy]\n}\n"]},"metadata":{},"sourceType":"module"}