{"ast":null,"code":"import _slicedToArray from\"/workspace/uniswap-info/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/workspace/uniswap-info/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject9(){var data=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  justify-content: flex-end;\\n  margin-top: 1rem;\\n  font-size: 10px;\\n  color: #333333;\\n  font-weight: 500;\\n\"]);_templateObject9=function _templateObject9(){return data;};return data;}function _templateObject8(){var data=_taggedTemplateLiteral([\"\\n  width: calc(100% - 40px);\\n  padding-left: 20px;\\n  padding-right: 20px;\\n\\n  @media screen and (max-width: 40em) {\\n    width: 100%;\\n    padding: 0;\\n  }\\n\"]);_templateObject8=function _templateObject8(){return data;};return data;}function _templateObject7(){var data=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  display: grid;\\n  padding-right: 10px;\\n  padding-left: 10px;\\n  grid-template-columns: 100%;\\n  grid-template-areas:\\n    'volume'\\n    'liquidity'\\n    'shares'\\n    'statistics'\\n    'exchange'\\n    'transactions';\\n\\n  @media screen and (min-width: 64em) {\\n    max-width: 1280px;\\n    grid-gap: 24px;\\n    padding-right: 20px;\\n    padding-left: 20px;\\n    width: 100%;\\n    grid-template-columns: 1fr 1fr 1fr;\\n    grid-template-areas:\\n      'volume  liquidity  shares '\\n      'statistics  statistics statistics'\\n      'statistics  statistics statistics'\\n      'listOptions listOptions listOptions'\\n      'transactions  transactions transactions';\\n  }\\n\"]);_templateObject7=function _templateObject7(){return data;};return data;}function _templateObject6(){var data=_taggedTemplateLiteral([\"\\n  boxshadow: 0px 4px 20px rgba(239, 162, 250, 0.15);\\n\\n  @media screen and (max-width: 64em) {\\n    margin-bottom: 20px;\\n    border-radius: 12px;\\n  }\\n\"]);_templateObject6=function _templateObject6(){return data;};return data;}function _templateObject5(){var data=_taggedTemplateLiteral([\"\\n  color: white;\\n  font-weight: 600;\\n  font-size: 32px;\\n  width: 100%;\\n  padding: 20px;\\n  padding-top: 24px;\\n  padding-bottom: 20px;\\n  display: flex;\\n  margin: auto;\\n  max-width: 1240px;\\n  flex-direction: column;\\n  align-items: flex-start;\\n\\n  @media screen and (min-width: 64em) {\\n    display: flex;\\n    flex-direction: row;\\n    font-size: 32px;\\n    align-items: flex-end;\\n    justify-content: flex-start;\\n    padding-left: 2.5rem;\\n    padding-right: 24px;\\n    max-width: 1320px;\\n  }\\n\"]);_templateObject5=function _templateObject5(){return data;};return data;}function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n  &:hover {\\n    cursor: pointer;\\n  }\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  background-color: rgba(255, 255, 255, 0.15);\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-between;\\n\\n  @media screen and (max-width: 64em) {\\n    width: 100%;\\n    border-radius: 0\\n\\n    &:nth-of-type(3) {\\n      margin-bottom: 20px;\\n      border-radius: 0 0 1em 1em;\\n    }\\n\\n    &:first-of-type {\\n      border-radius: 1em 1em 0 0;\\n    }\\n  }\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  height: 365px;\\n  z-index: -1;\\n  top: 0;\\n  width: 100vw;\\n\\n  @media screen and (max-width: 64em) {\\n    height: 559px;\\n  }\\n\\n  \",\"\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  font-size: 0.6em;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState}from'react';import{Box,Flex,Text}from'rebass';import styled from'styled-components';import FourByFour from'../components/FourByFour';import Panel from'../components/Panel';import Select from'../components/Select';import Footer from'../components/Footer';import OverviewList from'../components/OverviewList';import OverviewChart from'../components/OverviewChart';import Loader from'../components/Loader';import{formattedNum}from'../helpers';import{Divider,Hint}from'../components';import{getTimeFrame}from'../constants';var timeframeOptions=[{value:'1week',label:'1 week'},{value:'1month',label:'1 month'},{value:'3months',label:'3 months'},{value:'all',label:'All time'}];var SmallText=styled.span(_templateObject());var ThemedBackground=styled(Box)(_templateObject2(),function(props){return!props.last;});var TopPanel=styled(Panel)(_templateObject3());var TextOption=styled(Text)(_templateObject4());var TokenHeader=styled(Box)(_templateObject5());var ChartWrapper=styled(Panel)(_templateObject6());var OverviewDashboard=styled(Box)(_templateObject7());var DashboardWrapper=styled.div(_templateObject8());function getPercentSign(value){var parsedValue=parseFloat(value);return React.createElement(Text,{fontSize:14,lineHeight:1.2,color:\"white\"},parsedValue<0?value+'% ↓':parsedValue===0?value+'%':value+'% ↑');}var FloatRight=styled.div(_templateObject9());export var OverviewPage=function OverviewPage(_ref){var exchangeAddress=_ref.exchangeAddress,uniswapHistory=_ref.uniswapHistory,currencyUnit=_ref.currencyUnit,globalData=_ref.globalData,updateTimeframe=_ref.updateTimeframe,historyDaysToQuery=_ref.historyDaysToQuery;var _useState=useState('liquidity'),_useState2=_slicedToArray(_useState,2),chartOption=_useState2[0],setChartOption=_useState2[1];return React.createElement(\"div\",{style:{marginTop:'0px'}},React.createElement(ThemedBackground,{bg:\"black\"}),globalData?React.createElement(DashboardWrapper,null,React.createElement(TokenHeader,null,React.createElement(\"div\",null,\"Uniswap Overview\")),React.createElement(OverviewDashboard,{mx:\"auto\",px:[0,3]},React.createElement(TopPanel,{rounded:true,color:\"white\",p:24,style:{gridArea:'volume'}},React.createElement(FourByFour,{topLeft:React.createElement(Hint,{color:\"textLight\"},\"Volume (24hrs)\"),bottomLeft:React.createElement(Text,{fontSize:24,lineHeight:1,fontWeight:500},currencyUnit==='USD'?'$'+formattedNum(parseFloat(globalData.dailyVolumeUSD),true):'Ξ '+formattedNum(parseFloat(globalData.dailyVolumeETH)),currencyUnit!=='USD'?React.createElement(SmallText,null,\" ETH\"):''),bottomRight:globalData.volumePercentChange&&isFinite(globalData.volumePercentChange)?React.createElement(\"div\",null,currencyUnit==='USD'?getPercentSign(globalData.volumePercentChangeUSD):getPercentSign(globalData.volumePercentChange)):''})),React.createElement(TopPanel,{rounded:true,color:\"white\",p:24,style:{gridArea:'liquidity'}},React.createElement(FourByFour,{topLeft:React.createElement(Hint,{color:\"textLight\"},\"Total Liquidity\"),bottomLeft:React.createElement(Text,{fontSize:24,lineHeight:1,fontWeight:500},globalData.liquidityEth?currencyUnit!=='USD'?'Ξ '+formattedNum(parseFloat(globalData.liquidityEth)):'$'+formattedNum(parseFloat(globalData.liquidityUsd),true):'-',currencyUnit==='USD'?'':React.createElement(SmallText,null,\" ETH\")),bottomRight:globalData.liquidityPercentChange?React.createElement(\"div\",null,currencyUnit==='USD'?getPercentSign(globalData.liquidityPercentChangeUSD):getPercentSign(globalData.liquidityPercentChange)):''})),React.createElement(TopPanel,{rounded:true,bg:\"white\",color:\"white\",style:{gridArea:'shares'},p:24},React.createElement(FourByFour,{topLeft:React.createElement(Hint,{color:\"textLight\"},\"Transactions (24hrs)\"),bottomLeft:React.createElement(Text,{fontSize:24,lineHeight:1,fontWeight:500},formattedNum(globalData.txCount)),bottomRight:globalData.txCountPercentChange?React.createElement(\"div\",null,getPercentSign(globalData.txCountPercentChange)):''})),React.createElement(ChartWrapper,{rounded:true,bg:\"white\",area:\"statistics\"},React.createElement(Box,{p:24},React.createElement(Flex,{height:18,alignItems:\"center\",justifyContent:\"space-between\"},React.createElement(Flex,{alignItems:\"center\",justifyContent:\"space-between\"},React.createElement(TextOption,{color:chartOption==='liquidity'?'inherit':'grey',onClick:function onClick(e){setChartOption('liquidity');}},\"Liquidity\"),React.createElement(TextOption,{style:{marginLeft:'2em'},color:chartOption==='volume'?'inherit':'grey',onClick:function onClick(e){setChartOption('volume');}},\"Volume\")),React.createElement(Box,{width:144},React.createElement(Select,{placeholder:\"Timeframe\",options:timeframeOptions,defaultValue:getTimeFrame(historyDaysToQuery),onChange:function onChange(select){updateTimeframe(select.value);},customStyles:{backgroundColor:'white'}})))),React.createElement(Divider,null),React.createElement(Box,{p:24,style:{boxShadow:'0px 4px 20px rgba(239, 162, 250, 0.15)',borderRadius:'10px'}},uniswapHistory&&uniswapHistory.length>0?React.createElement(OverviewChart,{data:uniswapHistory,currencyUnit:currencyUnit,chartOption:chartOption}):React.createElement(Loader,null),React.createElement(FloatRight,null,\"UTC\\xB100:00\"))),React.createElement(Panel,{rounded:true,bg:\"white\",area:\"transactions\"},React.createElement(OverviewList,{currencyUnit:currencyUnit})))):'',React.createElement(Footer,null));};","map":{"version":3,"sources":["/workspace/uniswap-info/src/pages/OverviewPage.js"],"names":["React","useState","Box","Flex","Text","styled","FourByFour","Panel","Select","Footer","OverviewList","OverviewChart","Loader","formattedNum","Divider","Hint","getTimeFrame","timeframeOptions","value","label","SmallText","span","ThemedBackground","props","last","TopPanel","TextOption","TokenHeader","ChartWrapper","OverviewDashboard","DashboardWrapper","div","getPercentSign","parsedValue","parseFloat","FloatRight","OverviewPage","exchangeAddress","uniswapHistory","currencyUnit","globalData","updateTimeframe","historyDaysToQuery","chartOption","setChartOption","marginTop","gridArea","dailyVolumeUSD","dailyVolumeETH","volumePercentChange","isFinite","volumePercentChangeUSD","liquidityEth","liquidityUsd","liquidityPercentChange","liquidityPercentChangeUSD","txCount","txCountPercentChange","e","marginLeft","select","backgroundColor","boxShadow","borderRadius","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Box, Flex, Text } from 'rebass'\nimport styled from 'styled-components'\nimport FourByFour from '../components/FourByFour'\nimport Panel from '../components/Panel'\nimport Select from '../components/Select'\nimport Footer from '../components/Footer'\nimport OverviewList from '../components/OverviewList'\nimport OverviewChart from '../components/OverviewChart'\nimport Loader from '../components/Loader'\nimport { formattedNum } from '../helpers'\nimport { Divider, Hint } from '../components'\nimport { getTimeFrame } from '../constants'\n\nconst timeframeOptions = [\n  { value: '1week', label: '1 week' },\n  { value: '1month', label: '1 month' },\n  { value: '3months', label: '3 months' },\n  { value: 'all', label: 'All time' }\n]\n\nconst SmallText = styled.span`\n  font-size: 0.6em;\n`\n\nconst ThemedBackground = styled(Box)`\n  position: absolute;\n  height: 365px;\n  z-index: -1;\n  top: 0;\n  width: 100vw;\n\n  @media screen and (max-width: 64em) {\n    height: 559px;\n  }\n\n  ${props => !props.last}\n`\n\nconst TopPanel = styled(Panel)`\n  background-color: rgba(255, 255, 255, 0.15);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  @media screen and (max-width: 64em) {\n    width: 100%;\n    border-radius: 0\n\n    &:nth-of-type(3) {\n      margin-bottom: 20px;\n      border-radius: 0 0 1em 1em;\n    }\n\n    &:first-of-type {\n      border-radius: 1em 1em 0 0;\n    }\n  }\n`\n\nconst TextOption = styled(Text)`\n  &:hover {\n    cursor: pointer;\n  }\n`\n\nconst TokenHeader = styled(Box)`\n  color: white;\n  font-weight: 600;\n  font-size: 32px;\n  width: 100%;\n  padding: 20px;\n  padding-top: 24px;\n  padding-bottom: 20px;\n  display: flex;\n  margin: auto;\n  max-width: 1240px;\n  flex-direction: column;\n  align-items: flex-start;\n\n  @media screen and (min-width: 64em) {\n    display: flex;\n    flex-direction: row;\n    font-size: 32px;\n    align-items: flex-end;\n    justify-content: flex-start;\n    padding-left: 2.5rem;\n    padding-right: 24px;\n    max-width: 1320px;\n  }\n`\n\nconst ChartWrapper = styled(Panel)`\n  boxshadow: 0px 4px 20px rgba(239, 162, 250, 0.15);\n\n  @media screen and (max-width: 64em) {\n    margin-bottom: 20px;\n    border-radius: 12px;\n  }\n`\n\nconst OverviewDashboard = styled(Box)`\n  width: 100%;\n  display: grid;\n  padding-right: 10px;\n  padding-left: 10px;\n  grid-template-columns: 100%;\n  grid-template-areas:\n    'volume'\n    'liquidity'\n    'shares'\n    'statistics'\n    'exchange'\n    'transactions';\n\n  @media screen and (min-width: 64em) {\n    max-width: 1280px;\n    grid-gap: 24px;\n    padding-right: 20px;\n    padding-left: 20px;\n    width: 100%;\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-template-areas:\n      'volume  liquidity  shares '\n      'statistics  statistics statistics'\n      'statistics  statistics statistics'\n      'listOptions listOptions listOptions'\n      'transactions  transactions transactions';\n  }\n`\n\nconst DashboardWrapper = styled.div`\n  width: calc(100% - 40px);\n  padding-left: 20px;\n  padding-right: 20px;\n\n  @media screen and (max-width: 40em) {\n    width: 100%;\n    padding: 0;\n  }\n`\n\nfunction getPercentSign(value) {\n  const parsedValue = parseFloat(value)\n  return (\n    <Text fontSize={14} lineHeight={1.2} color=\"white\">\n      {parsedValue < 0 ? value + '% ↓' : parsedValue === 0 ? value + '%' : value + '% ↑'}\n    </Text>\n  )\n}\n\nconst FloatRight = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-end;\n  margin-top: 1rem;\n  font-size: 10px;\n  color: #333333;\n  font-weight: 500;\n`\n\nexport const OverviewPage = function({\n  exchangeAddress,\n  uniswapHistory,\n  currencyUnit,\n  globalData,\n  updateTimeframe,\n  historyDaysToQuery\n}) {\n  const [chartOption, setChartOption] = useState('liquidity')\n\n  return (\n    <div style={{ marginTop: '0px' }}>\n      <ThemedBackground bg=\"black\" />\n      {globalData ? (\n        <DashboardWrapper>\n          <TokenHeader>\n            <div>Uniswap Overview</div>\n          </TokenHeader>\n          <OverviewDashboard mx=\"auto\" px={[0, 3]}>\n            <TopPanel rounded color=\"white\" p={24} style={{ gridArea: 'volume' }}>\n              <FourByFour\n                topLeft={<Hint color=\"textLight\">Volume (24hrs)</Hint>}\n                bottomLeft={\n                  <Text fontSize={24} lineHeight={1} fontWeight={500}>\n                    {currencyUnit === 'USD'\n                      ? '$' + formattedNum(parseFloat(globalData.dailyVolumeUSD), true)\n                      : 'Ξ ' + formattedNum(parseFloat(globalData.dailyVolumeETH))}\n                    {currencyUnit !== 'USD' ? <SmallText> ETH</SmallText> : ''}\n                  </Text>\n                }\n                bottomRight={\n                  globalData.volumePercentChange && isFinite(globalData.volumePercentChange) ? (\n                    <div>\n                      {currencyUnit === 'USD'\n                        ? getPercentSign(globalData.volumePercentChangeUSD)\n                        : getPercentSign(globalData.volumePercentChange)}\n                    </div>\n                  ) : (\n                    ''\n                  )\n                }\n              />\n            </TopPanel>\n            <TopPanel rounded color=\"white\" p={24} style={{ gridArea: 'liquidity' }}>\n              <FourByFour\n                topLeft={<Hint color=\"textLight\">Total Liquidity</Hint>}\n                bottomLeft={\n                  <Text fontSize={24} lineHeight={1} fontWeight={500}>\n                    {globalData.liquidityEth\n                      ? currencyUnit !== 'USD'\n                        ? 'Ξ ' + formattedNum(parseFloat(globalData.liquidityEth))\n                        : '$' + formattedNum(parseFloat(globalData.liquidityUsd), true)\n                      : '-'}\n                    {currencyUnit === 'USD' ? '' : <SmallText> ETH</SmallText>}\n                  </Text>\n                }\n                bottomRight={\n                  globalData.liquidityPercentChange ? (\n                    <div>\n                      {currencyUnit === 'USD'\n                        ? getPercentSign(globalData.liquidityPercentChangeUSD)\n                        : getPercentSign(globalData.liquidityPercentChange)}\n                    </div>\n                  ) : (\n                    ''\n                  )\n                }\n              />\n            </TopPanel>\n            <TopPanel rounded bg=\"white\" color=\"white\" style={{ gridArea: 'shares' }} p={24}>\n              <FourByFour\n                topLeft={<Hint color=\"textLight\">Transactions (24hrs)</Hint>}\n                bottomLeft={\n                  <Text fontSize={24} lineHeight={1} fontWeight={500}>\n                    {formattedNum(globalData.txCount)}\n                  </Text>\n                }\n                bottomRight={\n                  globalData.txCountPercentChange ? <div>{getPercentSign(globalData.txCountPercentChange)}</div> : ''\n                }\n              />\n            </TopPanel>\n            <ChartWrapper rounded bg=\"white\" area=\"statistics\">\n              <Box p={24}>\n                <Flex height={18} alignItems=\"center\" justifyContent=\"space-between\">\n                  <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                    <TextOption\n                      color={chartOption === 'liquidity' ? 'inherit' : 'grey'}\n                      onClick={e => {\n                        setChartOption('liquidity')\n                      }}\n                    >\n                      Liquidity\n                    </TextOption>\n                    <TextOption\n                      style={{ marginLeft: '2em' }}\n                      color={chartOption === 'volume' ? 'inherit' : 'grey'}\n                      onClick={e => {\n                        setChartOption('volume')\n                      }}\n                    >\n                      Volume\n                    </TextOption>\n                  </Flex>\n                  <Box width={144}>\n                    <Select\n                      placeholder=\"Timeframe\"\n                      options={timeframeOptions}\n                      defaultValue={getTimeFrame(historyDaysToQuery)}\n                      onChange={select => {\n                        updateTimeframe(select.value)\n                      }}\n                      customStyles={{ backgroundColor: 'white' }}\n                    />\n                  </Box>\n                </Flex>\n              </Box>\n              <Divider />\n              <Box p={24} style={{ boxShadow: '0px 4px 20px rgba(239, 162, 250, 0.15)', borderRadius: '10px' }}>\n                {uniswapHistory && uniswapHistory.length > 0 ? (\n                  <OverviewChart data={uniswapHistory} currencyUnit={currencyUnit} chartOption={chartOption} />\n                ) : (\n                  <Loader />\n                )}\n                <FloatRight>UTC±00:00</FloatRight>\n              </Box>\n            </ChartWrapper>\n            <Panel rounded bg=\"white\" area=\"transactions\">\n              <OverviewList currencyUnit={currencyUnit} />\n            </Panel>\n          </OverviewDashboard>\n        </DashboardWrapper>\n      ) : (\n        ''\n      )}\n      <Footer />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}