{"ast":null,"code":"import { useCallback } from 'react';\nimport useGetSet from './useGetSet';\nexport default function useCounter(initialValue, max, min) {\n  if (initialValue === void 0) {\n    initialValue = 0;\n  }\n\n  if (max === void 0) {\n    max = null;\n  }\n\n  if (min === void 0) {\n    min = null;\n  }\n\n  typeof initialValue !== 'number' && console.error('initialValue has to be a number, got ' + typeof initialValue);\n\n  if (typeof min === 'number') {\n    initialValue = Math.max(initialValue, min);\n  } else if (min !== null) {\n    console.error('min has to be a number, got ' + typeof min);\n  }\n\n  if (typeof max === 'number') {\n    initialValue = Math.min(initialValue, max);\n  } else if (max !== null) {\n    console.error('max has to be a number, got ' + typeof max);\n  }\n\n  var _a = useGetSet(initialValue),\n      get = _a[0],\n      setInternal = _a[1];\n\n  function set(value) {\n    var current = get();\n\n    if (current === value) {\n      return;\n    }\n\n    if (typeof min === 'number') {\n      value = Math.max(value, min);\n    }\n\n    if (typeof max === 'number') {\n      value = Math.min(value, max);\n    }\n\n    current !== value && setInternal(value);\n  }\n\n  var inc = useCallback(function (delta) {\n    if (delta === void 0) {\n      delta = 1;\n    }\n\n    typeof delta !== 'number' && console.error('delta has to be a number, got ' + typeof delta);\n    set(get() + delta);\n  }, [max, min]);\n  var dec = useCallback(function (delta) {\n    if (delta === void 0) {\n      delta = 1;\n    }\n\n    typeof delta !== 'number' && console.error('delta has to be a number, got ' + typeof delta);\n    set(get() - delta);\n  }, [max, min]);\n  var reset = useCallback(function (value) {\n    if (value === void 0) {\n      value = initialValue;\n    }\n\n    typeof value !== 'number' && console.error('value has to be a number, got ' + typeof value);\n    initialValue = value;\n    set(value);\n  }, [max, min]);\n  var actions = {\n    inc: inc,\n    dec: dec,\n    get: get,\n    set: set,\n    reset: reset\n  };\n  return [get(), actions];\n}","map":null,"metadata":{},"sourceType":"module"}