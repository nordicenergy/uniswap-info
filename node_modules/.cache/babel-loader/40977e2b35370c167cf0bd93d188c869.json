{"ast":null,"code":"import _slicedToArray from \"/workspace/uniswap-info/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/workspace/uniswap-info/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/workspace/uniswap-info/src/components/CurrencySelect/index.js\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 65px;\\n  height: 38px;\\n  background-color: \", \";\\n  border-radius: 20px;\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  justify-content: center;\\n  font-weight: 500;\\n  font-size: 16px;\\n  color: white;\\n  user-select: none;\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 130px;\\n  height: 38px;\\n  background-color: rgba(255, 255, 255, 0.1);\\n  border-radius: 20px;\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  justify-content: space-between;\\n  font-weight: 500;\\n  font-size: 16px;\\n  color: white;\\n\\n  :hover {\\n    cursor: pointer;\\n  }\\n\\n  @media screen and (max-width: 40em) {\\n    display: none;\\n  }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 65px;\\n  height: 38px;\\n  background-color: rgba(255, 255, 255, 0.3);\\n  border-radius: 20px;\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  justify-content: center;\\n  font-weight: 500;\\n  font-size: 16px;\\n  color: white;\\n\\n  :hover {\\n    cursor: pointer;\\n  }\\n\\n  @media screen and (min-width: 40em) {\\n    display: none;\\n  }\\n  & > * {\\n    pointer-events: none;\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nconst MobileSelect = styled.div(_templateObject());\nconst Select = styled.div(_templateObject2());\nconst SelectOption = styled.div(_templateObject3(), props => props.active ? 'rgba(255, 255, 255, 0.3)' : 'rgba(255, 255, 255, 0)');\n\nconst CurrencySelect = ({\n  setCurrencyUnit,\n  currencyUnit\n}) => {\n  const _useState = useState(currencyUnit),\n        _useState2 = _slicedToArray(_useState, 2),\n        activeCurrency = _useState2[0],\n        setActiveCurrency = _useState2[1];\n\n  const update = () => {\n    if (currencyUnit === 'USD') {\n      setCurrencyUnit('ETH');\n      setActiveCurrency('ETH');\n    } else {\n      setCurrencyUnit('USD');\n      setActiveCurrency('USD');\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(MobileSelect, {\n    onClick: () => update(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \" \", currencyUnit, \" \"), React.createElement(Select, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(SelectOption, {\n    active: activeCurrency === 'USD',\n    onClick: () => update(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"USD\"), React.createElement(SelectOption, {\n    active: activeCurrency === 'ETH',\n    onClick: () => update(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"ETH\")));\n};\n\nexport default CurrencySelect;","map":{"version":3,"sources":["/workspace/uniswap-info/src/components/CurrencySelect/index.js"],"names":["React","useState","styled","MobileSelect","div","Select","SelectOption","props","active","CurrencySelect","setCurrencyUnit","currencyUnit","activeCurrency","setActiveCurrency","update"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,YAAY,GAAGD,MAAM,CAACE,GAAV,mBAAlB;AAyBA,MAAMC,MAAM,GAAGH,MAAM,CAACE,GAAV,oBAAZ;AAsBA,MAAME,YAAY,GAAGJ,MAAM,CAACE,GAAV,qBAGIG,KAAK,IAAKA,KAAK,CAACC,MAAN,GAAe,0BAAf,GAA4C,wBAH1D,CAAlB;;AAeA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA;AAAnB,CAAD,KAAuC;AAAA,oBAChBV,QAAQ,CAACU,YAAD,CADQ;AAAA;AAAA,QACrDC,cADqD;AAAA,QACrCC,iBADqC;;AAG5D,QAAMC,MAAM,GAAG,MAAM;AACnB,QAAIH,YAAY,KAAK,KAArB,EAA4B;AAC1BD,MAAAA,eAAe,CAAC,KAAD,CAAf;AACAG,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,KAHD,MAGO;AACLH,MAAAA,eAAe,CAAC,KAAD,CAAf;AACAG,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD;AACF,GARD;;AAUA,SACE,0CACE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAE,MAAMC,MAAM,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAyCH,YAAzC,MADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,MAAM,EAAEC,cAAc,KAAK,KAAzC;AAAgD,IAAA,OAAO,EAAE,MAAME,MAAM,EAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAIE,oBAAC,YAAD;AAAc,IAAA,MAAM,EAAEF,cAAc,KAAK,KAAzC;AAAgD,IAAA,OAAO,EAAE,MAAME,MAAM,EAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJF,CAFF,CADF;AAaD,CA1BD;;AA4BA,eAAeL,cAAf","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nconst MobileSelect = styled.div`\n  width: 65px;\n  height: 38px;\n  background-color: rgba(255, 255, 255, 0.3);\n  border-radius: 20px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  font-weight: 500;\n  font-size: 16px;\n  color: white;\n\n  :hover {\n    cursor: pointer;\n  }\n\n  @media screen and (min-width: 40em) {\n    display: none;\n  }\n  & > * {\n    pointer-events: none;\n  }\n`\n\nconst Select = styled.div`\n  width: 130px;\n  height: 38px;\n  background-color: rgba(255, 255, 255, 0.1);\n  border-radius: 20px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  font-weight: 500;\n  font-size: 16px;\n  color: white;\n\n  :hover {\n    cursor: pointer;\n  }\n\n  @media screen and (max-width: 40em) {\n    display: none;\n  }\n`\n\nconst SelectOption = styled.div`\n  width: 65px;\n  height: 38px;\n  background-color: ${props => (props.active ? 'rgba(255, 255, 255, 0.3)' : 'rgba(255, 255, 255, 0)')};\n  border-radius: 20px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  font-weight: 500;\n  font-size: 16px;\n  color: white;\n  user-select: none;\n`\n\nconst CurrencySelect = ({ setCurrencyUnit, currencyUnit }) => {\n  const [activeCurrency, setActiveCurrency] = useState(currencyUnit)\n\n  const update = () => {\n    if (currencyUnit === 'USD') {\n      setCurrencyUnit('ETH')\n      setActiveCurrency('ETH')\n    } else {\n      setCurrencyUnit('USD')\n      setActiveCurrency('USD')\n    }\n  }\n\n  return (\n    <>\n      <MobileSelect onClick={() => update()}> {currencyUnit} </MobileSelect>\n      <Select>\n        <SelectOption active={activeCurrency === 'USD'} onClick={() => update()}>\n          USD\n        </SelectOption>\n        <SelectOption active={activeCurrency === 'ETH'} onClick={() => update()}>\n          ETH\n        </SelectOption>\n      </Select>\n    </>\n  )\n}\n\nexport default CurrencySelect\n"]},"metadata":{},"sourceType":"module"}