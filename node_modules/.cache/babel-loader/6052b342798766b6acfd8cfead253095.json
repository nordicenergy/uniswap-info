{"ast":null,"code":"var _jsxFileName = \"/workspace/uniswap-info/src/components/OverviewList/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMedia } from 'react-use';\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport { client } from '../../apollo/client';\nimport { OVERVIEW_PAGE_QUERY, TICKER_24HOUR_QUERY } from '../../apollo/queries';\nimport { Box, Flex, Text } from 'rebass';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport TokenLogo from '../TokenLogo';\nimport { formattedNum } from '../../helpers';\nimport { Divider } from '../../components';\nimport Loader from '../../components/Loader';\ndayjs.extend(utc);\nconst PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 2em;\n  margin-bottom: 2em;\n`;\nconst Arrow = styled.div`\n  color: #2f80ed;\n  opacity: ${props => props.faded ? 0.3 : 1};\n  padding: 0 20px;\n  user-select: none;\n\n  :hover {\n    cursor: pointer;\n  }\n`;\nconst List = styled(Box)`\n  -webkit-overflow-scrolling: touch;\n`;\nconst DashGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-template-areas: 'symbol liquidity volume';\n  padding: 0 6px;\n\n  > * {\n    justify-content: flex-end;\n    width: 100%;\n\n    &:first-child {\n      justify-content: flex-start;\n      width: 100px;\n    }\n  }\n\n  @media screen and (min-width: 40em) {\n    max-width: 1280px;\n    display: grid;\n    grid-gap: 1em;\n    grid-template-columns: 0.8fr 1fr 1fr 1fr;\n    grid-template-areas: 'name txs liquidity volume';\n\n    > * {\n      justify-content: flex-end;\n      width: 100%;\n\n      &:first-child {\n        justify-content: flex-start;\n        width: 240px;\n      }\n    }\n  }\n\n  @media screen and (min-width: 64em) {\n    max-width: 1280px;\n    display: grid;\n    padding: 0 24px;\n    grid-gap: 1em;\n    grid-template-columns: 1fr 0.8fr 0.8fr 1fr 1fr 1fr;\n    grid-template-areas: 'name symbol price volume liquidity txs';\n  }\n`;\nconst DashGridClickable = styled(DashGrid)`\n  :hover {\n    // background-color: #f8f8f8;\n    // cursor: pointer;\n  }\n`;\nconst ListWrapper = styled.div`\n  @media screen and (max-width: 40em) {\n    padding: 0 0.4em;\n  }\n`;\nconst ClickableText = styled(Text)`\n  text-align: right;\n\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n\n  user-select: none;\n`;\nconst DataText = styled(Flex)`\n  @media screen and (max-width: 40em) {\n    font-size: 14px;\n  }\n\n  align-items: center;\n  text-align: right;\n\n  & > * {\n    font-size: 1em;\n  }\n`;\nconst LogoBox = styled.div`\n  width: 30px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 4px;\n\n  @media screen and (max-width: 40em) {\n    margin-right: 6px;\n  }\n`;\nconst CustomLink = styled(Link)`\n  text-decoration: none;\n\n  &:visited {\n    color: rgb(47, 128, 237);\n  }\n`; // @TODO rework into virtualized list\n\nfunction OverviewList({\n  currencyUnit\n}) {\n  const [exchanges, setExchanges] = useState([]);\n  const [filteredTxs, SetFilteredTxs] = useState([]);\n  const [exchangeData24Hour, setExchangeData24Hour] = useState({});\n  const [page, setPage] = useState(1);\n  const [maxPage, setMaxPage] = useState(1);\n  const TXS_PER_PAGE = 10;\n  const [loading, setLoading] = useState(true);\n  const [sortDirection, setSortDirection] = useState(true);\n  const SORT_FIELD = {\n    PRICE: 'priceUSD',\n    LIQUIDITY: 'ethBalance',\n    TRANSACTIIONS: 'txs',\n    VOLUME: 'volume',\n    SYMBOL: 'tokenSymbol',\n    PRICE_CHANGE: 'priceChange',\n    PRICE_CHANGE_ETH: 'priceChangeETH'\n  };\n  const [sortedColumn, setSortedColumn] = useState(SORT_FIELD.LIQUIDITY);\n\n  function getPercentChangeColor(change) {\n    if (change === 0) {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, change + ' %');\n    }\n\n    if (change < 0) {\n      return React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, change + ' %');\n    }\n\n    return React.createElement(\"span\", {\n      style: {\n        color: 'green'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, change + ' %');\n  }\n\n  function sortTxs(field) {\n    if (field === SORT_FIELD.VOLUME || field === SORT_FIELD.TRANSACTIIONS || field === SORT_FIELD.PRICE_CHANGE || field === SORT_FIELD.PRICE_CHANGE_ETH) {\n      let newTxs = filteredTxs.slice().sort((a, b) => {\n        if (!exchangeData24Hour.hasOwnProperty(a.id)) {\n          exchangeData24Hour[a.id] = {};\n          exchangeData24Hour[a.id].volume = 0;\n          exchangeData24Hour[a.id].txs = 0;\n          exchangeData24Hour[a.id].priceChange = 0;\n          exchangeData24Hour[a.id].priceChangeETH = 0;\n          setExchangeData24Hour(exchangeData24Hour);\n        }\n\n        if (!exchangeData24Hour.hasOwnProperty(b.id)) {\n          exchangeData24Hour[b.id] = {};\n          exchangeData24Hour[b.id].volume = 0;\n          exchangeData24Hour[a.id].txs = 0;\n          exchangeData24Hour[b.id].priceChange = 0;\n          exchangeData24Hour[a.id].priceChangeETH = 0;\n          setExchangeData24Hour(exchangeData24Hour);\n        }\n\n        return parseFloat(exchangeData24Hour[a.id][field]) > parseFloat(exchangeData24Hour[b.id][field]) ? (sortDirection ? -1 : 1) * 1 : (sortDirection ? -1 : 1) * -1;\n      });\n      SetFilteredTxs(newTxs);\n      setPage(1);\n    } else {\n      let newTxs;\n\n      if (field === SORT_FIELD.SYMBOL) {\n        newTxs = filteredTxs.slice().sort((a, b) => {\n          return a[field].toString().toLowerCase() > b[field].toString().toLowerCase() ? (sortDirection ? -1 : 1) * -1 : (sortDirection ? -1 : 1) * 1;\n        });\n      } else {\n        newTxs = filteredTxs.slice().sort((a, b) => {\n          return parseFloat(a[field]) > parseFloat(b[field]) ? (sortDirection ? -1 : 1) * -1 : (sortDirection ? -1 : 1) * 1;\n        });\n      }\n\n      SetFilteredTxs(newTxs);\n      setPage(1);\n    }\n  }\n\n  useEffect(() => {\n    setSortDirection(true);\n  }, [exchanges]); // get top 100 exchanges by liquidity\n\n  useEffect(() => {\n    setPage(1);\n\n    async function getTxs() {\n      setLoading(true);\n      let gettingExchanges = true;\n      let newExchanges = [];\n      let skip = 0;\n\n      while (gettingExchanges) {\n        let result = await client.query({\n          query: OVERVIEW_PAGE_QUERY,\n          variables: {\n            first: 100,\n            skip: skip\n          },\n          fetchPolicy: 'cache-first'\n        });\n\n        if (result) {\n          newExchanges = newExchanges.concat(result.data.exchanges);\n          skip = skip + 100;\n\n          if (skip === 200) {\n            gettingExchanges = false;\n          }\n        }\n      }\n\n      setMaxPage(Math.floor(newExchanges.length / TXS_PER_PAGE));\n      SetFilteredTxs(newExchanges);\n      setExchanges(newExchanges);\n    }\n\n    getTxs();\n  }, []);\n  useEffect(() => {\n    function get24HrVol() {\n      let promises = [];\n      let currentData = {};\n      exchanges.map(item => {\n        try {\n          currentData[item.id] = item;\n          const utcCurrentTime = dayjs();\n          const utcOneDayBack = utcCurrentTime.subtract(1, 'day');\n          let result24HoursAgo;\n          result24HoursAgo = client.query({\n            query: TICKER_24HOUR_QUERY,\n            variables: {\n              exchangeAddr: item.id,\n              timestamp: utcOneDayBack.unix()\n            },\n            fetchPolicy: 'cache-first'\n          });\n          promises.push(result24HoursAgo);\n          return true;\n        } catch (err) {\n          console.log('error: ', err);\n          return false;\n        }\n      });\n      Promise.all(promises).then(resolved => {\n        let new24HourData = {};\n        resolved.map(oldItem => {\n          // get first result less than 24 hours ago\n          let data24HoursAgo = oldItem.data.exchangeHistoricalDatas[0];\n\n          if (data24HoursAgo) {\n            const exchangeID = data24HoursAgo.exchangeAddress;\n            new24HourData[exchangeID] = {}; //set the price data\n\n            new24HourData[exchangeID].price = currentData[exchangeID].price;\n            new24HourData[exchangeID].priceUSD = currentData[exchangeID].priceUSD; // get the volume difference\n\n            let oneDayVolume = currentData[exchangeID].tradeVolumeEth - data24HoursAgo.tradeVolumeEth;\n            new24HourData[exchangeID].volume = oneDayVolume;\n            let oneDayVolumeUSD = currentData[exchangeID].tradeVolumeUSD - data24HoursAgo.tradeVolumeUSD;\n            new24HourData[exchangeID].volumeUSD = oneDayVolumeUSD; // get the tx difference\n\n            let oneDayTxs = currentData[exchangeID].totalTxsCount - data24HoursAgo.totalTxsCount;\n            new24HourData[exchangeID].txs = oneDayTxs;\n            const priceChangeRaw = ((currentData[exchangeID].priceUSD - data24HoursAgo.tokenPriceUSD) / currentData[exchangeID].priceUSD * 100).toFixed(2);\n            new24HourData[exchangeID].priceChange = priceChangeRaw;\n            const priceChangeETH = ((1 / currentData[exchangeID].price - 1 / data24HoursAgo.price) / (1 / currentData[exchangeID].price) * 100).toFixed(2);\n            new24HourData[exchangeID].priceChangeETH = priceChangeETH;\n          }\n\n          return true;\n        });\n        setLoading(false);\n        setExchangeData24Hour(new24HourData);\n      });\n    }\n\n    get24HrVol();\n  }, [exchanges]);\n  const belowMedium = useMedia('(max-width: 64em)');\n  const belowSmall = useMedia('(max-width: 40em)');\n\n  const TransactionItem = ({\n    exchange,\n    id\n  }) => {\n    if (exchange.tokenAddress === '0x89d24a6b4ccb1b6faa2625fe562bdd9a23260359') {\n      exchange.tokenSymbol = 'SAI';\n    }\n\n    if (exchange.tokenAddress === '0xf5dce57282a584d2746faf1593d3121fcac444dc') {\n      exchange.tokenSymbol = 'cSAI';\n      exchange.tokenName = 'Compound SAI';\n    }\n\n    return React.createElement(DashGridClickable, {\n      style: {\n        height: '60px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, React.createElement(Flex, {\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        minWidth: '30px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, id + (page - 1) * TXS_PER_PAGE), React.createElement(LogoBox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, React.createElement(TokenLogo, {\n      size: 24,\n      address: exchange.tokenAddress,\n      style: {\n        height: '24px',\n        width: '24px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    })), !belowSmall ? React.createElement(CustomLink, {\n      to: '/token/' + exchange.tokenAddress,\n      onClick: () => {\n        window.scrollTo(0, 0);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, React.createElement(Text, {\n      color: \"button\",\n      area: 'name',\n      fontWeight: \"500\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, exchange.tokenName)) : React.createElement(CustomLink, {\n      to: '/token/' + exchange.tokenAddress,\n      onClick: () => {\n        window.scrollTo(0, 0);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, React.createElement(DataText, {\n      area: 'symbol',\n      color: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, exchange.tokenSymbol))), !belowMedium ? React.createElement(React.Fragment, null, React.createElement(DataText, {\n      area: 'symbol',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, exchange.tokenSymbol), React.createElement(DataText, {\n      area: 'price',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, exchange.price && exchange.priceUSD ? currencyUnit === 'USD' ? '$' + formattedNum(exchange.priceUSD, true) : formattedNum(1 / exchange.price) + ' ETH' : '')) : '', React.createElement(DataText, {\n      area: 'liquidity',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, exchangeData24Hour.hasOwnProperty(exchange.id) ? currencyUnit === 'USD' ? '$' + formattedNum(exchange.ethBalance * 2 * exchangeData24Hour[exchange.id].price * exchangeData24Hour[exchange.id].priceUSD, true) : formattedNum(exchange.ethBalance * 2) + ' ETH' : '-'), React.createElement(DataText, {\n      area: 'volume',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, exchangeData24Hour.hasOwnProperty(exchange.id) ? currencyUnit === 'USD' ? '$' + formattedNum(exchangeData24Hour[exchange.id].volumeUSD, true) : formattedNum(exchangeData24Hour[exchange.id].volume) + ' ETH' : '-'), !belowSmall ? React.createElement(DataText, {\n      area: 'txs',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }, exchangeData24Hour.hasOwnProperty(exchange.id) ? currencyUnit === 'USD' ? getPercentChangeColor(exchangeData24Hour[exchange.id].priceChange) : getPercentChangeColor(exchangeData24Hour[exchange.id].priceChangeETH) : '-') : '');\n  };\n\n  return React.createElement(ListWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439\n    },\n    __self: this\n  }, React.createElement(DashGrid, {\n    center: true,\n    style: {\n      height: '60px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441\n    },\n    __self: this\n  }, React.createElement(Text, {\n    color: \"text\",\n    area: 'name',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442\n    },\n    __self: this\n  }, \"Exchanges\")), !belowMedium ? React.createElement(React.Fragment, null, React.createElement(Flex, {\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448\n    },\n    __self: this\n  }, React.createElement(ClickableText, {\n    area: 'liquidity',\n    color: \"textDim\",\n    onClick: e => {\n      setSortedColumn(SORT_FIELD.SYMBOL);\n      setSortDirection(!sortDirection);\n      sortTxs(SORT_FIELD.SYMBOL);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449\n    },\n    __self: this\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458\n    },\n    __self: this\n  }, \"Symbol \", sortedColumn === SORT_FIELD.SYMBOL ? !sortDirection ? '↑' : '↓' : ''))), React.createElement(Flex, {\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461\n    },\n    __self: this\n  }, React.createElement(ClickableText, {\n    area: 'price',\n    color: \"textDim\",\n    onClick: e => {\n      setSortedColumn(SORT_FIELD.PRICE);\n      setSortDirection(!sortDirection);\n      sortTxs(SORT_FIELD.PRICE);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462\n    },\n    __self: this\n  }, \"Price \", sortedColumn === SORT_FIELD.PRICE ? !sortDirection ? '↑' : '↓' : ''))) : '', React.createElement(Flex, {\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478\n    },\n    __self: this\n  }, React.createElement(ClickableText, {\n    area: 'liquidity',\n    color: \"textDim\",\n    onClick: e => {\n      setSortedColumn(SORT_FIELD.LIQUIDITY);\n      setSortDirection(!sortDirection);\n      sortTxs(SORT_FIELD.LIQUIDITY);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479\n    },\n    __self: this\n  }, \"Liquidity \", sortedColumn === SORT_FIELD.LIQUIDITY ? !sortDirection ? '↑' : '↓' : '')), React.createElement(Flex, {\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491\n    },\n    __self: this\n  }, React.createElement(ClickableText, {\n    area: 'liquidity',\n    color: \"textDim\",\n    onClick: e => {\n      setSortedColumn(SORT_FIELD.VOLUME);\n      setSortDirection(!sortDirection);\n      sortTxs(SORT_FIELD.VOLUME);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492\n    },\n    __self: this\n  }, \"Volume (24hrs) \", sortedColumn === SORT_FIELD.VOLUME ? sortDirection ? '↑' : '↓' : '')), !belowSmall ? React.createElement(Flex, {\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505\n    },\n    __self: this\n  }, React.createElement(ClickableText, {\n    area: 'liquidity',\n    color: \"textDim\",\n    onClick: e => {\n      setSortedColumn(SORT_FIELD.PRICE_CHANGE);\n      setSortDirection(!sortDirection);\n      sortTxs(currencyUnit === 'USD' ? SORT_FIELD.PRICE_CHANGE : SORT_FIELD.PRICE_CHANGE_ETH);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506\n    },\n    __self: this\n  }, \"Price Change (24hrs) \", sortedColumn === SORT_FIELD.PRICE_CHANGE ? sortDirection ? '↑' : '↓' : '')) : ''), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523\n    },\n    __self: this\n  }), React.createElement(List, {\n    p: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524\n    },\n    __self: this\n  }, loading || exchanges.length === 0 || exchangeData24Hour.length === 0 ? React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526\n    },\n    __self: this\n  }) : filteredTxs.slice(TXS_PER_PAGE * (page - 1), page * TXS_PER_PAGE).map((item, index) => {\n    return React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530\n      },\n      __self: this\n    }, React.createElement(TransactionItem, {\n      key: index,\n      exchange: item,\n      id: index + 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532\n      },\n      __self: this\n    }));\n  })), React.createElement(PageButtons, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    onClick: e => {\n      setPage(page === 1 ? page : page - 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539\n    },\n    __self: this\n  }, React.createElement(Arrow, {\n    faded: page === 1 ? true : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544\n    },\n    __self: this\n  }, \"\\u2190\")), 'Page ' + page + ' of ' + maxPage, React.createElement(\"div\", {\n    onClick: e => {\n      setPage(page === maxPage ? page : page + 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547\n    },\n    __self: this\n  }, React.createElement(Arrow, {\n    faded: page === maxPage ? true : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552\n    },\n    __self: this\n  }, \"\\u2192\")), React.createElement(\"i\", {\n    \"data-feather\": \"circle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554\n    },\n    __self: this\n  })));\n}\n\nOverviewList.defaultProps = {\n  transactions: []\n};\nOverviewList.propTypes = {\n  transactions: PropTypes.array.isRequired\n};\nexport default OverviewList;","map":{"version":3,"sources":["/workspace/uniswap-info/src/components/OverviewList/index.js"],"names":["React","useState","useEffect","Link","useMedia","dayjs","utc","client","OVERVIEW_PAGE_QUERY","TICKER_24HOUR_QUERY","Box","Flex","Text","PropTypes","styled","TokenLogo","formattedNum","Divider","Loader","extend","PageButtons","div","Arrow","props","faded","List","DashGrid","DashGridClickable","ListWrapper","ClickableText","DataText","LogoBox","CustomLink","OverviewList","currencyUnit","exchanges","setExchanges","filteredTxs","SetFilteredTxs","exchangeData24Hour","setExchangeData24Hour","page","setPage","maxPage","setMaxPage","TXS_PER_PAGE","loading","setLoading","sortDirection","setSortDirection","SORT_FIELD","PRICE","LIQUIDITY","TRANSACTIIONS","VOLUME","SYMBOL","PRICE_CHANGE","PRICE_CHANGE_ETH","sortedColumn","setSortedColumn","getPercentChangeColor","change","color","sortTxs","field","newTxs","slice","sort","a","b","hasOwnProperty","id","volume","txs","priceChange","priceChangeETH","parseFloat","toString","toLowerCase","getTxs","gettingExchanges","newExchanges","skip","result","query","variables","first","fetchPolicy","concat","data","Math","floor","length","get24HrVol","promises","currentData","map","item","utcCurrentTime","utcOneDayBack","subtract","result24HoursAgo","exchangeAddr","timestamp","unix","push","err","console","log","Promise","all","then","resolved","new24HourData","oldItem","data24HoursAgo","exchangeHistoricalDatas","exchangeID","exchangeAddress","price","priceUSD","oneDayVolume","tradeVolumeEth","oneDayVolumeUSD","tradeVolumeUSD","volumeUSD","oneDayTxs","totalTxsCount","priceChangeRaw","tokenPriceUSD","toFixed","belowMedium","belowSmall","TransactionItem","exchange","tokenAddress","tokenSymbol","tokenName","height","minWidth","width","window","scrollTo","ethBalance","e","index","defaultProps","transactions","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useMedia } from 'react-use'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\nimport { client } from '../../apollo/client'\nimport { OVERVIEW_PAGE_QUERY, TICKER_24HOUR_QUERY } from '../../apollo/queries'\nimport { Box, Flex, Text } from 'rebass'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport TokenLogo from '../TokenLogo'\nimport { formattedNum } from '../../helpers'\nimport { Divider } from '../../components'\nimport Loader from '../../components/Loader'\n\ndayjs.extend(utc)\n\nconst PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 2em;\n  margin-bottom: 2em;\n`\n\nconst Arrow = styled.div`\n  color: #2f80ed;\n  opacity: ${props => (props.faded ? 0.3 : 1)};\n  padding: 0 20px;\n  user-select: none;\n\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst List = styled(Box)`\n  -webkit-overflow-scrolling: touch;\n`\n\nconst DashGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-template-areas: 'symbol liquidity volume';\n  padding: 0 6px;\n\n  > * {\n    justify-content: flex-end;\n    width: 100%;\n\n    &:first-child {\n      justify-content: flex-start;\n      width: 100px;\n    }\n  }\n\n  @media screen and (min-width: 40em) {\n    max-width: 1280px;\n    display: grid;\n    grid-gap: 1em;\n    grid-template-columns: 0.8fr 1fr 1fr 1fr;\n    grid-template-areas: 'name txs liquidity volume';\n\n    > * {\n      justify-content: flex-end;\n      width: 100%;\n\n      &:first-child {\n        justify-content: flex-start;\n        width: 240px;\n      }\n    }\n  }\n\n  @media screen and (min-width: 64em) {\n    max-width: 1280px;\n    display: grid;\n    padding: 0 24px;\n    grid-gap: 1em;\n    grid-template-columns: 1fr 0.8fr 0.8fr 1fr 1fr 1fr;\n    grid-template-areas: 'name symbol price volume liquidity txs';\n  }\n`\n\nconst DashGridClickable = styled(DashGrid)`\n  :hover {\n    // background-color: #f8f8f8;\n    // cursor: pointer;\n  }\n`\n\nconst ListWrapper = styled.div`\n  @media screen and (max-width: 40em) {\n    padding: 0 0.4em;\n  }\n`\n\nconst ClickableText = styled(Text)`\n  text-align: right;\n\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n\n  user-select: none;\n`\n\nconst DataText = styled(Flex)`\n  @media screen and (max-width: 40em) {\n    font-size: 14px;\n  }\n\n  align-items: center;\n  text-align: right;\n\n  & > * {\n    font-size: 1em;\n  }\n`\n\nconst LogoBox = styled.div`\n  width: 30px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 4px;\n\n  @media screen and (max-width: 40em) {\n    margin-right: 6px;\n  }\n`\n\nconst CustomLink = styled(Link)`\n  text-decoration: none;\n\n  &:visited {\n    color: rgb(47, 128, 237);\n  }\n`\n\n// @TODO rework into virtualized list\nfunction OverviewList({ currencyUnit }) {\n  const [exchanges, setExchanges] = useState([])\n\n  const [filteredTxs, SetFilteredTxs] = useState([])\n\n  const [exchangeData24Hour, setExchangeData24Hour] = useState({})\n\n  const [page, setPage] = useState(1)\n\n  const [maxPage, setMaxPage] = useState(1)\n\n  const TXS_PER_PAGE = 10\n\n  const [loading, setLoading] = useState(true)\n\n  const [sortDirection, setSortDirection] = useState(true)\n\n  const SORT_FIELD = {\n    PRICE: 'priceUSD',\n    LIQUIDITY: 'ethBalance',\n    TRANSACTIIONS: 'txs',\n    VOLUME: 'volume',\n    SYMBOL: 'tokenSymbol',\n    PRICE_CHANGE: 'priceChange',\n    PRICE_CHANGE_ETH: 'priceChangeETH'\n  }\n\n  const [sortedColumn, setSortedColumn] = useState(SORT_FIELD.LIQUIDITY)\n\n  function getPercentChangeColor(change) {\n    if (change === 0) {\n      return <span>{change + ' %'}</span>\n    }\n    if (change < 0) {\n      return <span style={{ color: 'red' }}>{change + ' %'}</span>\n    }\n    return <span style={{ color: 'green' }}>{change + ' %'}</span>\n  }\n\n  function sortTxs(field) {\n    if (\n      field === SORT_FIELD.VOLUME ||\n      field === SORT_FIELD.TRANSACTIIONS ||\n      field === SORT_FIELD.PRICE_CHANGE ||\n      field === SORT_FIELD.PRICE_CHANGE_ETH\n    ) {\n      let newTxs = filteredTxs.slice().sort((a, b) => {\n        if (!exchangeData24Hour.hasOwnProperty(a.id)) {\n          exchangeData24Hour[a.id] = {}\n          exchangeData24Hour[a.id].volume = 0\n          exchangeData24Hour[a.id].txs = 0\n          exchangeData24Hour[a.id].priceChange = 0\n          exchangeData24Hour[a.id].priceChangeETH = 0\n          setExchangeData24Hour(exchangeData24Hour)\n        }\n        if (!exchangeData24Hour.hasOwnProperty(b.id)) {\n          exchangeData24Hour[b.id] = {}\n          exchangeData24Hour[b.id].volume = 0\n          exchangeData24Hour[a.id].txs = 0\n          exchangeData24Hour[b.id].priceChange = 0\n          exchangeData24Hour[a.id].priceChangeETH = 0\n          setExchangeData24Hour(exchangeData24Hour)\n        }\n        return parseFloat(exchangeData24Hour[a.id][field]) > parseFloat(exchangeData24Hour[b.id][field])\n          ? (sortDirection ? -1 : 1) * 1\n          : (sortDirection ? -1 : 1) * -1\n      })\n      SetFilteredTxs(newTxs)\n      setPage(1)\n    } else {\n      let newTxs\n      if (field === SORT_FIELD.SYMBOL) {\n        newTxs = filteredTxs.slice().sort((a, b) => {\n          return a[field].toString().toLowerCase() > b[field].toString().toLowerCase()\n            ? (sortDirection ? -1 : 1) * -1\n            : (sortDirection ? -1 : 1) * 1\n        })\n      } else {\n        newTxs = filteredTxs.slice().sort((a, b) => {\n          return parseFloat(a[field]) > parseFloat(b[field])\n            ? (sortDirection ? -1 : 1) * -1\n            : (sortDirection ? -1 : 1) * 1\n        })\n      }\n      SetFilteredTxs(newTxs)\n      setPage(1)\n    }\n  }\n\n  useEffect(() => {\n    setSortDirection(true)\n  }, [exchanges])\n\n  // get top 100 exchanges by liquidity\n  useEffect(() => {\n    setPage(1)\n\n    async function getTxs() {\n      setLoading(true)\n      let gettingExchanges = true\n      let newExchanges = []\n      let skip = 0\n      while (gettingExchanges) {\n        let result = await client.query({\n          query: OVERVIEW_PAGE_QUERY,\n          variables: {\n            first: 100,\n            skip: skip\n          },\n          fetchPolicy: 'cache-first'\n        })\n        if (result) {\n          newExchanges = newExchanges.concat(result.data.exchanges)\n          skip = skip + 100\n          if (skip === 200) {\n            gettingExchanges = false\n          }\n        }\n      }\n      setMaxPage(Math.floor(newExchanges.length / TXS_PER_PAGE))\n      SetFilteredTxs(newExchanges)\n      setExchanges(newExchanges)\n    }\n    getTxs()\n  }, [])\n\n  useEffect(() => {\n    function get24HrVol() {\n      let promises = []\n      let currentData = {}\n      exchanges.map(item => {\n        try {\n          currentData[item.id] = item\n          const utcCurrentTime = dayjs()\n          const utcOneDayBack = utcCurrentTime.subtract(1, 'day')\n          let result24HoursAgo\n          result24HoursAgo = client.query({\n            query: TICKER_24HOUR_QUERY,\n            variables: {\n              exchangeAddr: item.id,\n              timestamp: utcOneDayBack.unix()\n            },\n            fetchPolicy: 'cache-first'\n          })\n          promises.push(result24HoursAgo)\n\n          return true\n        } catch (err) {\n          console.log('error: ', err)\n          return false\n        }\n      })\n\n      Promise.all(promises).then(resolved => {\n        let new24HourData = {}\n        resolved.map(oldItem => {\n          // get first result less than 24 hours ago\n          let data24HoursAgo = oldItem.data.exchangeHistoricalDatas[0]\n\n          if (data24HoursAgo) {\n            const exchangeID = data24HoursAgo.exchangeAddress\n\n            new24HourData[exchangeID] = {}\n\n            //set the price data\n            new24HourData[exchangeID].price = currentData[exchangeID].price\n            new24HourData[exchangeID].priceUSD = currentData[exchangeID].priceUSD\n\n            // get the volume difference\n            let oneDayVolume = currentData[exchangeID].tradeVolumeEth - data24HoursAgo.tradeVolumeEth\n            new24HourData[exchangeID].volume = oneDayVolume\n\n            let oneDayVolumeUSD = currentData[exchangeID].tradeVolumeUSD - data24HoursAgo.tradeVolumeUSD\n            new24HourData[exchangeID].volumeUSD = oneDayVolumeUSD\n\n            // get the tx difference\n            let oneDayTxs = currentData[exchangeID].totalTxsCount - data24HoursAgo.totalTxsCount\n            new24HourData[exchangeID].txs = oneDayTxs\n\n            const priceChangeRaw = (\n              ((currentData[exchangeID].priceUSD - data24HoursAgo.tokenPriceUSD) / currentData[exchangeID].priceUSD) *\n              100\n            ).toFixed(2)\n            new24HourData[exchangeID].priceChange = priceChangeRaw\n\n            const priceChangeETH = (\n              ((1 / currentData[exchangeID].price - 1 / data24HoursAgo.price) / (1 / currentData[exchangeID].price)) *\n              100\n            ).toFixed(2)\n            new24HourData[exchangeID].priceChangeETH = priceChangeETH\n          }\n          return true\n        })\n        setLoading(false)\n        setExchangeData24Hour(new24HourData)\n      })\n    }\n    get24HrVol()\n  }, [exchanges])\n\n  const belowMedium = useMedia('(max-width: 64em)')\n\n  const belowSmall = useMedia('(max-width: 40em)')\n\n  const TransactionItem = ({ exchange, id }) => {\n    if (exchange.tokenAddress === '0x89d24a6b4ccb1b6faa2625fe562bdd9a23260359') {\n      exchange.tokenSymbol = 'SAI'\n    }\n    if (exchange.tokenAddress === '0xf5dce57282a584d2746faf1593d3121fcac444dc') {\n      exchange.tokenSymbol = 'cSAI'\n      exchange.tokenName = 'Compound SAI'\n    }\n    return (\n      <DashGridClickable style={{ height: '60px' }}>\n        <Flex alignItems=\"center\" justifyContent=\"flex-start\">\n          <div style={{ minWidth: '30px' }}>{id + (page - 1) * TXS_PER_PAGE}</div>\n          <LogoBox>\n            <TokenLogo size={24} address={exchange.tokenAddress} style={{ height: '24px', width: '24px' }} />\n          </LogoBox>\n          {!belowSmall ? (\n            <CustomLink\n              to={'/token/' + exchange.tokenAddress}\n              onClick={() => {\n                window.scrollTo(0, 0)\n              }}\n            >\n              <Text color=\"button\" area={'name'} fontWeight=\"500\">\n                {exchange.tokenName}\n              </Text>\n            </CustomLink>\n          ) : (\n            <CustomLink\n              to={'/token/' + exchange.tokenAddress}\n              onClick={() => {\n                window.scrollTo(0, 0)\n              }}\n            >\n              <DataText area={'symbol'} color=\"button\">\n                {exchange.tokenSymbol}\n              </DataText>\n            </CustomLink>\n          )}\n        </Flex>\n        {!belowMedium ? (\n          <>\n            <DataText area={'symbol'}>{exchange.tokenSymbol}</DataText>\n            <DataText area={'price'}>\n              {exchange.price && exchange.priceUSD\n                ? currencyUnit === 'USD'\n                  ? '$' + formattedNum(exchange.priceUSD, true)\n                  : formattedNum(1 / exchange.price) + ' ETH'\n                : ''}\n            </DataText>\n          </>\n        ) : (\n          ''\n        )}\n        <DataText area={'liquidity'}>\n          {exchangeData24Hour.hasOwnProperty(exchange.id)\n            ? currencyUnit === 'USD'\n              ? '$' +\n                formattedNum(\n                  exchange.ethBalance *\n                    2 *\n                    exchangeData24Hour[exchange.id].price *\n                    exchangeData24Hour[exchange.id].priceUSD,\n                  true\n                )\n              : formattedNum(exchange.ethBalance * 2) + ' ETH'\n            : '-'}\n        </DataText>\n\n        <DataText area={'volume'}>\n          {exchangeData24Hour.hasOwnProperty(exchange.id)\n            ? currencyUnit === 'USD'\n              ? '$' + formattedNum(exchangeData24Hour[exchange.id].volumeUSD, true)\n              : formattedNum(exchangeData24Hour[exchange.id].volume) + ' ETH'\n            : '-'}\n        </DataText>\n        {!belowSmall ? (\n          <DataText area={'txs'}>\n            {exchangeData24Hour.hasOwnProperty(exchange.id)\n              ? currencyUnit === 'USD'\n                ? getPercentChangeColor(exchangeData24Hour[exchange.id].priceChange)\n                : getPercentChangeColor(exchangeData24Hour[exchange.id].priceChangeETH)\n              : '-'}\n          </DataText>\n        ) : (\n          ''\n        )}\n      </DashGridClickable>\n    )\n  }\n\n  return (\n    <ListWrapper>\n      <DashGrid center={true} style={{ height: '60px' }}>\n        <Flex alignItems=\"center\">\n          <Text color=\"text\" area={'name'}>\n            Exchanges\n          </Text>\n        </Flex>\n        {!belowMedium ? (\n          <>\n            <Flex alignItems=\"center\">\n              <ClickableText\n                area={'liquidity'}\n                color=\"textDim\"\n                onClick={e => {\n                  setSortedColumn(SORT_FIELD.SYMBOL)\n                  setSortDirection(!sortDirection)\n                  sortTxs(SORT_FIELD.SYMBOL)\n                }}\n              >\n                <Text>Symbol {sortedColumn === SORT_FIELD.SYMBOL ? (!sortDirection ? '↑' : '↓') : ''}</Text>\n              </ClickableText>\n            </Flex>\n            <Flex alignItems=\"center\">\n              <ClickableText\n                area={'price'}\n                color=\"textDim\"\n                onClick={e => {\n                  setSortedColumn(SORT_FIELD.PRICE)\n                  setSortDirection(!sortDirection)\n                  sortTxs(SORT_FIELD.PRICE)\n                }}\n              >\n                Price {sortedColumn === SORT_FIELD.PRICE ? (!sortDirection ? '↑' : '↓') : ''}\n              </ClickableText>\n            </Flex>\n          </>\n        ) : (\n          ''\n        )}\n        <Flex alignItems=\"center\">\n          <ClickableText\n            area={'liquidity'}\n            color=\"textDim\"\n            onClick={e => {\n              setSortedColumn(SORT_FIELD.LIQUIDITY)\n              setSortDirection(!sortDirection)\n              sortTxs(SORT_FIELD.LIQUIDITY)\n            }}\n          >\n            Liquidity {sortedColumn === SORT_FIELD.LIQUIDITY ? (!sortDirection ? '↑' : '↓') : ''}\n          </ClickableText>\n        </Flex>\n        <Flex alignItems=\"center\">\n          <ClickableText\n            area={'liquidity'}\n            color=\"textDim\"\n            onClick={e => {\n              setSortedColumn(SORT_FIELD.VOLUME)\n              setSortDirection(!sortDirection)\n              sortTxs(SORT_FIELD.VOLUME)\n            }}\n          >\n            Volume (24hrs) {sortedColumn === SORT_FIELD.VOLUME ? (sortDirection ? '↑' : '↓') : ''}\n          </ClickableText>\n        </Flex>\n        {!belowSmall ? (\n          <Flex alignItems=\"center\">\n            <ClickableText\n              area={'liquidity'}\n              color=\"textDim\"\n              onClick={e => {\n                setSortedColumn(SORT_FIELD.PRICE_CHANGE)\n                setSortDirection(!sortDirection)\n                sortTxs(currencyUnit === 'USD' ? SORT_FIELD.PRICE_CHANGE : SORT_FIELD.PRICE_CHANGE_ETH)\n              }}\n            >\n              Price Change (24hrs) {sortedColumn === SORT_FIELD.PRICE_CHANGE ? (sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n          </Flex>\n        ) : (\n          ''\n        )}\n      </DashGrid>\n\n      <Divider />\n      <List p={0}>\n        {loading || exchanges.length === 0 || exchangeData24Hour.length === 0 ? (\n          <Loader />\n        ) : (\n          filteredTxs.slice(TXS_PER_PAGE * (page - 1), page * TXS_PER_PAGE).map((item, index) => {\n            return (\n              <div key={index}>\n                <TransactionItem key={index} exchange={item} id={index + 1} />\n                <Divider />\n              </div>\n            )\n          })\n        )}\n      </List>\n      <PageButtons>\n        <div\n          onClick={e => {\n            setPage(page === 1 ? page : page - 1)\n          }}\n        >\n          <Arrow faded={page === 1 ? true : false}>←</Arrow>\n        </div>\n        {'Page ' + page + ' of ' + maxPage}\n        <div\n          onClick={e => {\n            setPage(page === maxPage ? page : page + 1)\n          }}\n        >\n          <Arrow faded={page === maxPage ? true : false}>→</Arrow>\n        </div>\n        <i data-feather=\"circle\"></i>\n      </PageButtons>\n    </ListWrapper>\n  )\n}\n\nOverviewList.defaultProps = {\n  transactions: []\n}\n\nOverviewList.propTypes = {\n  transactions: PropTypes.array.isRequired\n}\n\nexport default OverviewList\n"]},"metadata":{},"sourceType":"module"}