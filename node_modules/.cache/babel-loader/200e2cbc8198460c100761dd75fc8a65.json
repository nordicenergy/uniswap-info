{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport { useState, useMemo } from 'react';\n\nvar useMap = function (initialMap) {\n  if (initialMap === void 0) {\n    initialMap = {};\n  }\n\n  var _a = useState(initialMap),\n      map = _a[0],\n      set = _a[1];\n\n  var utils = useMemo(function () {\n    return {\n      get: function (key) {\n        return map[key];\n      },\n      set: function (key, entry) {\n        set(function (prevMap) {\n          var _a;\n\n          return tslib_1.__assign({}, prevMap, (_a = {}, _a[key] = entry, _a));\n        });\n      },\n      remove: function (key) {\n        set(function (prevMap) {\n          var _a = key,\n              omit = prevMap[_a],\n              rest = tslib_1.__rest(prevMap, [typeof _a === \"symbol\" ? _a : _a + \"\"]);\n\n          return rest;\n        });\n      },\n      reset: function () {\n        return set(initialMap);\n      }\n    };\n  }, [set]);\n  return [map, utils];\n};\n\nexport default useMap;","map":{"version":3,"sources":["/workspace/uniswap-info/node_modules/react-use/esm/useMap.js"],"names":["tslib_1","useState","useMemo","useMap","initialMap","_a","map","set","utils","get","key","entry","prevMap","__assign","remove","omit","rest","__rest","reset"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,OAAzB;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,OAAlC;;AACA,IAAIC,MAAM,GAAG,UAAUC,UAAV,EAAsB;AAC/B,MAAIA,UAAU,KAAK,KAAK,CAAxB,EAA2B;AAAEA,IAAAA,UAAU,GAAG,EAAb;AAAkB;;AAC/C,MAAIC,EAAE,GAAGJ,QAAQ,CAACG,UAAD,CAAjB;AAAA,MAA+BE,GAAG,GAAGD,EAAE,CAAC,CAAD,CAAvC;AAAA,MAA4CE,GAAG,GAAGF,EAAE,CAAC,CAAD,CAApD;;AACA,MAAIG,KAAK,GAAGN,OAAO,CAAC,YAAY;AAAE,WAAQ;AACtCO,MAAAA,GAAG,EAAE,UAAUC,GAAV,EAAe;AAAE,eAAOJ,GAAG,CAACI,GAAD,CAAV;AAAkB,OADF;AAEtCH,MAAAA,GAAG,EAAE,UAAUG,GAAV,EAAeC,KAAf,EAAsB;AACvBJ,QAAAA,GAAG,CAAC,UAAUK,OAAV,EAAmB;AACnB,cAAIP,EAAJ;;AACA,iBAAQL,OAAO,CAACa,QAAR,CAAiB,EAAjB,EAAqBD,OAArB,GAA+BP,EAAE,GAAG,EAAL,EAASA,EAAE,CAACK,GAAD,CAAF,GAAUC,KAAnB,EAA0BN,EAAzD,EAAR;AACH,SAHE,CAAH;AAIH,OAPqC;AAQtCS,MAAAA,MAAM,EAAE,UAAUJ,GAAV,EAAe;AACnBH,QAAAA,GAAG,CAAC,UAAUK,OAAV,EAAmB;AACnB,cAAIP,EAAE,GAAGK,GAAT;AAAA,cAAcK,IAAI,GAAGH,OAAO,CAACP,EAAD,CAA5B;AAAA,cAAkCW,IAAI,GAAGhB,OAAO,CAACiB,MAAR,CAAeL,OAAf,EAAwB,CAAC,OAAOP,EAAP,KAAc,QAAd,GAAyBA,EAAzB,GAA8BA,EAAE,GAAG,EAApC,CAAxB,CAAzC;;AACA,iBAAOW,IAAP;AACH,SAHE,CAAH;AAIH,OAbqC;AActCE,MAAAA,KAAK,EAAE,YAAY;AAAE,eAAOX,GAAG,CAACH,UAAD,CAAV;AAAyB;AAdR,KAAR;AAe7B,GAfc,EAeZ,CAACG,GAAD,CAfY,CAAnB;AAgBA,SAAO,CAACD,GAAD,EAAME,KAAN,CAAP;AACH,CApBD;;AAqBA,eAAeL,MAAf","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { useState, useMemo } from 'react';\nvar useMap = function (initialMap) {\n    if (initialMap === void 0) { initialMap = {}; }\n    var _a = useState(initialMap), map = _a[0], set = _a[1];\n    var utils = useMemo(function () { return ({\n        get: function (key) { return map[key]; },\n        set: function (key, entry) {\n            set(function (prevMap) {\n                var _a;\n                return (tslib_1.__assign({}, prevMap, (_a = {}, _a[key] = entry, _a)));\n            });\n        },\n        remove: function (key) {\n            set(function (prevMap) {\n                var _a = key, omit = prevMap[_a], rest = tslib_1.__rest(prevMap, [typeof _a === \"symbol\" ? _a : _a + \"\"]);\n                return rest;\n            });\n        },\n        reset: function () { return set(initialMap); },\n    }); }, [set]);\n    return [map, utils];\n};\nexport default useMap;\n"]},"metadata":{},"sourceType":"module"}