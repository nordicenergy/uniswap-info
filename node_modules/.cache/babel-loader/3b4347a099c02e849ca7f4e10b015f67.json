{"ast":null,"code":"import gql from 'graphql-tag';\nexport const TRANSACTIONS_QUERY = gql`\n  query transactions($exchangeAddr: String!) {\n    transactions(where: { exchangeAddress: $exchangeAddr }, orderBy: timestamp, orderDirection: desc) {\n      id\n      user\n      block\n      fee\n      timestamp\n      addLiquidityEvents {\n        id\n      }\n      removeLiquidityEvents {\n        CH\n      }\n      tokenPurchaseEvents {\n        id\n      }\n      ethPurchaseEvents {\n        id\n      }\n    }\n  }\n`;\nexport const TRANSACTIONS_QUERY_SKIPPABLE = gql`\n  query transactions($timestamp: Int!, $exchangeAddr: String!, $skip: Int!) {\n    transactions(\n      skip: $skip\n      where: { timestamp_gt: $timestamp, exchangeAddress: $exchangeAddr }\n      orderBy: timestamp\n      orderDirection: desc\n    ) {\n      id\n      user\n      block\n      fee\n      exchangeAddress\n      timestamp\n      addLiquidityEvents {\n        id\n        ethAmount\n        tokenAmount\n      }\n      removeLiquidityEvents {\n        id\n        ethAmount\n        tokenAmount\n      }\n      tokenPurchaseEvents {\n        id\n        ethAmount\n        tokenAmount\n      }\n      ethPurchaseEvents {\n        id\n        ethAmount\n        tokenAmount\n      }\n    }\n  }\n`;\nexport const CHART_QUERY = gql`\n  query exchangeDayDatas($date: Int!, $exchangeAddr: String!) {\n    exchangeDayDatas(where: { exchangeAddress: $exchangeAddr, date_gt: $date }, orderBy: date, orderDirection: asc) {\n      date\n      ethBalance\n      tokenBalance\n      marginalEthRate\n      ethVolume\n      tokenPriceUSD\n      totalEvents\n    }\n  }\n`;\nexport const DIRECTORY_QUERY = gql`\n  query exchanges($first: Int!, $skip: Int!) {\n    exchanges(first: $first, skip: $skip, orderBy: combinedBalanceInUSD, orderDirection: desc) {\n      id\n      tokenSymbol\n      tokenName\n      tokenDecimals\n      tokenAddress\n      ethBalance\n    }\n  }\n`;\nexport const OVERVIEW_PAGE_QUERY = gql`\n  query exchanges($first: Int!, $skip: Int!) {\n    exchanges(first: $first, skip: $skip, orderBy: ethBalance, orderDirection: desc) {\n      id\n      tokenAddress\n      tokenName\n      tokenSymbol\n      tokenDecimals\n      price\n      priceUSD\n      ethBalance\n      tradeVolumeEth\n      tradeVolumeToken\n      tradeVolumeUSD\n      tokenBalance\n      totalTxsCount\n    }\n  }\n`;\nexport const TICKER_QUERY = gql`\n  query exchange($id: String!) {\n    exchange(id: $id) {\n      id\n      tokenAddress\n      tokenName\n      tokenSymbol\n      price\n      priceUSD\n      tokenBalance\n      ethBalance\n      tradeVolumeEth\n      tradeVolumeToken\n      tradeVolumeUSD\n      tokenBalance\n      totalTxsCount\n    }\n  }\n`;\nexport const TICKER_24HOUR_QUERY = gql`\n  query exchangeHistoricalDatas($timestamp: Int!, $exchangeAddr: String!) {\n    exchangeHistoricalDatas(\n      where: { timestamp_lt: $timestamp, exchangeAddress: $exchangeAddr }\n      first: 1\n      orderBy: tradeVolumeEth\n      orderDirection: desc\n    ) {\n      id\n      timestamp\n      exchangeAddress\n      tradeVolumeEth\n      tradeVolumeToken\n      tradeVolumeUSD\n      tokenPriceUSD\n      price\n      ethBalance\n      totalTxsCount\n    }\n  }\n`;\nexport const UNISWAP_GLOBALS_QUERY = gql`\n  query totals {\n    uniswap(id: \"1\") {\n      totalVolumeUSD\n      totalVolumeInEth\n      totalLiquidityUSD\n      totalLiquidityInEth\n      txCount\n      exchangeCount\n    }\n  }\n`;\nexport const UNISWAP_GLOBALS_24HOURS_AGO_QUERY = gql`\n  query uniswapHistoricalDatas($date: Int!) {\n    uniswapHistoricalDatas(where: { timestamp_lt: $date }, first: 1, orderBy: timestamp, orderDirection: desc) {\n      totalVolumeInEth\n      totalVolumeUSD\n      totalLiquidityInEth\n      totalLiquidityUSD\n      txCount\n      timestamp\n    }\n  }\n`;\nexport const UNISWAP_CHART_QUERY = gql`\n  query uniswapDayDatas($date: Int!) {\n    uniswapDayDatas(where: { date_gt: $date }, orderBy: date, orderDirection: asc) {\n      date\n      totalVolumeInEth\n      totalVolumeUSD\n      totalLiquidityInEth\n      totalLiquidityUSD\n      txCount\n      dailyVolumeInETH\n      dailyVolumeInUSD\n    }\n  }\n`;","map":{"version":3,"sources":["/workspace/uniswap-info/src/apollo/queries.js"],"names":["gql","TRANSACTIONS_QUERY","TRANSACTIONS_QUERY_SKIPPABLE","CHART_QUERY","DIRECTORY_QUERY","OVERVIEW_PAGE_QUERY","TICKER_QUERY","TICKER_24HOUR_QUERY","UNISWAP_GLOBALS_QUERY","UNISWAP_GLOBALS_24HOURS_AGO_QUERY","UNISWAP_CHART_QUERY"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,OAAO,MAAMC,kBAAkB,GAAGD,GAAI;;;;;;;;;;;;;;;;;;;;;;CAA/B;AAwBP,OAAO,MAAME,4BAA4B,GAAGF,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAzC;AAsCP,OAAO,MAAMG,WAAW,GAAGH,GAAI;;;;;;;;;;;;CAAxB;AAcP,OAAO,MAAMI,eAAe,GAAGJ,GAAI;;;;;;;;;;;CAA5B;AAaP,OAAO,MAAMK,mBAAmB,GAAGL,GAAI;;;;;;;;;;;;;;;;;;CAAhC;AAoBP,OAAO,MAAMM,YAAY,GAAGN,GAAI;;;;;;;;;;;;;;;;;;CAAzB;AAoBP,OAAO,MAAMO,mBAAmB,GAAGP,GAAI;;;;;;;;;;;;;;;;;;;;CAAhC;AAsBP,OAAO,MAAMQ,qBAAqB,GAAGR,GAAI;;;;;;;;;;;CAAlC;AAaP,OAAO,MAAMS,iCAAiC,GAAGT,GAAI;;;;;;;;;;;CAA9C;AAaP,OAAO,MAAMU,mBAAmB,GAAGV,GAAI;;;;;;;;;;;;;CAAhC","sourcesContent":["import gql from 'graphql-tag'\n\nexport const TRANSACTIONS_QUERY = gql`\n  query transactions($exchangeAddr: String!) {\n    transactions(where: { exchangeAddress: $exchangeAddr }, orderBy: timestamp, orderDirection: desc) {\n      id\n      user\n      block\n      fee\n      timestamp\n      addLiquidityEvents {\n        id\n      }\n      removeLiquidityEvents {\n        CH\n      }\n      tokenPurchaseEvents {\n        id\n      }\n      ethPurchaseEvents {\n        id\n      }\n    }\n  }\n`\n\nexport const TRANSACTIONS_QUERY_SKIPPABLE = gql`\n  query transactions($timestamp: Int!, $exchangeAddr: String!, $skip: Int!) {\n    transactions(\n      skip: $skip\n      where: { timestamp_gt: $timestamp, exchangeAddress: $exchangeAddr }\n      orderBy: timestamp\n      orderDirection: desc\n    ) {\n      id\n      user\n      block\n      fee\n      exchangeAddress\n      timestamp\n      addLiquidityEvents {\n        id\n        ethAmount\n        tokenAmount\n      }\n      removeLiquidityEvents {\n        id\n        ethAmount\n        tokenAmount\n      }\n      tokenPurchaseEvents {\n        id\n        ethAmount\n        tokenAmount\n      }\n      ethPurchaseEvents {\n        id\n        ethAmount\n        tokenAmount\n      }\n    }\n  }\n`\n\nexport const CHART_QUERY = gql`\n  query exchangeDayDatas($date: Int!, $exchangeAddr: String!) {\n    exchangeDayDatas(where: { exchangeAddress: $exchangeAddr, date_gt: $date }, orderBy: date, orderDirection: asc) {\n      date\n      ethBalance\n      tokenBalance\n      marginalEthRate\n      ethVolume\n      tokenPriceUSD\n      totalEvents\n    }\n  }\n`\n\nexport const DIRECTORY_QUERY = gql`\n  query exchanges($first: Int!, $skip: Int!) {\n    exchanges(first: $first, skip: $skip, orderBy: combinedBalanceInUSD, orderDirection: desc) {\n      id\n      tokenSymbol\n      tokenName\n      tokenDecimals\n      tokenAddress\n      ethBalance\n    }\n  }\n`\n\nexport const OVERVIEW_PAGE_QUERY = gql`\n  query exchanges($first: Int!, $skip: Int!) {\n    exchanges(first: $first, skip: $skip, orderBy: ethBalance, orderDirection: desc) {\n      id\n      tokenAddress\n      tokenName\n      tokenSymbol\n      tokenDecimals\n      price\n      priceUSD\n      ethBalance\n      tradeVolumeEth\n      tradeVolumeToken\n      tradeVolumeUSD\n      tokenBalance\n      totalTxsCount\n    }\n  }\n`\n\nexport const TICKER_QUERY = gql`\n  query exchange($id: String!) {\n    exchange(id: $id) {\n      id\n      tokenAddress\n      tokenName\n      tokenSymbol\n      price\n      priceUSD\n      tokenBalance\n      ethBalance\n      tradeVolumeEth\n      tradeVolumeToken\n      tradeVolumeUSD\n      tokenBalance\n      totalTxsCount\n    }\n  }\n`\n\nexport const TICKER_24HOUR_QUERY = gql`\n  query exchangeHistoricalDatas($timestamp: Int!, $exchangeAddr: String!) {\n    exchangeHistoricalDatas(\n      where: { timestamp_lt: $timestamp, exchangeAddress: $exchangeAddr }\n      first: 1\n      orderBy: tradeVolumeEth\n      orderDirection: desc\n    ) {\n      id\n      timestamp\n      exchangeAddress\n      tradeVolumeEth\n      tradeVolumeToken\n      tradeVolumeUSD\n      tokenPriceUSD\n      price\n      ethBalance\n      totalTxsCount\n    }\n  }\n`\n\nexport const UNISWAP_GLOBALS_QUERY = gql`\n  query totals {\n    uniswap(id: \"1\") {\n      totalVolumeUSD\n      totalVolumeInEth\n      totalLiquidityUSD\n      totalLiquidityInEth\n      txCount\n      exchangeCount\n    }\n  }\n`\n\nexport const UNISWAP_GLOBALS_24HOURS_AGO_QUERY = gql`\n  query uniswapHistoricalDatas($date: Int!) {\n    uniswapHistoricalDatas(where: { timestamp_lt: $date }, first: 1, orderBy: timestamp, orderDirection: desc) {\n      totalVolumeInEth\n      totalVolumeUSD\n      totalLiquidityInEth\n      totalLiquidityUSD\n      txCount\n      timestamp\n    }\n  }\n`\n\nexport const UNISWAP_CHART_QUERY = gql`\n  query uniswapDayDatas($date: Int!) {\n    uniswapDayDatas(where: { date_gt: $date }, orderBy: date, orderDirection: asc) {\n      date\n      totalVolumeInEth\n      totalVolumeUSD\n      totalLiquidityInEth\n      totalLiquidityUSD\n      txCount\n      dailyVolumeInETH\n      dailyVolumeInUSD\n    }\n  }\n`\n"]},"metadata":{},"sourceType":"module"}