{"ast":null,"code":"import { useCallback, useEffect, useRef, useState } from 'react';\nexport default function useStateValidator(state, validator, initialValidity) {\n  if (initialValidity === void 0) {\n    initialValidity = [undefined];\n  }\n\n  var validatorFn = useRef(validator);\n\n  var _a = useState(initialValidity),\n      validity = _a[0],\n      setValidity = _a[1];\n\n  var validate = useCallback(function () {\n    if (validatorFn.current.length === 2) {\n      validatorFn.current(state, setValidity);\n    } else {\n      setValidity(validatorFn.current(state));\n    }\n  }, [state]);\n  useEffect(function () {\n    validate();\n  }, [state]);\n  return [validity, validate];\n}","map":{"version":3,"sources":["/workspace/uniswap-info/node_modules/react-use/esm/useStateValidator.js"],"names":["useCallback","useEffect","useRef","useState","useStateValidator","state","validator","initialValidity","undefined","validatorFn","_a","validity","setValidity","validate","current","length"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,MAAjC,EAAyCC,QAAzC,QAAyD,OAAzD;AACA,eAAe,SAASC,iBAAT,CAA2BC,KAA3B,EAAkCC,SAAlC,EAA6CC,eAA7C,EAA8D;AACzE,MAAIA,eAAe,KAAK,KAAK,CAA7B,EAAgC;AAAEA,IAAAA,eAAe,GAAG,CAACC,SAAD,CAAlB;AAAgC;;AAClE,MAAIC,WAAW,GAAGP,MAAM,CAACI,SAAD,CAAxB;;AACA,MAAII,EAAE,GAAGP,QAAQ,CAACI,eAAD,CAAjB;AAAA,MAAoCI,QAAQ,GAAGD,EAAE,CAAC,CAAD,CAAjD;AAAA,MAAsDE,WAAW,GAAGF,EAAE,CAAC,CAAD,CAAtE;;AACA,MAAIG,QAAQ,GAAGb,WAAW,CAAC,YAAY;AACnC,QAAIS,WAAW,CAACK,OAAZ,CAAoBC,MAApB,KAA+B,CAAnC,EAAsC;AAClCN,MAAAA,WAAW,CAACK,OAAZ,CAAoBT,KAApB,EAA2BO,WAA3B;AACH,KAFD,MAGK;AACDA,MAAAA,WAAW,CAACH,WAAW,CAACK,OAAZ,CAAoBT,KAApB,CAAD,CAAX;AACH;AACJ,GAPyB,EAOvB,CAACA,KAAD,CAPuB,CAA1B;AAQAJ,EAAAA,SAAS,CAAC,YAAY;AAClBY,IAAAA,QAAQ;AACX,GAFQ,EAEN,CAACR,KAAD,CAFM,CAAT;AAGA,SAAO,CAACM,QAAD,EAAWE,QAAX,CAAP;AACH","sourcesContent":["import { useCallback, useEffect, useRef, useState } from 'react';\nexport default function useStateValidator(state, validator, initialValidity) {\n    if (initialValidity === void 0) { initialValidity = [undefined]; }\n    var validatorFn = useRef(validator);\n    var _a = useState(initialValidity), validity = _a[0], setValidity = _a[1];\n    var validate = useCallback(function () {\n        if (validatorFn.current.length === 2) {\n            validatorFn.current(state, setValidity);\n        }\n        else {\n            setValidity(validatorFn.current(state));\n        }\n    }, [state]);\n    useEffect(function () {\n        validate();\n    }, [state]);\n    return [validity, validate];\n}\n"]},"metadata":{},"sourceType":"module"}