{"ast":null,"code":"import _taggedTemplateLiteral from\"/workspace/uniswap-info/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject10(){var data=_taggedTemplateLiteral([\"\\n  query uniswapDayDatas($date: Int!) {\\n    uniswapDayDatas(where: { date_gt: $date }, orderBy: date, orderDirection: asc) {\\n      date\\n      totalVolumeInEth\\n      totalVolumeUSD\\n      totalLiquidityInEth\\n      totalLiquidityUSD\\n      txCount\\n      dailyVolumeInETH\\n      dailyVolumeInUSD\\n    }\\n  }\\n\"]);_templateObject10=function _templateObject10(){return data;};return data;}function _templateObject9(){var data=_taggedTemplateLiteral([\"\\n  query uniswapHistoricalDatas($date: Int!) {\\n    uniswapHistoricalDatas(where: { timestamp_lt: $date }, first: 1, orderBy: timestamp, orderDirection: desc) {\\n      totalVolumeInEth\\n      totalVolumeUSD\\n      totalLiquidityInEth\\n      totalLiquidityUSD\\n      txCount\\n      timestamp\\n    }\\n  }\\n\"]);_templateObject9=function _templateObject9(){return data;};return data;}function _templateObject8(){var data=_taggedTemplateLiteral([\"\\n  query totals {\\n    uniswap(id: \\\"1\\\") {\\n      totalVolumeUSD\\n      totalVolumeInEth\\n      totalLiquidityUSD\\n      totalLiquidityInEth\\n      txCount\\n      exchangeCount\\n    }\\n  }\\n\"]);_templateObject8=function _templateObject8(){return data;};return data;}function _templateObject7(){var data=_taggedTemplateLiteral([\"\\n  query exchangeHistoricalDatas($timestamp: Int!, $exchangeAddr: String!) {\\n    exchangeHistoricalDatas(\\n      where: { timestamp_lt: $timestamp, exchangeAddress: $exchangeAddr }\\n      first: 1\\n      orderBy: tradeVolumeEth\\n      orderDirection: desc\\n    ) {\\n      id\\n      timestamp\\n      exchangeAddress\\n      tradeVolumeEth\\n      tradeVolumeToken\\n      tradeVolumeUSD\\n      tokenPriceUSD\\n      price\\n      ethBalance\\n      totalTxsCount\\n    }\\n  }\\n\"]);_templateObject7=function _templateObject7(){return data;};return data;}function _templateObject6(){var data=_taggedTemplateLiteral([\"\\n  query exchange($id: String!) {\\n    exchange(id: $id) {\\n      id\\n      tokenAddress\\n      tokenName\\n      tokenSymbol\\n      price\\n      priceUSD\\n      tokenBalance\\n      ethBalance\\n      tradeVolumeEth\\n      tradeVolumeToken\\n      tradeVolumeUSD\\n      tokenBalance\\n      totalTxsCount\\n    }\\n  }\\n\"]);_templateObject6=function _templateObject6(){return data;};return data;}function _templateObject5(){var data=_taggedTemplateLiteral([\"\\n  query exchanges($first: Int!, $skip: Int!) {\\n    exchanges(first: $first, skip: $skip, orderBy: ethBalance, orderDirection: desc) {\\n      id\\n      tokenAddress\\n      tokenName\\n      tokenSymbol\\n      tokenDecimals\\n      price\\n      priceUSD\\n      ethBalance\\n      tradeVolumeEth\\n      tradeVolumeToken\\n      tradeVolumeUSD\\n      tokenBalance\\n      totalTxsCount\\n    }\\n  }\\n\"]);_templateObject5=function _templateObject5(){return data;};return data;}function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n  query exchanges($first: Int!, $skip: Int!) {\\n    exchanges(first: $first, skip: $skip, orderBy: combinedBalanceInUSD, orderDirection: desc) {\\n      id\\n      tokenSymbol\\n      tokenName\\n      tokenDecimals\\n      tokenAddress\\n      ethBalance\\n    }\\n  }\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  query exchangeDayDatas($date: Int!, $exchangeAddr: String!) {\\n    exchangeDayDatas(where: { exchangeAddress: $exchangeAddr, date_gt: $date }, orderBy: date, orderDirection: asc) {\\n      date\\n      ethBalance\\n      tokenBalance\\n      marginalEthRate\\n      ethVolume\\n      tokenPriceUSD\\n      totalEvents\\n    }\\n  }\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  query transactions($timestamp: Int!, $exchangeAddr: String!, $skip: Int!) {\\n    transactions(\\n      skip: $skip\\n      where: { timestamp_gt: $timestamp, exchangeAddress: $exchangeAddr }\\n      orderBy: timestamp\\n      orderDirection: desc\\n    ) {\\n      id\\n      user\\n      block\\n      fee\\n      exchangeAddress\\n      timestamp\\n      addLiquidityEvents {\\n        id\\n        ethAmount\\n        tokenAmount\\n      }\\n      removeLiquidityEvents {\\n        id\\n        ethAmount\\n        tokenAmount\\n      }\\n      tokenPurchaseEvents {\\n        id\\n        ethAmount\\n        tokenAmount\\n      }\\n      ethPurchaseEvents {\\n        id\\n        ethAmount\\n        tokenAmount\\n      }\\n    }\\n  }\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  query transactions($exchangeAddr: String!) {\\n    transactions(where: { exchangeAddress: $exchangeAddr }, orderBy: timestamp, orderDirection: desc) {\\n      id\\n      user\\n      block\\n      fee\\n      timestamp\\n      addLiquidityEvents {\\n        id\\n      }\\n      removeLiquidityEvents {\\n        CH\\n      }\\n      tokenPurchaseEvents {\\n        id\\n      }\\n      ethPurchaseEvents {\\n        id\\n      }\\n    }\\n  }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import gql from'graphql-tag';export var TRANSACTIONS_QUERY=gql(_templateObject());export var TRANSACTIONS_QUERY_SKIPPABLE=gql(_templateObject2());export var CHART_QUERY=gql(_templateObject3());export var DIRECTORY_QUERY=gql(_templateObject4());export var OVERVIEW_PAGE_QUERY=gql(_templateObject5());export var TICKER_QUERY=gql(_templateObject6());export var TICKER_24HOUR_QUERY=gql(_templateObject7());export var UNISWAP_GLOBALS_QUERY=gql(_templateObject8());export var UNISWAP_GLOBALS_24HOURS_AGO_QUERY=gql(_templateObject9());export var UNISWAP_CHART_QUERY=gql(_templateObject10());","map":{"version":3,"sources":["/workspace/uniswap-info/src/apollo/queries.js"],"names":["gql","TRANSACTIONS_QUERY","TRANSACTIONS_QUERY_SKIPPABLE","CHART_QUERY","DIRECTORY_QUERY","OVERVIEW_PAGE_QUERY","TICKER_QUERY","TICKER_24HOUR_QUERY","UNISWAP_GLOBALS_QUERY","UNISWAP_GLOBALS_24HOURS_AGO_QUERY","UNISWAP_CHART_QUERY"],"mappings":"+oKAAA,MAAOA,CAAAA,GAAP,KAAgB,aAAhB,CAEA,MAAO,IAAMC,CAAAA,kBAAkB,CAAGD,GAAH,mBAAxB,CAwBP,MAAO,IAAME,CAAAA,4BAA4B,CAAGF,GAAH,oBAAlC,CAsCP,MAAO,IAAMG,CAAAA,WAAW,CAAGH,GAAH,oBAAjB,CAcP,MAAO,IAAMI,CAAAA,eAAe,CAAGJ,GAAH,oBAArB,CAaP,MAAO,IAAMK,CAAAA,mBAAmB,CAAGL,GAAH,oBAAzB,CAoBP,MAAO,IAAMM,CAAAA,YAAY,CAAGN,GAAH,oBAAlB,CAoBP,MAAO,IAAMO,CAAAA,mBAAmB,CAAGP,GAAH,oBAAzB,CAsBP,MAAO,IAAMQ,CAAAA,qBAAqB,CAAGR,GAAH,oBAA3B,CAaP,MAAO,IAAMS,CAAAA,iCAAiC,CAAGT,GAAH,oBAAvC,CAaP,MAAO,IAAMU,CAAAA,mBAAmB,CAAGV,GAAH,qBAAzB","sourcesContent":["import gql from 'graphql-tag'\n\nexport const TRANSACTIONS_QUERY = gql`\n  query transactions($exchangeAddr: String!) {\n    transactions(where: { exchangeAddress: $exchangeAddr }, orderBy: timestamp, orderDirection: desc) {\n      id\n      user\n      block\n      fee\n      timestamp\n      addLiquidityEvents {\n        id\n      }\n      removeLiquidityEvents {\n        CH\n      }\n      tokenPurchaseEvents {\n        id\n      }\n      ethPurchaseEvents {\n        id\n      }\n    }\n  }\n`\n\nexport const TRANSACTIONS_QUERY_SKIPPABLE = gql`\n  query transactions($timestamp: Int!, $exchangeAddr: String!, $skip: Int!) {\n    transactions(\n      skip: $skip\n      where: { timestamp_gt: $timestamp, exchangeAddress: $exchangeAddr }\n      orderBy: timestamp\n      orderDirection: desc\n    ) {\n      id\n      user\n      block\n      fee\n      exchangeAddress\n      timestamp\n      addLiquidityEvents {\n        id\n        ethAmount\n        tokenAmount\n      }\n      removeLiquidityEvents {\n        id\n        ethAmount\n        tokenAmount\n      }\n      tokenPurchaseEvents {\n        id\n        ethAmount\n        tokenAmount\n      }\n      ethPurchaseEvents {\n        id\n        ethAmount\n        tokenAmount\n      }\n    }\n  }\n`\n\nexport const CHART_QUERY = gql`\n  query exchangeDayDatas($date: Int!, $exchangeAddr: String!) {\n    exchangeDayDatas(where: { exchangeAddress: $exchangeAddr, date_gt: $date }, orderBy: date, orderDirection: asc) {\n      date\n      ethBalance\n      tokenBalance\n      marginalEthRate\n      ethVolume\n      tokenPriceUSD\n      totalEvents\n    }\n  }\n`\n\nexport const DIRECTORY_QUERY = gql`\n  query exchanges($first: Int!, $skip: Int!) {\n    exchanges(first: $first, skip: $skip, orderBy: combinedBalanceInUSD, orderDirection: desc) {\n      id\n      tokenSymbol\n      tokenName\n      tokenDecimals\n      tokenAddress\n      ethBalance\n    }\n  }\n`\n\nexport const OVERVIEW_PAGE_QUERY = gql`\n  query exchanges($first: Int!, $skip: Int!) {\n    exchanges(first: $first, skip: $skip, orderBy: ethBalance, orderDirection: desc) {\n      id\n      tokenAddress\n      tokenName\n      tokenSymbol\n      tokenDecimals\n      price\n      priceUSD\n      ethBalance\n      tradeVolumeEth\n      tradeVolumeToken\n      tradeVolumeUSD\n      tokenBalance\n      totalTxsCount\n    }\n  }\n`\n\nexport const TICKER_QUERY = gql`\n  query exchange($id: String!) {\n    exchange(id: $id) {\n      id\n      tokenAddress\n      tokenName\n      tokenSymbol\n      price\n      priceUSD\n      tokenBalance\n      ethBalance\n      tradeVolumeEth\n      tradeVolumeToken\n      tradeVolumeUSD\n      tokenBalance\n      totalTxsCount\n    }\n  }\n`\n\nexport const TICKER_24HOUR_QUERY = gql`\n  query exchangeHistoricalDatas($timestamp: Int!, $exchangeAddr: String!) {\n    exchangeHistoricalDatas(\n      where: { timestamp_lt: $timestamp, exchangeAddress: $exchangeAddr }\n      first: 1\n      orderBy: tradeVolumeEth\n      orderDirection: desc\n    ) {\n      id\n      timestamp\n      exchangeAddress\n      tradeVolumeEth\n      tradeVolumeToken\n      tradeVolumeUSD\n      tokenPriceUSD\n      price\n      ethBalance\n      totalTxsCount\n    }\n  }\n`\n\nexport const UNISWAP_GLOBALS_QUERY = gql`\n  query totals {\n    uniswap(id: \"1\") {\n      totalVolumeUSD\n      totalVolumeInEth\n      totalLiquidityUSD\n      totalLiquidityInEth\n      txCount\n      exchangeCount\n    }\n  }\n`\n\nexport const UNISWAP_GLOBALS_24HOURS_AGO_QUERY = gql`\n  query uniswapHistoricalDatas($date: Int!) {\n    uniswapHistoricalDatas(where: { timestamp_lt: $date }, first: 1, orderBy: timestamp, orderDirection: desc) {\n      totalVolumeInEth\n      totalVolumeUSD\n      totalLiquidityInEth\n      totalLiquidityUSD\n      txCount\n      timestamp\n    }\n  }\n`\n\nexport const UNISWAP_CHART_QUERY = gql`\n  query uniswapDayDatas($date: Int!) {\n    uniswapDayDatas(where: { date_gt: $date }, orderBy: date, orderDirection: asc) {\n      date\n      totalVolumeInEth\n      totalVolumeUSD\n      totalLiquidityInEth\n      totalLiquidityUSD\n      txCount\n      dailyVolumeInETH\n      dailyVolumeInUSD\n    }\n  }\n`\n"]},"metadata":{},"sourceType":"module"}