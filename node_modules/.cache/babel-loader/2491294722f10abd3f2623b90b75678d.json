{"ast":null,"code":"var _jsxFileName = \"/workspace/uniswap-info/src/components/OverviewChart/index.js\";\nimport React from 'react';\nimport { Area, XAxis, YAxis, ResponsiveContainer, BarChart, Bar, CartesianGrid, Tooltip, AreaChart } from 'recharts';\nimport styled from 'styled-components';\nimport { useMedia } from 'react-use';\nimport { toK, toNiceDate, toNiceDateYear } from '../../helpers';\nconst ChartWrapper = styled.div`\n  padding-top: 1em;\n  margin-left: -1em;\n`;\n\nconst OverviewChart = ({\n  data,\n  chartOption,\n  currencyUnit\n}) => {\n  const isNotMobile = useMedia('(max-width: 40em)');\n\n  if (chartOption !== 'volume' && data) {\n    return React.createElement(ChartWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(ResponsiveContainer, {\n      aspect: isNotMobile ? 60 / 22 : 60 / 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(AreaChart, {\n      margin: {\n        top: 0,\n        right: 0,\n        bottom: 6,\n        left: 10\n      },\n      barCategoryGap: 1,\n      data: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(CartesianGrid, {\n      stroke: \"#f5f5f5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      tickLine: false,\n      axisLine: false,\n      interval: \"preserveEnd\",\n      tickMargin: 14,\n      minTickGap: 80,\n      tickFormatter: tick => toNiceDate(tick),\n      dataKey: \"dayString\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      hide: isNotMobile,\n      type: \"number\",\n      tickMargin: 16,\n      orientation: \"left\",\n      tickFormatter: tick => toK(tick),\n      axisLine: false,\n      tickLine: false,\n      interval: \"preserveEnd\",\n      minTickGap: 80,\n      yAxisId: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      hide: true,\n      type: \"number\",\n      tickMargin: 16,\n      orientation: \"right\",\n      tickFormatter: tick => toK(tick),\n      axisLine: false,\n      tickLine: false,\n      interval: \"preserveEnd\",\n      minTickGap: 80,\n      yAxisId: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      cursor: true,\n      formatter: val => toK(val, true),\n      labelFormatter: label => toNiceDateYear(label),\n      labelStyle: {\n        paddingTop: 4\n      },\n      contentStyle: {\n        padding: '10px 14px',\n        borderRadius: 10,\n        borderColor: 'var(--c-zircon)'\n      },\n      wrapperStyle: {\n        top: -70,\n        left: -10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Area, {\n      strokeWidth: 2,\n      dot: false,\n      type: \"monotone\",\n      name: 'Total Liquidity' + (currencyUnit === 'USD' ? ' (USD)' : ' (ETH)'),\n      dataKey: currencyUnit === 'USD' ? 'usdLiquidity' : 'ethLiquidity',\n      yAxisId: 0,\n      fill: \"#FE6DDE\",\n      opacity: '0.4',\n      stroke: \"#FE6DDE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }))));\n  } else {\n    // volume\n    return React.createElement(ChartWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(ResponsiveContainer, {\n      aspect: isNotMobile ? 60 / 22 : 60 / 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(BarChart, {\n      margin: {\n        top: 0,\n        right: 0,\n        bottom: 6,\n        left: 10\n      },\n      barCategoryGap: 1,\n      data: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(CartesianGrid, {\n      stroke: \"#f5f5f5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      tickLine: false,\n      axisLine: false,\n      interval: \"preserveEnd\",\n      minTickGap: 80,\n      tickMargin: 14,\n      tickFormatter: tick => toNiceDate(tick),\n      dataKey: \"dayString\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      hide: isNotMobile,\n      type: \"number\",\n      axisLine: false,\n      tickMargin: 16,\n      tickFormatter: tick => toK(tick),\n      tickLine: false,\n      interval: \"preserveEnd\",\n      minTickGap: 80,\n      yAxisId: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      cursor: true,\n      formatter: val => toK(val, true),\n      labelFormatter: label => toNiceDateYear(label),\n      labelStyle: {\n        paddingTop: 4\n      },\n      contentStyle: {\n        padding: '10px 14px',\n        borderRadius: 10,\n        borderColor: 'var(--c-zircon)'\n      },\n      wrapperStyle: {\n        top: -70,\n        left: -10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      type: \"monotone\",\n      name: 'Volume' + (currencyUnit === 'USD' ? ' (USD)' : ' (ETH)'),\n      dataKey: currencyUnit === 'USD' ? 'dailyUSDVolume' : 'dailyEthVolume',\n      fill: \"#FE6DDE\",\n      opacity: '0.4',\n      stroke: \"#FE6DDE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }))));\n  }\n};\n\nexport default OverviewChart;","map":{"version":3,"sources":["/workspace/uniswap-info/src/components/OverviewChart/index.js"],"names":["React","Area","XAxis","YAxis","ResponsiveContainer","BarChart","Bar","CartesianGrid","Tooltip","AreaChart","styled","useMedia","toK","toNiceDate","toNiceDateYear","ChartWrapper","div","OverviewChart","data","chartOption","currencyUnit","isNotMobile","top","right","bottom","left","tick","val","label","paddingTop","padding","borderRadius","borderColor"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Area, XAxis, YAxis, ResponsiveContainer, BarChart, Bar, CartesianGrid, Tooltip, AreaChart } from 'recharts'\nimport styled from 'styled-components'\nimport { useMedia } from 'react-use'\nimport { toK, toNiceDate, toNiceDateYear } from '../../helpers'\n\nconst ChartWrapper = styled.div`\n  padding-top: 1em;\n  margin-left: -1em;\n`\n\nconst OverviewChart = ({ data, chartOption, currencyUnit }) => {\n  const isNotMobile = useMedia('(max-width: 40em)')\n  if (chartOption !== 'volume' && data) {\n    return (\n      <ChartWrapper>\n        <ResponsiveContainer aspect={isNotMobile ? 60 / 22 : 60 / 12}>\n          <AreaChart margin={{ top: 0, right: 0, bottom: 6, left: 10 }} barCategoryGap={1} data={data}>\n            <CartesianGrid stroke=\"#f5f5f5\" />\n            <XAxis\n              tickLine={false}\n              axisLine={false}\n              interval=\"preserveEnd\"\n              tickMargin={14}\n              minTickGap={80}\n              tickFormatter={tick => toNiceDate(tick)}\n              dataKey=\"dayString\"\n            />\n            <YAxis\n              hide={isNotMobile}\n              type=\"number\"\n              tickMargin={16}\n              orientation=\"left\"\n              tickFormatter={tick => toK(tick)}\n              axisLine={false}\n              tickLine={false}\n              interval=\"preserveEnd\"\n              minTickGap={80}\n              yAxisId={0}\n            />\n            <YAxis\n              hide={true}\n              type=\"number\"\n              tickMargin={16}\n              orientation=\"right\"\n              tickFormatter={tick => toK(tick)}\n              axisLine={false}\n              tickLine={false}\n              interval=\"preserveEnd\"\n              minTickGap={80}\n              yAxisId={1}\n            />\n            <Tooltip\n              cursor={true}\n              formatter={val => toK(val, true)}\n              labelFormatter={label => toNiceDateYear(label)}\n              labelStyle={{ paddingTop: 4 }}\n              contentStyle={{\n                padding: '10px 14px',\n                borderRadius: 10,\n                borderColor: 'var(--c-zircon)'\n              }}\n              wrapperStyle={{ top: -70, left: -10 }}\n            />\n            <Area\n              strokeWidth={2}\n              dot={false}\n              type=\"monotone\"\n              name={'Total Liquidity' + (currencyUnit === 'USD' ? ' (USD)' : ' (ETH)')}\n              dataKey={currencyUnit === 'USD' ? 'usdLiquidity' : 'ethLiquidity'}\n              yAxisId={0}\n              fill=\"#FE6DDE\"\n              opacity={'0.4'}\n              stroke=\"#FE6DDE\"\n            />\n          </AreaChart>\n        </ResponsiveContainer>\n      </ChartWrapper>\n    )\n  } else {\n    // volume\n    return (\n      <ChartWrapper>\n        <ResponsiveContainer aspect={isNotMobile ? 60 / 22 : 60 / 12}>\n          <BarChart margin={{ top: 0, right: 0, bottom: 6, left: 10 }} barCategoryGap={1} data={data}>\n            <CartesianGrid stroke=\"#f5f5f5\" />\n            <XAxis\n              tickLine={false}\n              axisLine={false}\n              interval=\"preserveEnd\"\n              minTickGap={80}\n              tickMargin={14}\n              tickFormatter={tick => toNiceDate(tick)}\n              dataKey=\"dayString\"\n            />\n            <YAxis\n              hide={isNotMobile}\n              type=\"number\"\n              axisLine={false}\n              tickMargin={16}\n              tickFormatter={tick => toK(tick)}\n              tickLine={false}\n              interval=\"preserveEnd\"\n              minTickGap={80}\n              yAxisId={0}\n            />\n            <Tooltip\n              cursor={true}\n              formatter={val => toK(val, true)}\n              labelFormatter={label => toNiceDateYear(label)}\n              labelStyle={{ paddingTop: 4 }}\n              contentStyle={{\n                padding: '10px 14px',\n                borderRadius: 10,\n                borderColor: 'var(--c-zircon)'\n              }}\n              wrapperStyle={{ top: -70, left: -10 }}\n            />\n            <Bar\n              type=\"monotone\"\n              name={'Volume' + (currencyUnit === 'USD' ? ' (USD)' : ' (ETH)')}\n              dataKey={currencyUnit === 'USD' ? 'dailyUSDVolume' : 'dailyEthVolume'}\n              fill=\"#FE6DDE\"\n              opacity={'0.4'}\n              stroke=\"#FE6DDE\"\n            />\n          </BarChart>\n        </ResponsiveContainer>\n      </ChartWrapper>\n    )\n  }\n}\n\nexport default OverviewChart\n"]},"metadata":{},"sourceType":"module"}