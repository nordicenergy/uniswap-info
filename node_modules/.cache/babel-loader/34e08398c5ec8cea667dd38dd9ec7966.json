{"ast":null,"code":"import _regeneratorRuntime from\"/workspace/uniswap-info/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/workspace/uniswap-info/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/workspace/uniswap-info/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/workspace/uniswap-info/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject9(){var data=_taggedTemplateLiteral([\"\\n  @media screen and (max-width: 40em) {\\n    font-size: 14px;\\n  }\\n\\n  align-items: center;\\n  text-align: right;\\n\\n  & > * {\\n    font-size: 1em;\\n  }\\n\"]);_templateObject9=function _templateObject9(){return data;};return data;}function _templateObject8(){var data=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  display: flex;\\n  height: 80px;\\n  align-items: center;\\n  justify-content: center;\\n\"]);_templateObject8=function _templateObject8(){return data;};return data;}function _templateObject7(){var data=_taggedTemplateLiteral([\"\\n  &:hover {\\n    cursor: pointer;\\n    opacity: 0.6;\\n  }\\n  user-select: none;\\n\"]);_templateObject7=function _templateObject7(){return data;};return data;}function _templateObject6(){var data=_taggedTemplateLiteral([\"\\n  margin-left: 0px;\\n\"]);_templateObject6=function _templateObject6(){return data;};return data;}function _templateObject5(){var data=_taggedTemplateLiteral([\"\\n  @media screen and (max-width: 40em) {\\n    padding-right: 1rem;\\n    padding-left: 1rem;\\n  }\\n\"]);_templateObject5=function _templateObject5(){return data;};return data;}function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-gap: 1em;\\n  grid-template-columns: 100px 1fr 1fr;\\n  grid-template-areas: 'action value Time';\\n  padding: 0 6px;\\n\\n  > * {\\n    justify-content: flex-end;\\n    width: 100%;\\n\\n    &:first-child {\\n      justify-content: flex-start;\\n      text-align: left;\\n      width: 100px;\\n    }\\n  }\\n\\n  @media screen and (min-width: 40em) {\\n    max-width: 1280px;\\n    display: grid;\\n    grid-gap: 1em;\\n    grid-template-columns: 180px 1fr 1fr 1fr;\\n    grid-template-areas: 'action value Account Time';\\n\\n    > * {\\n      justify-content: flex-end;\\n      width: 100%;\\n\\n      &:first-child {\\n        justify-content: flex-start;\\n        width: 180px;\\n      }\\n    }\\n  }\\n\\n  @media screen and (min-width: 64em) {\\n    max-width: 1280px;\\n    display: grid;\\n    padding: 0 24px;\\n    grid-gap: 1em;\\n    grid-template-columns: 1.2fr 1fr 1fr 1fr 1fr 1fr;\\n    grid-template-areas: 'action value ethAmount tokenAmount Account Time';\\n  }\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  -webkit-overflow-scrolling: touch;\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  color: #2f80ed;\\n  opacity: \",\";\\n  padding: 0 20px;\\n  user-select: none;\\n\\n  :hover {\\n    cursor: pointer;\\n  }\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  display: flex;\\n  justify-content: center;\\n  margin-top: 2em;\\n  margin-bottom: 2em;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState,useEffect}from'react';import{useMedia}from'react-use';import dayjs from'dayjs';import LocalLoader from'../LocalLoader';import utc from'dayjs/plugin/utc';import{client}from'../../apollo/client';import{TRANSACTIONS_QUERY_SKIPPABLE}from'../../apollo/queries';import{Box,Flex,Text}from'rebass';import styled from'styled-components';import Link from'../Link';import{Divider}from'../../components';import{urls,formatTime,Big,formattedNum}from'../../helpers';dayjs.extend(utc);var PageButtons=styled.div(_templateObject());var Arrow=styled.div(_templateObject2(),function(props){return props.faded?0.3:1;});var List=styled(Box)(_templateObject3());var DashGrid=styled.div(_templateObject4());var ListWrapper=styled.div(_templateObject5());var CustomLink=styled(Link)(_templateObject6());var ClickableText=styled(Text)(_templateObject7());var EmptyTxWrapper=styled.div(_templateObject8());var DataText=styled(Flex)(_templateObject9());var SORT_FIELD={TIME:'timestamp',USD_VALUE:'usdAmount',ETH_VALUE:'ethAmount',TOKEN_VALUE:'tokenAmount'};// @TODO rework into virtualized list\nfunction TransactionsList(_ref){var tokenSymbol=_ref.tokenSymbol,exchangeAddress=_ref.exchangeAddress,price=_ref.price,priceUSD=_ref.priceUSD,txFilter=_ref.txFilter,accountInput=_ref.accountInput;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),txs=_useState2[0],setTxs=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),swaps=_useState4[0],SetSwaps=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),adds=_useState6[0],SetAdds=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),removes=_useState8[0],SetRemoves=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),filteredTxs=_useState10[0],SetFilteredTxs=_useState10[1];var _useState11=useState(1),_useState12=_slicedToArray(_useState11,2),page=_useState12[0],setPage=_useState12[1];var _useState13=useState(1),_useState14=_slicedToArray(_useState13,2),maxPage=_useState14[0],setMaxPage=_useState14[1];var TXS_PER_PAGE=10;var _useState15=useState(true),_useState16=_slicedToArray(_useState15,2),loading=_useState16[0],setLoading=_useState16[1];var _useState17=useState(true),_useState18=_slicedToArray(_useState17,2),sortDirection=_useState18[0],setSortDirection=_useState18[1];var _useState19=useState(SORT_FIELD.TIME),_useState20=_slicedToArray(_useState19,2),sortedColumn=_useState20[0],setSortedColumn=_useState20[1];useEffect(function(){setMaxPage(1);setPage(1);},[exchangeAddress]);useEffect(function(){var extraPages=1;if(accountInput!==''){var foundAccounts=[];for(var x=0;x<txs.length;x++){if(txs[x].user.toString().toUpperCase().search(accountInput.toUpperCase())>-1){foundAccounts.push(txs[x]);}}SetFilteredTxs(foundAccounts);if(foundAccounts.length%TXS_PER_PAGE===0){extraPages=0;}setMaxPage(Math.floor(foundAccounts.length/TXS_PER_PAGE)+extraPages);}else{SetFilteredTxs(txs);if(txs.length%TXS_PER_PAGE===0){extraPages=0;}setMaxPage(Math.floor(txs.length/TXS_PER_PAGE)+extraPages);}},[accountInput,txs]);function sortTxs(field){if(field===SORT_FIELD.USD_VALUE){field=SORT_FIELD.ETH_VALUE;}var newTxs=filteredTxs.slice().sort(function(a,b){return parseFloat(a[field])>parseFloat(b[field])?(sortDirection?-1:1)*-1:(sortDirection?-1:1)*1;});SetFilteredTxs(newTxs);setPage(1);}useEffect(function(){setSortDirection(true);switch(txFilter){case'Add':SetFilteredTxs(adds);setMaxPage(Math.floor(adds.length/TXS_PER_PAGE)+1);setPage(1);break;case'Remove':SetFilteredTxs(removes);setMaxPage(Math.floor(removes.length/TXS_PER_PAGE)+1);setPage(1);break;case'Swaps':SetFilteredTxs(swaps);setMaxPage(Math.floor(swaps.length/TXS_PER_PAGE)+1);setPage(1);break;default:SetFilteredTxs(txs);setMaxPage(Math.floor(txs.length/TXS_PER_PAGE)+1);setPage(1);break;}},[txFilter,adds,removes,swaps,txs]);/**\n   *  Fetch the overall and 24hour data for each exchange\n   *\n   * Update when exhcange changes\n   *\n   * Store results in categorized arrays for faster sorting\n   *\n   */useEffect(function(){setPage(1);var ab=new AbortController();setLoading(true);function getTxs(){return _getTxs.apply(this,arguments);}function _getTxs(){_getTxs=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var utcEndTime,utcStartTime,startTime,data,skipCount,fetchingData,result,ts,newSwaps,newAdds,newRemoves;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// current time\nutcEndTime=dayjs();utcStartTime=utcEndTime.subtract(1,'day');startTime=utcStartTime.unix()-1;// -1 because we filter on greater than in the query\ndata=[];skipCount=0;fetchingData=true;case 6:if(!fetchingData){_context.next=14;break;}ab=new AbortController();_context.next=10;return client.query({query:TRANSACTIONS_QUERY_SKIPPABLE,variables:{timestamp:startTime,exchangeAddr:exchangeAddress,skip:skipCount},fetchOptions:{signal:ab.signal},fetchPolicy:'network-only'});case 10:result=_context.sent;if(result){skipCount=skipCount+100;if(result.data.transactions.length===0||result.data.transactions[result.data.transactions.length-1].timestamp<startTime){fetchingData=false;}data=data.concat(result.data.transactions);}_context.next=6;break;case 14:ts=[];newSwaps=[];newAdds=[];newRemoves=[];Object.keys(data).map(function(item,i){if(data[item].timestamp>startTime){if(data[item].addLiquidityEvents.length>0){var entry;var newItem={tx:data[item].id,ethAmount:'',tokenAmount:'',user:data[item].user,timestamp:data[item].timestamp};for(entry in data[item].addLiquidityEvents){newItem.ethAmount=data[item].addLiquidityEvents[entry].ethAmount;newItem.tokenAmount=data[item].addLiquidityEvents[entry].tokenAmount;newItem.event='AddLiquidity';newAdds.push(newItem);ts.push(newItem);}}if(data[item].removeLiquidityEvents.length>0){var _entry;var _newItem={tx:data[item].id,ethAmount:'',tokenAmount:'',user:data[item].user,timestamp:data[item].timestamp};for(_entry in data[item].removeLiquidityEvents){_newItem.ethAmount=data[item].removeLiquidityEvents[_entry].ethAmount;_newItem.tokenAmount=data[item].removeLiquidityEvents[_entry].tokenAmount;_newItem.event='RemoveLiquidity';newRemoves.push(_newItem);ts.push(_newItem);}}if(data[item].tokenPurchaseEvents.length>0){var _entry2;var _newItem2={tx:data[item].id,ethAmount:'',tokenAmount:'',user:data[item].user,timestamp:data[item].timestamp};for(_entry2 in data[item].tokenPurchaseEvents){_newItem2.ethAmount=data[item].tokenPurchaseEvents[_entry2].ethAmount;_newItem2.tokenAmount=data[item].tokenPurchaseEvents[_entry2].tokenAmount;_newItem2.event='TokenPurchase';newSwaps.push(_newItem2);ts.push(_newItem2);}}if(data[item].ethPurchaseEvents.length>0){var _entry3;var _newItem3={tx:data[item].id,ethAmount:'',tokenAmount:'',user:data[item].user,timestamp:data[item].timestamp};for(_entry3 in data[item].ethPurchaseEvents){_newItem3.ethAmount=data[item].ethPurchaseEvents[_entry3].ethAmount;_newItem3.tokenAmount=data[item].ethPurchaseEvents[_entry3].tokenAmount;_newItem3.event='EthPurchase';newSwaps.push(_newItem3);ts.push(_newItem3);}}}return true;});setTxs(ts);SetFilteredTxs(ts);SetSwaps(newSwaps);SetAdds(newAdds);SetRemoves(newRemoves);setLoading(false);// setTxCount(ts.length)\nsetMaxPage(Math.floor(ts.length/TXS_PER_PAGE)+1);case 26:case\"end\":return _context.stop();}}},_callee);}));return _getTxs.apply(this,arguments);}getTxs();// cleanup graphql call\nreturn function cleanup(){ab.abort();};},[exchangeAddress]);function getTransactionType(event,symbol){switch(event){case'AddLiquidity':return'Add ETH and '+symbol;case'RemoveLiquidity':return'Remove ETH and '+symbol;case'Token Swap':return'Swap '+symbol+' for ETH';case'EthPurchase':return'Swap '+symbol+' for ETH';case'TokenPurchase':return'Swap ETH for '+symbol;default:return'';}}var belowMedium=useMedia('(max-width: 64em)');var belowSmall=useMedia('(max-width: 40em)');var TransactionItem=function TransactionItem(_ref2){var transaction=_ref2.transaction,tokenSymbol=_ref2.tokenSymbol;return React.createElement(DashGrid,{style:{height:'60px'}},React.createElement(DataText,{area:'action',color:\"text\",fontWeight:\"500\"},React.createElement(CustomLink,{ml:\"3\",color:\"button\",external:true,href:urls.showTransaction(transaction.tx.split('-')[0])},getTransactionType(transaction.event,tokenSymbol))),React.createElement(DataText,{area:'value'},price&&priceUSD?'$'+formattedNum(Big(transaction.ethAmount)*price*priceUSD*(transaction.event==='AddLiquidity'||transaction.event==='RemoveLiquidity'?2:1),true):''),!belowMedium?React.createElement(React.Fragment,null,React.createElement(DataText,{area:'ethAmount'},formattedNum(Big(transaction.ethAmount))),React.createElement(DataText,{area:'tokenAmount'},formattedNum(Big(transaction.tokenAmount)))):'',!belowSmall?React.createElement(DataText,{area:'Account'},React.createElement(Link,{ml:\"3\",color:\"button\",external:true,href:'https://etherscan.io/address/'+transaction.user},transaction.user.slice(0,6)+'...'+transaction.user.slice(38,42))):'',React.createElement(DataText,{area:'Time'},formatTime(transaction.timestamp)));};return React.createElement(ListWrapper,null,React.createElement(DashGrid,{center:true,style:{height:'60px'}},React.createElement(Flex,{alignItems:\"center\"},React.createElement(Text,{color:\"text\",area:'action'},\"Transactions (24h)\")),React.createElement(Flex,{alignItems:\"center\"},React.createElement(ClickableText,{area:'value',color:\"textDim\",onClick:function onClick(e){setSortedColumn(SORT_FIELD.USD_VALUE);setSortDirection(!sortDirection);sortTxs(SORT_FIELD.USD_VALUE);}},\"Value \",sortedColumn===SORT_FIELD.USD_VALUE?!sortDirection?'↑':'↓':'')),!belowMedium?React.createElement(React.Fragment,null,React.createElement(Flex,{alignItems:\"center\"},React.createElement(ClickableText,{area:'ethAmount',color:\"textDim\",onClick:function onClick(e){setSortedColumn(SORT_FIELD.ETH_VALUE);setSortDirection(!sortDirection);sortTxs(SORT_FIELD.ETH_VALUE);}},\"ETH Amount \",sortedColumn===SORT_FIELD.ETH_VALUE?!sortDirection?'↑':'↓':'')),React.createElement(Flex,{alignItems:\"center\"},React.createElement(ClickableText,{area:'tokenAmount',color:\"textDim\",onClick:function onClick(e){setSortedColumn(SORT_FIELD.TOKEN_VALUE);setSortDirection(!sortDirection);sortTxs(SORT_FIELD.TOKEN_VALUE);}},\"Token Amount \",sortedColumn===SORT_FIELD.TOKEN_VALUE?!sortDirection?'↑':'↓':''))):'',!belowSmall?React.createElement(Flex,{alignItems:\"center\"},React.createElement(Text,{area:'Account',color:\"textDim\"},\"Account\")):'',React.createElement(Flex,{alignItems:\"center\"},React.createElement(ClickableText,{area:'time',color:\"textDim\",onClick:function onClick(e){setSortedColumn(SORT_FIELD.TIME);setSortDirection(!sortDirection);sortTxs(SORT_FIELD.TIME);}},\"Time \",sortedColumn===SORT_FIELD.TIME?!sortDirection?'↑':'↓':''))),React.createElement(Divider,null),React.createElement(List,{p:0},!loading&&txs&&filteredTxs.length===0?React.createElement(EmptyTxWrapper,null,\"No transactions in last 24 hours\"):'',loading?React.createElement(LocalLoader,null):filteredTxs.slice(TXS_PER_PAGE*(page-1),page*TXS_PER_PAGE).map(function(tx,index){return React.createElement(\"div\",{key:index},React.createElement(TransactionItem,{key:index,transaction:tx,tokenSymbol:tokenSymbol}),React.createElement(Divider,null));})),React.createElement(PageButtons,null,React.createElement(\"div\",{onClick:function onClick(e){setPage(page===1?page:page-1);}},React.createElement(Arrow,{faded:page===1?true:false},\"\\u2190\")),'Page '+page+' of '+maxPage,React.createElement(\"div\",{onClick:function onClick(e){setPage(page===maxPage?page:page+1);}},React.createElement(Arrow,{faded:page===maxPage?true:false},\"\\u2192\"))));}TransactionsList.defaultProps={transactions:[]};export default TransactionsList;","map":{"version":3,"sources":["/workspace/uniswap-info/src/components/TransactionsList/index.js"],"names":["React","useState","useEffect","useMedia","dayjs","LocalLoader","utc","client","TRANSACTIONS_QUERY_SKIPPABLE","Box","Flex","Text","styled","Link","Divider","urls","formatTime","Big","formattedNum","extend","PageButtons","div","Arrow","props","faded","List","DashGrid","ListWrapper","CustomLink","ClickableText","EmptyTxWrapper","DataText","SORT_FIELD","TIME","USD_VALUE","ETH_VALUE","TOKEN_VALUE","TransactionsList","tokenSymbol","exchangeAddress","price","priceUSD","txFilter","accountInput","txs","setTxs","swaps","SetSwaps","adds","SetAdds","removes","SetRemoves","filteredTxs","SetFilteredTxs","page","setPage","maxPage","setMaxPage","TXS_PER_PAGE","loading","setLoading","sortDirection","setSortDirection","sortedColumn","setSortedColumn","extraPages","foundAccounts","x","length","user","toString","toUpperCase","search","push","Math","floor","sortTxs","field","newTxs","slice","sort","a","b","parseFloat","ab","AbortController","getTxs","utcEndTime","utcStartTime","subtract","startTime","unix","data","skipCount","fetchingData","query","variables","timestamp","exchangeAddr","skip","fetchOptions","signal","fetchPolicy","result","transactions","concat","ts","newSwaps","newAdds","newRemoves","Object","keys","map","item","i","addLiquidityEvents","entry","newItem","tx","id","ethAmount","tokenAmount","event","removeLiquidityEvents","tokenPurchaseEvents","ethPurchaseEvents","cleanup","abort","getTransactionType","symbol","belowMedium","belowSmall","TransactionItem","transaction","height","showTransaction","split","e","index","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useMedia } from 'react-use'\nimport dayjs from 'dayjs'\nimport LocalLoader from '../LocalLoader'\nimport utc from 'dayjs/plugin/utc'\nimport { client } from '../../apollo/client'\nimport { TRANSACTIONS_QUERY_SKIPPABLE } from '../../apollo/queries'\nimport { Box, Flex, Text } from 'rebass'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport Link from '../Link'\nimport { Divider } from '../../components'\n\nimport { urls, formatTime, Big, formattedNum } from '../../helpers'\n\ndayjs.extend(utc)\n\nconst PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 2em;\n  margin-bottom: 2em;\n`\n\nconst Arrow = styled.div`\n  color: #2f80ed;\n  opacity: ${props => (props.faded ? 0.3 : 1)};\n  padding: 0 20px;\n  user-select: none;\n\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst List = styled(Box)`\n  -webkit-overflow-scrolling: touch;\n`\n\nconst DashGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 100px 1fr 1fr;\n  grid-template-areas: 'action value Time';\n  padding: 0 6px;\n\n  > * {\n    justify-content: flex-end;\n    width: 100%;\n\n    &:first-child {\n      justify-content: flex-start;\n      text-align: left;\n      width: 100px;\n    }\n  }\n\n  @media screen and (min-width: 40em) {\n    max-width: 1280px;\n    display: grid;\n    grid-gap: 1em;\n    grid-template-columns: 180px 1fr 1fr 1fr;\n    grid-template-areas: 'action value Account Time';\n\n    > * {\n      justify-content: flex-end;\n      width: 100%;\n\n      &:first-child {\n        justify-content: flex-start;\n        width: 180px;\n      }\n    }\n  }\n\n  @media screen and (min-width: 64em) {\n    max-width: 1280px;\n    display: grid;\n    padding: 0 24px;\n    grid-gap: 1em;\n    grid-template-columns: 1.2fr 1fr 1fr 1fr 1fr 1fr;\n    grid-template-areas: 'action value ethAmount tokenAmount Account Time';\n  }\n`\n\nconst ListWrapper = styled.div`\n  @media screen and (max-width: 40em) {\n    padding-right: 1rem;\n    padding-left: 1rem;\n  }\n`\n\nconst CustomLink = styled(Link)`\n  margin-left: 0px;\n`\n\nconst ClickableText = styled(Text)`\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n  user-select: none;\n`\n\nconst EmptyTxWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  height: 80px;\n  align-items: center;\n  justify-content: center;\n`\n\nconst DataText = styled(Flex)`\n  @media screen and (max-width: 40em) {\n    font-size: 14px;\n  }\n\n  align-items: center;\n  text-align: right;\n\n  & > * {\n    font-size: 1em;\n  }\n`\n\nconst SORT_FIELD = {\n  TIME: 'timestamp',\n  USD_VALUE: 'usdAmount',\n  ETH_VALUE: 'ethAmount',\n  TOKEN_VALUE: 'tokenAmount'\n}\n\n// @TODO rework into virtualized list\nfunction TransactionsList({ tokenSymbol, exchangeAddress, price, priceUSD, txFilter, accountInput }) {\n  const [txs, setTxs] = useState([])\n\n  const [swaps, SetSwaps] = useState([])\n\n  const [adds, SetAdds] = useState([])\n\n  const [removes, SetRemoves] = useState([])\n\n  const [filteredTxs, SetFilteredTxs] = useState([])\n\n  const [page, setPage] = useState(1)\n\n  const [maxPage, setMaxPage] = useState(1)\n\n  const TXS_PER_PAGE = 10\n\n  const [loading, setLoading] = useState(true)\n\n  const [sortDirection, setSortDirection] = useState(true)\n\n  const [sortedColumn, setSortedColumn] = useState(SORT_FIELD.TIME)\n\n  useEffect(() => {\n    setMaxPage(1)\n    setPage(1)\n  }, [exchangeAddress])\n\n  useEffect(() => {\n    let extraPages = 1\n    if (accountInput !== '') {\n      let foundAccounts = []\n      for (let x = 0; x < txs.length; x++) {\n        if (\n          txs[x].user\n            .toString()\n            .toUpperCase()\n            .search(accountInput.toUpperCase()) > -1\n        ) {\n          foundAccounts.push(txs[x])\n        }\n      }\n      SetFilteredTxs(foundAccounts)\n      if (foundAccounts.length % TXS_PER_PAGE === 0) {\n        extraPages = 0\n      }\n      setMaxPage(Math.floor(foundAccounts.length / TXS_PER_PAGE) + extraPages)\n    } else {\n      SetFilteredTxs(txs)\n      if (txs.length % TXS_PER_PAGE === 0) {\n        extraPages = 0\n      }\n      setMaxPage(Math.floor(txs.length / TXS_PER_PAGE) + extraPages)\n    }\n  }, [accountInput, txs])\n\n  function sortTxs(field) {\n    if (field === SORT_FIELD.USD_VALUE) {\n      field = SORT_FIELD.ETH_VALUE\n    }\n    let newTxs = filteredTxs\n      .slice()\n      .sort((a, b) =>\n        parseFloat(a[field]) > parseFloat(b[field]) ? (sortDirection ? -1 : 1) * -1 : (sortDirection ? -1 : 1) * 1\n      )\n    SetFilteredTxs(newTxs)\n    setPage(1)\n  }\n\n  useEffect(() => {\n    setSortDirection(true)\n    switch (txFilter) {\n      case 'Add':\n        SetFilteredTxs(adds)\n        setMaxPage(Math.floor(adds.length / TXS_PER_PAGE) + 1)\n        setPage(1)\n        break\n      case 'Remove':\n        SetFilteredTxs(removes)\n        setMaxPage(Math.floor(removes.length / TXS_PER_PAGE) + 1)\n        setPage(1)\n        break\n      case 'Swaps':\n        SetFilteredTxs(swaps)\n        setMaxPage(Math.floor(swaps.length / TXS_PER_PAGE) + 1)\n        setPage(1)\n        break\n      default:\n        SetFilteredTxs(txs)\n        setMaxPage(Math.floor(txs.length / TXS_PER_PAGE) + 1)\n        setPage(1)\n        break\n    }\n  }, [txFilter, adds, removes, swaps, txs])\n\n  /**\n   *  Fetch the overall and 24hour data for each exchange\n   *\n   * Update when exhcange changes\n   *\n   * Store results in categorized arrays for faster sorting\n   *\n   */\n  useEffect(() => {\n    setPage(1)\n    let ab = new AbortController()\n    setLoading(true)\n    async function getTxs() {\n      // current time\n      const utcEndTime = dayjs()\n      let utcStartTime\n      utcStartTime = utcEndTime.subtract(1, 'day')\n      let startTime = utcStartTime.unix() - 1 // -1 because we filter on greater than in the query\n      let data = []\n      let skipCount = 0\n      let fetchingData = true\n\n      while (fetchingData) {\n        ab = new AbortController()\n        let result = await client.query({\n          query: TRANSACTIONS_QUERY_SKIPPABLE,\n          variables: {\n            timestamp: startTime,\n            exchangeAddr: exchangeAddress,\n            skip: skipCount\n          },\n          fetchOptions: {\n            signal: ab.signal\n          },\n          fetchPolicy: 'network-only'\n        })\n        if (result) {\n          skipCount = skipCount + 100\n          if (\n            result.data.transactions.length === 0 ||\n            result.data.transactions[result.data.transactions.length - 1].timestamp < startTime\n          ) {\n            fetchingData = false\n          }\n          data = data.concat(result.data.transactions)\n        }\n      }\n\n      let ts = []\n      let newSwaps = []\n      let newAdds = []\n      let newRemoves = []\n      Object.keys(data).map((item, i) => {\n        if (data[item].timestamp > startTime) {\n          if (data[item].addLiquidityEvents.length > 0) {\n            let entry\n            let newItem = {\n              tx: data[item].id,\n              ethAmount: '',\n              tokenAmount: '',\n              user: data[item].user,\n              timestamp: data[item].timestamp\n            }\n            for (entry in data[item].addLiquidityEvents) {\n              newItem.ethAmount = data[item].addLiquidityEvents[entry].ethAmount\n              newItem.tokenAmount = data[item].addLiquidityEvents[entry].tokenAmount\n              newItem.event = 'AddLiquidity'\n              newAdds.push(newItem)\n              ts.push(newItem)\n            }\n          }\n          if (data[item].removeLiquidityEvents.length > 0) {\n            let entry\n            let newItem = {\n              tx: data[item].id,\n              ethAmount: '',\n              tokenAmount: '',\n              user: data[item].user,\n              timestamp: data[item].timestamp\n            }\n            for (entry in data[item].removeLiquidityEvents) {\n              newItem.ethAmount = data[item].removeLiquidityEvents[entry].ethAmount\n              newItem.tokenAmount = data[item].removeLiquidityEvents[entry].tokenAmount\n              newItem.event = 'RemoveLiquidity'\n              newRemoves.push(newItem)\n              ts.push(newItem)\n            }\n          }\n          if (data[item].tokenPurchaseEvents.length > 0) {\n            let entry\n            let newItem = {\n              tx: data[item].id,\n              ethAmount: '',\n              tokenAmount: '',\n              user: data[item].user,\n              timestamp: data[item].timestamp\n            }\n            for (entry in data[item].tokenPurchaseEvents) {\n              newItem.ethAmount = data[item].tokenPurchaseEvents[entry].ethAmount\n              newItem.tokenAmount = data[item].tokenPurchaseEvents[entry].tokenAmount\n              newItem.event = 'TokenPurchase'\n              newSwaps.push(newItem)\n              ts.push(newItem)\n            }\n          }\n          if (data[item].ethPurchaseEvents.length > 0) {\n            let entry\n            let newItem = {\n              tx: data[item].id,\n              ethAmount: '',\n              tokenAmount: '',\n              user: data[item].user,\n              timestamp: data[item].timestamp\n            }\n            for (entry in data[item].ethPurchaseEvents) {\n              newItem.ethAmount = data[item].ethPurchaseEvents[entry].ethAmount\n              newItem.tokenAmount = data[item].ethPurchaseEvents[entry].tokenAmount\n              newItem.event = 'EthPurchase'\n              newSwaps.push(newItem)\n              ts.push(newItem)\n            }\n          }\n        }\n        return true\n      })\n      setTxs(ts)\n      SetFilteredTxs(ts)\n      SetSwaps(newSwaps)\n      SetAdds(newAdds)\n      SetRemoves(newRemoves)\n      setLoading(false)\n      // setTxCount(ts.length)\n      setMaxPage(Math.floor(ts.length / TXS_PER_PAGE) + 1)\n    }\n    getTxs()\n\n    // cleanup graphql call\n    return function cleanup() {\n      ab.abort()\n    }\n  }, [exchangeAddress])\n\n  function getTransactionType(event, symbol) {\n    switch (event) {\n      case 'AddLiquidity':\n        return 'Add ETH and ' + symbol\n      case 'RemoveLiquidity':\n        return 'Remove ETH and ' + symbol\n      case 'Token Swap':\n        return 'Swap ' + symbol + ' for ETH'\n      case 'EthPurchase':\n        return 'Swap ' + symbol + ' for ETH'\n      case 'TokenPurchase':\n        return 'Swap ETH for ' + symbol\n\n      default:\n        return ''\n    }\n  }\n\n  const belowMedium = useMedia('(max-width: 64em)')\n\n  const belowSmall = useMedia('(max-width: 40em)')\n\n  const TransactionItem = ({ transaction, tokenSymbol }) => {\n    return (\n      <DashGrid style={{ height: '60px' }}>\n        <DataText area={'action'} color=\"text\" fontWeight=\"500\">\n          <CustomLink ml=\"3\" color=\"button\" external href={urls.showTransaction(transaction.tx.split('-')[0])}>\n            {getTransactionType(transaction.event, tokenSymbol)}\n          </CustomLink>\n        </DataText>\n        <DataText area={'value'}>\n          {price && priceUSD\n            ? '$' +\n              formattedNum(\n                Big(transaction.ethAmount) *\n                  price *\n                  priceUSD *\n                  (transaction.event === 'AddLiquidity' || transaction.event === 'RemoveLiquidity' ? 2 : 1),\n                true\n              )\n            : ''}\n        </DataText>\n        {!belowMedium ? (\n          <>\n            <DataText area={'ethAmount'}>{formattedNum(Big(transaction.ethAmount))}</DataText>\n            <DataText area={'tokenAmount'}>{formattedNum(Big(transaction.tokenAmount))}</DataText>\n          </>\n        ) : (\n          ''\n        )}\n        {!belowSmall ? (\n          <DataText area={'Account'}>\n            <Link ml=\"3\" color=\"button\" external href={'https://etherscan.io/address/' + transaction.user}>\n              {transaction.user.slice(0, 6) + '...' + transaction.user.slice(38, 42)}\n            </Link>\n          </DataText>\n        ) : (\n          ''\n        )}\n        <DataText area={'Time'}>{formatTime(transaction.timestamp)}</DataText>\n      </DashGrid>\n    )\n  }\n\n  return (\n    <ListWrapper>\n      <DashGrid center={true} style={{ height: '60px' }}>\n        <Flex alignItems=\"center\">\n          <Text color=\"text\" area={'action'}>\n            Transactions (24h)\n          </Text>\n        </Flex>\n        <Flex alignItems=\"center\">\n          <ClickableText\n            area={'value'}\n            color=\"textDim\"\n            onClick={e => {\n              setSortedColumn(SORT_FIELD.USD_VALUE)\n              setSortDirection(!sortDirection)\n              sortTxs(SORT_FIELD.USD_VALUE)\n            }}\n          >\n            Value {sortedColumn === SORT_FIELD.USD_VALUE ? (!sortDirection ? '↑' : '↓') : ''}\n          </ClickableText>\n        </Flex>\n        {!belowMedium ? (\n          <>\n            <Flex alignItems=\"center\">\n              <ClickableText\n                area={'ethAmount'}\n                color=\"textDim\"\n                onClick={e => {\n                  setSortedColumn(SORT_FIELD.ETH_VALUE)\n                  setSortDirection(!sortDirection)\n                  sortTxs(SORT_FIELD.ETH_VALUE)\n                }}\n              >\n                ETH Amount {sortedColumn === SORT_FIELD.ETH_VALUE ? (!sortDirection ? '↑' : '↓') : ''}\n              </ClickableText>\n            </Flex>\n            <Flex alignItems=\"center\">\n              <ClickableText\n                area={'tokenAmount'}\n                color=\"textDim\"\n                onClick={e => {\n                  setSortedColumn(SORT_FIELD.TOKEN_VALUE)\n                  setSortDirection(!sortDirection)\n                  sortTxs(SORT_FIELD.TOKEN_VALUE)\n                }}\n              >\n                Token Amount {sortedColumn === SORT_FIELD.TOKEN_VALUE ? (!sortDirection ? '↑' : '↓') : ''}\n              </ClickableText>\n            </Flex>\n          </>\n        ) : (\n          ''\n        )}\n        {!belowSmall ? (\n          <Flex alignItems=\"center\">\n            <Text area={'Account'} color=\"textDim\">\n              Account\n            </Text>\n          </Flex>\n        ) : (\n          ''\n        )}\n        <Flex alignItems=\"center\">\n          <ClickableText\n            area={'time'}\n            color=\"textDim\"\n            onClick={e => {\n              setSortedColumn(SORT_FIELD.TIME)\n              setSortDirection(!sortDirection)\n              sortTxs(SORT_FIELD.TIME)\n            }}\n          >\n            Time {sortedColumn === SORT_FIELD.TIME ? (!sortDirection ? '↑' : '↓') : ''}\n          </ClickableText>\n        </Flex>\n      </DashGrid>\n      <Divider />\n      <List p={0}>\n        {!loading && txs && filteredTxs.length === 0 ? (\n          <EmptyTxWrapper>No transactions in last 24 hours</EmptyTxWrapper>\n        ) : (\n          ''\n        )}\n        {loading ? (\n          <LocalLoader />\n        ) : (\n          filteredTxs.slice(TXS_PER_PAGE * (page - 1), page * TXS_PER_PAGE).map((tx, index) => {\n            return (\n              <div key={index}>\n                <TransactionItem key={index} transaction={tx} tokenSymbol={tokenSymbol} />\n                <Divider />\n              </div>\n            )\n          })\n        )}\n      </List>\n      <PageButtons>\n        <div\n          onClick={e => {\n            setPage(page === 1 ? page : page - 1)\n          }}\n        >\n          <Arrow faded={page === 1 ? true : false}>←</Arrow>\n        </div>\n        {'Page ' + page + ' of ' + maxPage}\n        <div\n          onClick={e => {\n            setPage(page === maxPage ? page : page + 1)\n          }}\n        >\n          <Arrow faded={page === maxPage ? true : false}>→</Arrow>\n        </div>\n      </PageButtons>\n    </ListWrapper>\n  )\n}\n\nTransactionsList.defaultProps = {\n  transactions: []\n}\n\nTransactionsList.propTypes = {\n  transactions: PropTypes.array.isRequired\n}\n\nexport default TransactionsList\n"]},"metadata":{},"sourceType":"module"}